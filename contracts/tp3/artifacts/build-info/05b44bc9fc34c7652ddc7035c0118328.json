{
	"id": "05b44bc9fc34c7652ddc7035c0118328",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tp3/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/utils/Pausable.sol\";\n\ncontract SimpleSwap is Pausable, Ownable {\n\n    uint private reserveA;\n    uint private reserveB;\n\n\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired,\n         uint amountAMin, uint amountBMin, address to, uint deadline) \n         external returns (uint amountA, uint amountB, uint liquidity){\n\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 186,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tp3/SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tp3/SimpleSwap.sol\":245:794  contract SimpleSwap is Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tp3/SimpleSwap.sol\":349:407  constructor(address initialOwner) Ownable(initialOwner) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tp3/SimpleSwap.sol\":391:403  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/tp3/SimpleSwap.sol\":349:407  constructor(address initialOwner) Ownable(initialOwner) {} */\n  pop\n    /* \"contracts/tp3/SimpleSwap.sol\":245:794  contract SimpleSwap is Pausable, Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/tp3/SimpleSwap.sol\":245:794  contract SimpleSwap is Pausable, Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tp3/SimpleSwap.sol\":245:794  contract SimpleSwap is Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe8e33700\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/tp3/SimpleSwap.sol\":478:541  function unpause() public onlyOwner {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/tp3/SimpleSwap.sol\":413:472  function pause() public onlyOwner {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_7:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tp3/SimpleSwap.sol\":547:792  function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired,... */\n    tag_8:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/tp3/SimpleSwap.sol\":478:541  function unpause() public onlyOwner {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/tp3/SimpleSwap.sol\":524:534  _unpause() */\n      tag_39\n        /* \"contracts/tp3/SimpleSwap.sol\":524:532  _unpause */\n      tag_40\n        /* \"contracts/tp3/SimpleSwap.sol\":524:534  _unpause() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/tp3/SimpleSwap.sol\":478:541  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_43\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_45\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":413:472  function pause() public onlyOwner {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_48\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/tp3/SimpleSwap.sol\":457:465  _pause() */\n      tag_50\n        /* \"contracts/tp3/SimpleSwap.sol\":457:463  _pause */\n      tag_51\n        /* \"contracts/tp3/SimpleSwap.sol\":457:465  _pause() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/tp3/SimpleSwap.sol\":413:472  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":547:792  function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired,... */\n    tag_28:\n        /* \"contracts/tp3/SimpleSwap.sol\":741:753  uint amountA */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":755:767  uint amountB */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":769:783  uint liquidity */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":547:792  function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired,... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_55\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_57\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_46\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_63\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_22\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_64\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_68\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_69\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2654:2659  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2693  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_75\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_76\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_78\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2444  _msgSender */\n      tag_62\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      tag_82\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2147  paused */\n      tag_14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_83\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_85\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_14\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_86\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:97   */\n    tag_87:\n        /* \"#utility.yul\":41:48   */\n      0x00\n        /* \"#utility.yul\":84:89   */\n      dup2\n        /* \"#utility.yul\":77:90   */\n      iszero\n        /* \"#utility.yul\":70:91   */\n      iszero\n        /* \"#utility.yul\":59:91   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:97   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":103:212   */\n    tag_88:\n        /* \"#utility.yul\":184:205   */\n      tag_104\n        /* \"#utility.yul\":199:204   */\n      dup2\n        /* \"#utility.yul\":184:205   */\n      tag_87\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":179:182   */\n      dup3\n        /* \"#utility.yul\":172:206   */\n      mstore\n        /* \"#utility.yul\":103:212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":218:428   */\n    tag_16:\n        /* \"#utility.yul\":305:309   */\n      0x00\n        /* \"#utility.yul\":343:345   */\n      0x20\n        /* \"#utility.yul\":332:341   */\n      dup3\n        /* \"#utility.yul\":328:346   */\n      add\n        /* \"#utility.yul\":320:346   */\n      swap1\n      pop\n        /* \"#utility.yul\":356:421   */\n      tag_106\n        /* \"#utility.yul\":418:419   */\n      0x00\n        /* \"#utility.yul\":407:416   */\n      dup4\n        /* \"#utility.yul\":403:420   */\n      add\n        /* \"#utility.yul\":394:400   */\n      dup5\n        /* \"#utility.yul\":356:421   */\n      tag_88\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":218:428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":434:560   */\n    tag_89:\n        /* \"#utility.yul\":471:478   */\n      0x00\n        /* \"#utility.yul\":511:553   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":504:509   */\n      dup3\n        /* \"#utility.yul\":500:554   */\n      and\n        /* \"#utility.yul\":489:554   */\n      swap1\n      pop\n        /* \"#utility.yul\":434:560   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":566:662   */\n    tag_90:\n        /* \"#utility.yul\":603:610   */\n      0x00\n        /* \"#utility.yul\":632:656   */\n      tag_109\n        /* \"#utility.yul\":650:655   */\n      dup3\n        /* \"#utility.yul\":632:656   */\n      tag_89\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":621:656   */\n      swap1\n      pop\n        /* \"#utility.yul\":566:662   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":668:786   */\n    tag_91:\n        /* \"#utility.yul\":755:779   */\n      tag_111\n        /* \"#utility.yul\":773:778   */\n      dup2\n        /* \"#utility.yul\":755:779   */\n      tag_90\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":750:753   */\n      dup3\n        /* \"#utility.yul\":743:780   */\n      mstore\n        /* \"#utility.yul\":668:786   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":792:1014   */\n    tag_24:\n        /* \"#utility.yul\":885:889   */\n      0x00\n        /* \"#utility.yul\":923:925   */\n      0x20\n        /* \"#utility.yul\":912:921   */\n      dup3\n        /* \"#utility.yul\":908:926   */\n      add\n        /* \"#utility.yul\":900:926   */\n      swap1\n      pop\n        /* \"#utility.yul\":936:1007   */\n      tag_113\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":936:1007   */\n      tag_91\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":792:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1101:1218   */\n    tag_93:\n        /* \"#utility.yul\":1210:1211   */\n      0x00\n        /* \"#utility.yul\":1207:1208   */\n      0x00\n        /* \"#utility.yul\":1200:1212   */\n      revert\n        /* \"#utility.yul\":1347:1469   */\n    tag_95:\n        /* \"#utility.yul\":1420:1444   */\n      tag_118\n        /* \"#utility.yul\":1438:1443   */\n      dup2\n        /* \"#utility.yul\":1420:1444   */\n      tag_90\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1413:1418   */\n      dup2\n        /* \"#utility.yul\":1410:1445   */\n      eq\n        /* \"#utility.yul\":1400:1463   */\n      tag_119\n      jumpi\n        /* \"#utility.yul\":1459:1460   */\n      0x00\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1449:1461   */\n      revert\n        /* \"#utility.yul\":1400:1463   */\n    tag_119:\n        /* \"#utility.yul\":1347:1469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1475:1614   */\n    tag_96:\n        /* \"#utility.yul\":1521:1526   */\n      0x00\n        /* \"#utility.yul\":1559:1565   */\n      dup2\n        /* \"#utility.yul\":1546:1566   */\n      calldataload\n        /* \"#utility.yul\":1537:1566   */\n      swap1\n      pop\n        /* \"#utility.yul\":1575:1608   */\n      tag_121\n        /* \"#utility.yul\":1602:1607   */\n      dup2\n        /* \"#utility.yul\":1575:1608   */\n      tag_95\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1475:1614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1620:1697   */\n    tag_97:\n        /* \"#utility.yul\":1657:1664   */\n      0x00\n        /* \"#utility.yul\":1686:1691   */\n      dup2\n        /* \"#utility.yul\":1675:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1620:1697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1825   */\n    tag_98:\n        /* \"#utility.yul\":1776:1800   */\n      tag_124\n        /* \"#utility.yul\":1794:1799   */\n      dup2\n        /* \"#utility.yul\":1776:1800   */\n      tag_97\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1769:1774   */\n      dup2\n        /* \"#utility.yul\":1766:1801   */\n      eq\n        /* \"#utility.yul\":1756:1819   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":1815:1816   */\n      0x00\n        /* \"#utility.yul\":1812:1813   */\n      0x00\n        /* \"#utility.yul\":1805:1817   */\n      revert\n        /* \"#utility.yul\":1756:1819   */\n    tag_125:\n        /* \"#utility.yul\":1703:1825   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1970   */\n    tag_99:\n        /* \"#utility.yul\":1877:1882   */\n      0x00\n        /* \"#utility.yul\":1915:1921   */\n      dup2\n        /* \"#utility.yul\":1902:1922   */\n      calldataload\n        /* \"#utility.yul\":1893:1922   */\n      swap1\n      pop\n        /* \"#utility.yul\":1931:1964   */\n      tag_127\n        /* \"#utility.yul\":1958:1963   */\n      dup2\n        /* \"#utility.yul\":1931:1964   */\n      tag_98\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":1831:1970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:3325   */\n    tag_27:\n        /* \"#utility.yul\":2098:2104   */\n      0x00\n        /* \"#utility.yul\":2106:2112   */\n      0x00\n        /* \"#utility.yul\":2114:2120   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      0x00\n        /* \"#utility.yul\":2130:2136   */\n      0x00\n        /* \"#utility.yul\":2138:2144   */\n      0x00\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2154:2160   */\n      0x00\n        /* \"#utility.yul\":2203:2206   */\n      0x0100\n        /* \"#utility.yul\":2191:2200   */\n      dup10\n        /* \"#utility.yul\":2182:2189   */\n      dup12\n        /* \"#utility.yul\":2178:2201   */\n      sub\n        /* \"#utility.yul\":2174:2207   */\n      slt\n        /* \"#utility.yul\":2171:2291   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2210:2289   */\n      tag_130\n      tag_93\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2171:2291   */\n    tag_129:\n        /* \"#utility.yul\":2330:2331   */\n      0x00\n        /* \"#utility.yul\":2355:2408   */\n      tag_131\n        /* \"#utility.yul\":2400:2407   */\n      dup12\n        /* \"#utility.yul\":2391:2397   */\n      dup3\n        /* \"#utility.yul\":2380:2389   */\n      dup13\n        /* \"#utility.yul\":2376:2398   */\n      add\n        /* \"#utility.yul\":2355:2408   */\n      tag_96\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":2345:2408   */\n      swap9\n      pop\n        /* \"#utility.yul\":2301:2418   */\n      pop\n        /* \"#utility.yul\":2457:2459   */\n      0x20\n        /* \"#utility.yul\":2483:2536   */\n      tag_132\n        /* \"#utility.yul\":2528:2535   */\n      dup12\n        /* \"#utility.yul\":2519:2525   */\n      dup3\n        /* \"#utility.yul\":2508:2517   */\n      dup13\n        /* \"#utility.yul\":2504:2526   */\n      add\n        /* \"#utility.yul\":2483:2536   */\n      tag_96\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2473:2536   */\n      swap8\n      pop\n        /* \"#utility.yul\":2428:2546   */\n      pop\n        /* \"#utility.yul\":2585:2587   */\n      0x40\n        /* \"#utility.yul\":2611:2664   */\n      tag_133\n        /* \"#utility.yul\":2656:2663   */\n      dup12\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2636:2645   */\n      dup13\n        /* \"#utility.yul\":2632:2654   */\n      add\n        /* \"#utility.yul\":2611:2664   */\n      tag_99\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2601:2664   */\n      swap7\n      pop\n        /* \"#utility.yul\":2556:2674   */\n      pop\n        /* \"#utility.yul\":2713:2715   */\n      0x60\n        /* \"#utility.yul\":2739:2792   */\n      tag_134\n        /* \"#utility.yul\":2784:2791   */\n      dup12\n        /* \"#utility.yul\":2775:2781   */\n      dup3\n        /* \"#utility.yul\":2764:2773   */\n      dup13\n        /* \"#utility.yul\":2760:2782   */\n      add\n        /* \"#utility.yul\":2739:2792   */\n      tag_99\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2729:2792   */\n      swap6\n      pop\n        /* \"#utility.yul\":2684:2802   */\n      pop\n        /* \"#utility.yul\":2841:2844   */\n      0x80\n        /* \"#utility.yul\":2868:2921   */\n      tag_135\n        /* \"#utility.yul\":2913:2920   */\n      dup12\n        /* \"#utility.yul\":2904:2910   */\n      dup3\n        /* \"#utility.yul\":2893:2902   */\n      dup13\n        /* \"#utility.yul\":2889:2911   */\n      add\n        /* \"#utility.yul\":2868:2921   */\n      tag_99\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":2858:2921   */\n      swap5\n      pop\n        /* \"#utility.yul\":2812:2931   */\n      pop\n        /* \"#utility.yul\":2970:2973   */\n      0xa0\n        /* \"#utility.yul\":2997:3050   */\n      tag_136\n        /* \"#utility.yul\":3042:3049   */\n      dup12\n        /* \"#utility.yul\":3033:3039   */\n      dup3\n        /* \"#utility.yul\":3022:3031   */\n      dup13\n        /* \"#utility.yul\":3018:3040   */\n      add\n        /* \"#utility.yul\":2997:3050   */\n      tag_99\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2987:3050   */\n      swap4\n      pop\n        /* \"#utility.yul\":2941:3060   */\n      pop\n        /* \"#utility.yul\":3099:3102   */\n      0xc0\n        /* \"#utility.yul\":3126:3179   */\n      tag_137\n        /* \"#utility.yul\":3171:3178   */\n      dup12\n        /* \"#utility.yul\":3162:3168   */\n      dup3\n        /* \"#utility.yul\":3151:3160   */\n      dup13\n        /* \"#utility.yul\":3147:3169   */\n      add\n        /* \"#utility.yul\":3126:3179   */\n      tag_96\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3116:3179   */\n      swap3\n      pop\n        /* \"#utility.yul\":3070:3189   */\n      pop\n        /* \"#utility.yul\":3228:3231   */\n      0xe0\n        /* \"#utility.yul\":3255:3308   */\n      tag_138\n        /* \"#utility.yul\":3300:3307   */\n      dup12\n        /* \"#utility.yul\":3291:3297   */\n      dup3\n        /* \"#utility.yul\":3280:3289   */\n      dup13\n        /* \"#utility.yul\":3276:3298   */\n      add\n        /* \"#utility.yul\":3255:3308   */\n      tag_99\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3245:3308   */\n      swap2\n      pop\n        /* \"#utility.yul\":3199:3318   */\n      pop\n        /* \"#utility.yul\":1976:3325   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3331:3449   */\n    tag_100:\n        /* \"#utility.yul\":3418:3442   */\n      tag_140\n        /* \"#utility.yul\":3436:3441   */\n      dup2\n        /* \"#utility.yul\":3418:3442   */\n      tag_97\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3413:3416   */\n      dup3\n        /* \"#utility.yul\":3406:3443   */\n      mstore\n        /* \"#utility.yul\":3331:3449   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3897   */\n    tag_30:\n        /* \"#utility.yul\":3604:3608   */\n      0x00\n        /* \"#utility.yul\":3642:3644   */\n      0x60\n        /* \"#utility.yul\":3631:3640   */\n      dup3\n        /* \"#utility.yul\":3627:3645   */\n      add\n        /* \"#utility.yul\":3619:3645   */\n      swap1\n      pop\n        /* \"#utility.yul\":3655:3726   */\n      tag_142\n        /* \"#utility.yul\":3723:3724   */\n      0x00\n        /* \"#utility.yul\":3712:3721   */\n      dup4\n        /* \"#utility.yul\":3708:3725   */\n      add\n        /* \"#utility.yul\":3699:3705   */\n      dup7\n        /* \"#utility.yul\":3655:3726   */\n      tag_100\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":3736:3808   */\n      tag_143\n        /* \"#utility.yul\":3804:3806   */\n      0x20\n        /* \"#utility.yul\":3793:3802   */\n      dup4\n        /* \"#utility.yul\":3789:3807   */\n      add\n        /* \"#utility.yul\":3780:3786   */\n      dup6\n        /* \"#utility.yul\":3736:3808   */\n      tag_100\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3818:3890   */\n      tag_144\n        /* \"#utility.yul\":3886:3888   */\n      0x40\n        /* \"#utility.yul\":3875:3884   */\n      dup4\n        /* \"#utility.yul\":3871:3889   */\n      add\n        /* \"#utility.yul\":3862:3868   */\n      dup5\n        /* \"#utility.yul\":3818:3890   */\n      tag_100\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3455:3897   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3903:4232   */\n    tag_33:\n        /* \"#utility.yul\":3962:3968   */\n      0x00\n        /* \"#utility.yul\":4011:4013   */\n      0x20\n        /* \"#utility.yul\":3999:4008   */\n      dup3\n        /* \"#utility.yul\":3990:3997   */\n      dup5\n        /* \"#utility.yul\":3986:4009   */\n      sub\n        /* \"#utility.yul\":3982:4014   */\n      slt\n        /* \"#utility.yul\":3979:4098   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4017:4096   */\n      tag_147\n      tag_93\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3979:4098   */\n    tag_146:\n        /* \"#utility.yul\":4137:4138   */\n      0x00\n        /* \"#utility.yul\":4162:4215   */\n      tag_148\n        /* \"#utility.yul\":4207:4214   */\n      dup5\n        /* \"#utility.yul\":4198:4204   */\n      dup3\n        /* \"#utility.yul\":4187:4196   */\n      dup6\n        /* \"#utility.yul\":4183:4205   */\n      add\n        /* \"#utility.yul\":4162:4215   */\n      tag_96\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4152:4215   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4225   */\n      pop\n        /* \"#utility.yul\":3903:4232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207da17b4c02a7496a10ca69dbf912664b0b42d0d38fb797c000dd22b6bfd97b6664736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 184,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:4",
										"nodeType": "YulBlock",
										"src": "0:1551:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "759:80:4",
													"nodeType": "YulBlock",
													"src": "759:80:4",
													"statements": [
														{
															"nativeSrc": "769:22:4",
															"nodeType": "YulAssignment",
															"src": "769:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:4"
																},
																"nativeSrc": "778:13:4",
																"nodeType": "YulFunctionCall",
																"src": "778:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:4"
																},
																"nativeSrc": "800:33:4",
																"nodeType": "YulFunctionCall",
																"src": "800:33:4"
															},
															"nativeSrc": "800:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:4",
														"nodeType": "YulTypedName",
														"src": "737:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:4",
														"nodeType": "YulTypedName",
														"src": "745:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:4",
														"nodeType": "YulTypedName",
														"src": "753:5:4",
														"type": ""
													}
												],
												"src": "696:143:4"
											},
											{
												"body": {
													"nativeSrc": "922:274:4",
													"nodeType": "YulBlock",
													"src": "922:274:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:4",
																"nodeType": "YulBlock",
																"src": "968:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:4"
																			},
																			"nativeSrc": "970:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:4"
																		},
																		"nativeSrc": "970:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:4"
																		},
																		"nativeSrc": "939:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:4",
																		"nodeType": "YulLiteral",
																		"src": "964:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:4"
																},
																"nativeSrc": "935:32:4",
																"nodeType": "YulFunctionCall",
																"src": "935:32:4"
															},
															"nativeSrc": "932:119:4",
															"nodeType": "YulIf",
															"src": "932:119:4"
														},
														{
															"nativeSrc": "1061:128:4",
															"nodeType": "YulBlock",
															"src": "1061:128:4",
															"statements": [
																{
																	"nativeSrc": "1076:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:4",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:4"
																				},
																				"nativeSrc": "1147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:4",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:4"
																		},
																		"nativeSrc": "1115:64:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:4",
														"nodeType": "YulTypedName",
														"src": "892:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:4",
														"nodeType": "YulTypedName",
														"src": "903:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:4",
														"nodeType": "YulTypedName",
														"src": "915:6:4",
														"type": ""
													}
												],
												"src": "845:351:4"
											},
											{
												"body": {
													"nativeSrc": "1267:53:4",
													"nodeType": "YulBlock",
													"src": "1267:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:4"
																		},
																		"nativeSrc": "1289:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:4"
																},
																"nativeSrc": "1277:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:4"
															},
															"nativeSrc": "1277:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:4",
														"nodeType": "YulTypedName",
														"src": "1255:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:4",
														"nodeType": "YulTypedName",
														"src": "1262:3:4",
														"type": ""
													}
												],
												"src": "1202:118:4"
											},
											{
												"body": {
													"nativeSrc": "1424:124:4",
													"nodeType": "YulBlock",
													"src": "1424:124:4",
													"statements": [
														{
															"nativeSrc": "1434:26:4",
															"nodeType": "YulAssignment",
															"src": "1434:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:4"
																},
																"nativeSrc": "1442:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:4"
																		},
																		"nativeSrc": "1523:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:4"
																},
																"nativeSrc": "1470:71:4",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:4"
															},
															"nativeSrc": "1470:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:4",
														"nodeType": "YulTypedName",
														"src": "1396:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:4",
														"nodeType": "YulTypedName",
														"src": "1408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:4",
														"nodeType": "YulTypedName",
														"src": "1419:4:4",
														"type": ""
													}
												],
												"src": "1326:222:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161093d38038061093d833981810160405281019061003191906101d9565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100999190610213565b60405180910390fd5b6100b1816100b860201b60201c565b505061022c565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101a88261017f565b9050919050565b6101b88161019e565b81146101c2575f5ffd5b50565b5f815190506101d3816101af565b92915050565b5f602082840312156101ee576101ed61017b565b5b5f6101fb848285016101c5565b91505092915050565b61020d8161019e565b82525050565b5f6020820190506102265f830184610204565b92915050565b610704806102395f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80638456cb59116100595780638456cb59146100b15780638da5cb5b146100bb578063e8e33700146100d9578063f2fde38b1461010b5761007b565b80633f4ba83a1461007f5780635c975abb14610089578063715018a6146100a7575b5f5ffd5b610087610127565b005b610091610139565b60405161009e91906104dc565b60405180910390f35b6100af61014d565b005b6100b9610160565b005b6100c3610172565b6040516100d09190610534565b60405180910390f35b6100f360048036038101906100ee91906105ae565b61019a565b6040516101029392919061066e565b60405180910390f35b610125600480360381019061012091906106a3565b6101ab565b005b61012f61022f565b6101376102b6565b565b5f5f5f9054906101000a900460ff16905090565b61015561022f565b61015e5f610316565b565b61016861022f565b6101706103d9565b565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f5f985098509895505050505050565b6101b361022f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610223575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161021a9190610534565b60405180910390fd5b61022c81610316565b50565b61023761043a565b73ffffffffffffffffffffffffffffffffffffffff16610255610172565b73ffffffffffffffffffffffffffffffffffffffff16146102b45761027861043a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102ab9190610534565b60405180910390fd5b565b6102be610441565b5f5f5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6102ff61043a565b60405161030c9190610534565b60405180910390a1565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6103e1610481565b60015f5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861042361043a565b6040516104309190610534565b60405180910390a1565b5f33905090565b610449610139565b61047f576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610489610139565b156104c0576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f8115159050919050565b6104d6816104c2565b82525050565b5f6020820190506104ef5f8301846104cd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051e826104f5565b9050919050565b61052e81610514565b82525050565b5f6020820190506105475f830184610525565b92915050565b5f5ffd5b61055a81610514565b8114610564575f5ffd5b50565b5f8135905061057581610551565b92915050565b5f819050919050565b61058d8161057b565b8114610597575f5ffd5b50565b5f813590506105a881610584565b92915050565b5f5f5f5f5f5f5f5f610100898b0312156105cb576105ca61054d565b5b5f6105d88b828c01610567565b98505060206105e98b828c01610567565b97505060406105fa8b828c0161059a565b965050606061060b8b828c0161059a565b955050608061061c8b828c0161059a565b94505060a061062d8b828c0161059a565b93505060c061063e8b828c01610567565b92505060e061064f8b828c0161059a565b9150509295985092959890939650565b6106688161057b565b82525050565b5f6060820190506106815f83018661065f565b61068e602083018561065f565b61069b604083018461065f565b949350505050565b5f602082840312156106b8576106b761054d565b5b5f6106c584828501610567565b9150509291505056fea26469706673582212207da17b4c02a7496a10ca69dbf912664b0b42d0d38fb797c000dd22b6bfd97b6664736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x93D CODESIZE SUB DUP1 PUSH2 0x93D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1D9 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x213 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0xB8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x22C JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A8 DUP3 PUSH2 0x17F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B8 DUP2 PUSH2 0x19E JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1D3 DUP2 PUSH2 0x1AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EE JUMPI PUSH2 0x1ED PUSH2 0x17B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB DUP5 DUP3 DUP6 ADD PUSH2 0x1C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D DUP2 PUSH2 0x19E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x226 PUSH0 DUP4 ADD DUP5 PUSH2 0x204 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x704 DUP1 PUSH2 0x239 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x160 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x22F JUMP JUMPDEST PUSH2 0x137 PUSH2 0x2B6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x22F JUMP JUMPDEST PUSH2 0x15E PUSH0 PUSH2 0x316 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x168 PUSH2 0x22F JUMP JUMPDEST PUSH2 0x170 PUSH2 0x3D9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x22F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x223 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x316 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x43A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x255 PUSH2 0x172 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B4 JUMPI PUSH2 0x278 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x441 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2FF PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x423 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x489 PUSH2 0x139 JUMP JUMPDEST ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D6 DUP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH0 DUP4 ADD DUP5 PUSH2 0x4CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51E DUP3 PUSH2 0x4F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52E DUP2 PUSH2 0x514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x547 PUSH0 DUP4 ADD DUP5 PUSH2 0x525 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x514 JUMP JUMPDEST DUP2 EQ PUSH2 0x564 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x575 DUP2 PUSH2 0x551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x57B JUMP JUMPDEST DUP2 EQ PUSH2 0x597 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A8 DUP2 PUSH2 0x584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x5CB JUMPI PUSH2 0x5CA PUSH2 0x54D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5D8 DUP12 DUP3 DUP13 ADD PUSH2 0x567 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x5E9 DUP12 DUP3 DUP13 ADD PUSH2 0x567 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x5FA DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x60B DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x61C DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x62D DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x63E DUP12 DUP3 DUP13 ADD PUSH2 0x567 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x64F DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x668 DUP2 PUSH2 0x57B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH0 DUP4 ADD DUP7 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x68E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x69B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0x54D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C5 DUP5 DUP3 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xA17B4C02A7496A10CA69DBF912664B0B42D0D38FB797C000DD22B6BFD97B PUSH7 0x64736F6C634300 ADDMOD SHL STOP CALLER ",
							"sourceMap": "245:549:3:-:0;;;349:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;391:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;349:58:3;245:549;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;245:549:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 559,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_159": {
									"entryPoint": 1082,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_268": {
									"entryPoint": 985,
									"id": 268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_239": {
									"entryPoint": 1153,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_252": {
									"entryPoint": 1089,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 790,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_284": {
									"entryPoint": 694,
									"id": 284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addLiquidity_352": {
									"entryPoint": 410,
									"id": 352,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@owner_67": {
									"entryPoint": 370,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_317": {
									"entryPoint": 352,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_227": {
									"entryPoint": 313,
									"id": 227,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 333,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 427,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_326": {
									"entryPoint": 295,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 1454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1357,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4235:4",
										"nodeType": "YulBlock",
										"src": "0:4235:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "49:48:4",
													"nodeType": "YulBlock",
													"src": "49:48:4",
													"statements": [
														{
															"nativeSrc": "59:32:4",
															"nodeType": "YulAssignment",
															"src": "59:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "84:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "84:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "77:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "77:6:4"
																		},
																		"nativeSrc": "77:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "77:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "70:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "70:6:4"
																},
																"nativeSrc": "70:21:4",
																"nodeType": "YulFunctionCall",
																"src": "70:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "59:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "59:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "31:5:4",
														"nodeType": "YulTypedName",
														"src": "31:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "41:7:4",
														"nodeType": "YulTypedName",
														"src": "41:7:4",
														"type": ""
													}
												],
												"src": "7:90:4"
											},
											{
												"body": {
													"nativeSrc": "162:50:4",
													"nodeType": "YulBlock",
													"src": "162:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "179:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "179:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "199:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "199:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "184:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "184:14:4"
																		},
																		"nativeSrc": "184:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "184:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "172:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "172:6:4"
																},
																"nativeSrc": "172:34:4",
																"nodeType": "YulFunctionCall",
																"src": "172:34:4"
															},
															"nativeSrc": "172:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "172:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "103:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "150:5:4",
														"nodeType": "YulTypedName",
														"src": "150:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "157:3:4",
														"nodeType": "YulTypedName",
														"src": "157:3:4",
														"type": ""
													}
												],
												"src": "103:109:4"
											},
											{
												"body": {
													"nativeSrc": "310:118:4",
													"nodeType": "YulBlock",
													"src": "310:118:4",
													"statements": [
														{
															"nativeSrc": "320:26:4",
															"nodeType": "YulAssignment",
															"src": "320:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "332:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "332:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "343:2:4",
																		"nodeType": "YulLiteral",
																		"src": "343:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "328:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "328:3:4"
																},
																"nativeSrc": "328:18:4",
																"nodeType": "YulFunctionCall",
																"src": "328:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "320:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "320:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "394:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "394:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "407:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "407:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "418:1:4",
																				"nodeType": "YulLiteral",
																				"src": "418:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "403:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "403:3:4"
																		},
																		"nativeSrc": "403:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "403:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "356:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "356:37:4"
																},
																"nativeSrc": "356:65:4",
																"nodeType": "YulFunctionCall",
																"src": "356:65:4"
															},
															"nativeSrc": "356:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "356:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "218:210:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "282:9:4",
														"nodeType": "YulTypedName",
														"src": "282:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "294:6:4",
														"nodeType": "YulTypedName",
														"src": "294:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "305:4:4",
														"nodeType": "YulTypedName",
														"src": "305:4:4",
														"type": ""
													}
												],
												"src": "218:210:4"
											},
											{
												"body": {
													"nativeSrc": "479:81:4",
													"nodeType": "YulBlock",
													"src": "479:81:4",
													"statements": [
														{
															"nativeSrc": "489:65:4",
															"nodeType": "YulAssignment",
															"src": "489:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "504:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "504:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "511:42:4",
																		"nodeType": "YulLiteral",
																		"src": "511:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:4"
																},
																"nativeSrc": "500:54:4",
																"nodeType": "YulFunctionCall",
																"src": "500:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "489:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "489:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "434:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "461:5:4",
														"nodeType": "YulTypedName",
														"src": "461:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "471:7:4",
														"nodeType": "YulTypedName",
														"src": "471:7:4",
														"type": ""
													}
												],
												"src": "434:126:4"
											},
											{
												"body": {
													"nativeSrc": "611:51:4",
													"nodeType": "YulBlock",
													"src": "611:51:4",
													"statements": [
														{
															"nativeSrc": "621:35:4",
															"nodeType": "YulAssignment",
															"src": "621:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "650:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "650:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "632:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "632:17:4"
																},
																"nativeSrc": "632:24:4",
																"nodeType": "YulFunctionCall",
																"src": "632:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "621:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "621:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "566:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "593:5:4",
														"nodeType": "YulTypedName",
														"src": "593:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "603:7:4",
														"nodeType": "YulTypedName",
														"src": "603:7:4",
														"type": ""
													}
												],
												"src": "566:96:4"
											},
											{
												"body": {
													"nativeSrc": "733:53:4",
													"nodeType": "YulBlock",
													"src": "733:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "750:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "750:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "773:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "773:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "755:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "755:17:4"
																		},
																		"nativeSrc": "755:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "755:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "743:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:4"
																},
																"nativeSrc": "743:37:4",
																"nodeType": "YulFunctionCall",
																"src": "743:37:4"
															},
															"nativeSrc": "743:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "743:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "668:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:4",
														"nodeType": "YulTypedName",
														"src": "721:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "728:3:4",
														"nodeType": "YulTypedName",
														"src": "728:3:4",
														"type": ""
													}
												],
												"src": "668:118:4"
											},
											{
												"body": {
													"nativeSrc": "890:124:4",
													"nodeType": "YulBlock",
													"src": "890:124:4",
													"statements": [
														{
															"nativeSrc": "900:26:4",
															"nodeType": "YulAssignment",
															"src": "900:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "912:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "912:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "923:2:4",
																		"nodeType": "YulLiteral",
																		"src": "923:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "908:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:4"
																},
																"nativeSrc": "908:18:4",
																"nodeType": "YulFunctionCall",
																"src": "908:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "900:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "900:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:4"
																		},
																		"nativeSrc": "989:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "936:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "936:43:4"
																},
																"nativeSrc": "936:71:4",
																"nodeType": "YulFunctionCall",
																"src": "936:71:4"
															},
															"nativeSrc": "936:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "936:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "792:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "862:9:4",
														"nodeType": "YulTypedName",
														"src": "862:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "874:6:4",
														"nodeType": "YulTypedName",
														"src": "874:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "885:4:4",
														"nodeType": "YulTypedName",
														"src": "885:4:4",
														"type": ""
													}
												],
												"src": "792:222:4"
											},
											{
												"body": {
													"nativeSrc": "1060:35:4",
													"nodeType": "YulBlock",
													"src": "1060:35:4",
													"statements": [
														{
															"nativeSrc": "1070:19:4",
															"nodeType": "YulAssignment",
															"src": "1070:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1086:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1086:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1080:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1080:5:4"
																},
																"nativeSrc": "1080:9:4",
																"nodeType": "YulFunctionCall",
																"src": "1080:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1070:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1070:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1020:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1053:6:4",
														"nodeType": "YulTypedName",
														"src": "1053:6:4",
														"type": ""
													}
												],
												"src": "1020:75:4"
											},
											{
												"body": {
													"nativeSrc": "1190:28:4",
													"nodeType": "YulBlock",
													"src": "1190:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1207:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1207:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1210:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1210:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1200:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:4"
																},
																"nativeSrc": "1200:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1200:12:4"
															},
															"nativeSrc": "1200:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1200:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1101:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1101:117:4"
											},
											{
												"body": {
													"nativeSrc": "1313:28:4",
													"nodeType": "YulBlock",
													"src": "1313:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1330:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1333:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1333:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1323:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:4"
																},
																"nativeSrc": "1323:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1323:12:4"
															},
															"nativeSrc": "1323:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "1323:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1224:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "1224:117:4"
											},
											{
												"body": {
													"nativeSrc": "1390:79:4",
													"nodeType": "YulBlock",
													"src": "1390:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1447:16:4",
																"nodeType": "YulBlock",
																"src": "1447:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1459:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1459:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1449:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:4"
																			},
																			"nativeSrc": "1449:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1449:12:4"
																		},
																		"nativeSrc": "1449:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1449:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1413:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1413:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1438:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1438:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1420:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1420:17:4"
																				},
																				"nativeSrc": "1420:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1420:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1410:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1410:2:4"
																		},
																		"nativeSrc": "1410:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1410:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1403:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:4"
																},
																"nativeSrc": "1403:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1403:43:4"
															},
															"nativeSrc": "1400:63:4",
															"nodeType": "YulIf",
															"src": "1400:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1347:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1383:5:4",
														"nodeType": "YulTypedName",
														"src": "1383:5:4",
														"type": ""
													}
												],
												"src": "1347:122:4"
											},
											{
												"body": {
													"nativeSrc": "1527:87:4",
													"nodeType": "YulBlock",
													"src": "1527:87:4",
													"statements": [
														{
															"nativeSrc": "1537:29:4",
															"nodeType": "YulAssignment",
															"src": "1537:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1559:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1559:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1546:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1546:12:4"
																},
																"nativeSrc": "1546:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1546:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1537:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1537:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1602:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1602:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1575:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1575:26:4"
																},
																"nativeSrc": "1575:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1575:33:4"
															},
															"nativeSrc": "1575:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1575:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1475:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1505:6:4",
														"nodeType": "YulTypedName",
														"src": "1505:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1513:3:4",
														"nodeType": "YulTypedName",
														"src": "1513:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1521:5:4",
														"nodeType": "YulTypedName",
														"src": "1521:5:4",
														"type": ""
													}
												],
												"src": "1475:139:4"
											},
											{
												"body": {
													"nativeSrc": "1665:32:4",
													"nodeType": "YulBlock",
													"src": "1665:32:4",
													"statements": [
														{
															"nativeSrc": "1675:16:4",
															"nodeType": "YulAssignment",
															"src": "1675:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1686:5:4",
																"nodeType": "YulIdentifier",
																"src": "1686:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1675:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1675:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1620:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:4",
														"nodeType": "YulTypedName",
														"src": "1647:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1657:7:4",
														"nodeType": "YulTypedName",
														"src": "1657:7:4",
														"type": ""
													}
												],
												"src": "1620:77:4"
											},
											{
												"body": {
													"nativeSrc": "1746:79:4",
													"nodeType": "YulBlock",
													"src": "1746:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1803:16:4",
																"nodeType": "YulBlock",
																"src": "1803:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1812:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1812:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1815:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1815:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1805:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1805:6:4"
																			},
																			"nativeSrc": "1805:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1805:12:4"
																		},
																		"nativeSrc": "1805:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1805:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1769:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1769:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1794:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1794:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1776:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1776:17:4"
																				},
																				"nativeSrc": "1776:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1776:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1766:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1766:2:4"
																		},
																		"nativeSrc": "1766:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1766:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1759:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1759:6:4"
																},
																"nativeSrc": "1759:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1759:43:4"
															},
															"nativeSrc": "1756:63:4",
															"nodeType": "YulIf",
															"src": "1756:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1703:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:4",
														"nodeType": "YulTypedName",
														"src": "1739:5:4",
														"type": ""
													}
												],
												"src": "1703:122:4"
											},
											{
												"body": {
													"nativeSrc": "1883:87:4",
													"nodeType": "YulBlock",
													"src": "1883:87:4",
													"statements": [
														{
															"nativeSrc": "1893:29:4",
															"nodeType": "YulAssignment",
															"src": "1893:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1915:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1915:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1902:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1902:12:4"
																},
																"nativeSrc": "1902:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1902:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1893:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1893:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1958:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1958:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1931:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1931:26:4"
																},
																"nativeSrc": "1931:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1931:33:4"
															},
															"nativeSrc": "1931:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1931:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1831:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1861:6:4",
														"nodeType": "YulTypedName",
														"src": "1861:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1869:3:4",
														"nodeType": "YulTypedName",
														"src": "1869:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1877:5:4",
														"nodeType": "YulTypedName",
														"src": "1877:5:4",
														"type": ""
													}
												],
												"src": "1831:139:4"
											},
											{
												"body": {
													"nativeSrc": "2161:1164:4",
													"nodeType": "YulBlock",
													"src": "2161:1164:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:83:4",
																"nodeType": "YulBlock",
																"src": "2208:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2210:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2210:77:4"
																			},
																			"nativeSrc": "2210:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:79:4"
																		},
																		"nativeSrc": "2210:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2182:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2182:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2191:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2191:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2178:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:4"
																		},
																		"nativeSrc": "2178:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2178:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2203:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2203:3:4",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2174:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:4"
																},
																"nativeSrc": "2174:33:4",
																"nodeType": "YulFunctionCall",
																"src": "2174:33:4"
															},
															"nativeSrc": "2171:120:4",
															"nodeType": "YulIf",
															"src": "2171:120:4"
														},
														{
															"nativeSrc": "2301:117:4",
															"nodeType": "YulBlock",
															"src": "2301:117:4",
															"statements": [
																{
																	"nativeSrc": "2316:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2316:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2330:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2330:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2320:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2320:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2345:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2345:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2380:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2380:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2391:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2391:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2376:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2376:3:4"
																				},
																				"nativeSrc": "2376:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2376:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2400:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2400:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2355:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2355:20:4"
																		},
																		"nativeSrc": "2355:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2345:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2345:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2428:118:4",
															"nodeType": "YulBlock",
															"src": "2428:118:4",
															"statements": [
																{
																	"nativeSrc": "2443:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2443:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2457:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2447:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2447:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2473:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2473:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2508:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2508:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2519:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2519:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2504:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2504:3:4"
																				},
																				"nativeSrc": "2504:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2504:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2528:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2528:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2483:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2483:20:4"
																		},
																		"nativeSrc": "2483:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2483:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2473:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2473:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2556:118:4",
															"nodeType": "YulBlock",
															"src": "2556:118:4",
															"statements": [
																{
																	"nativeSrc": "2571:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2571:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2585:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2575:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2575:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2601:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2601:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2636:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2636:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2647:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2647:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2632:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2632:3:4"
																				},
																				"nativeSrc": "2632:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2632:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2656:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2656:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2611:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2611:20:4"
																		},
																		"nativeSrc": "2611:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2601:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2601:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2684:118:4",
															"nodeType": "YulBlock",
															"src": "2684:118:4",
															"statements": [
																{
																	"nativeSrc": "2699:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2699:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2713:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2713:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2703:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2703:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2729:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2729:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2764:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2764:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2775:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2775:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2760:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2760:3:4"
																				},
																				"nativeSrc": "2760:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2760:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2784:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2784:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2739:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2739:20:4"
																		},
																		"nativeSrc": "2739:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2739:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2729:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2729:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2812:119:4",
															"nodeType": "YulBlock",
															"src": "2812:119:4",
															"statements": [
																{
																	"nativeSrc": "2827:17:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2827:17:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2841:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2841:3:4",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2831:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2831:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2858:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2858:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2893:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2893:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2904:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2904:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2889:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2889:3:4"
																				},
																				"nativeSrc": "2889:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2889:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2913:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2913:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2868:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2868:20:4"
																		},
																		"nativeSrc": "2868:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2868:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2858:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2858:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2941:119:4",
															"nodeType": "YulBlock",
															"src": "2941:119:4",
															"statements": [
																{
																	"nativeSrc": "2956:17:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2956:17:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2970:3:4",
																		"nodeType": "YulLiteral",
																		"src": "2970:3:4",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2960:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2960:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2987:63:4",
																	"nodeType": "YulAssignment",
																	"src": "2987:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3022:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3022:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3033:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3033:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3018:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3018:3:4"
																				},
																				"nativeSrc": "3018:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3018:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3042:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3042:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2997:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "2997:20:4"
																		},
																		"nativeSrc": "2997:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2997:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2987:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2987:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3070:119:4",
															"nodeType": "YulBlock",
															"src": "3070:119:4",
															"statements": [
																{
																	"nativeSrc": "3085:17:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3085:17:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3099:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3099:3:4",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3089:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3089:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3116:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3116:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3151:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3151:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3162:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3162:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3147:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3147:3:4"
																				},
																				"nativeSrc": "3147:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3147:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3171:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3171:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3126:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3126:20:4"
																		},
																		"nativeSrc": "3126:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3126:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "3116:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3116:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3199:119:4",
															"nodeType": "YulBlock",
															"src": "3199:119:4",
															"statements": [
																{
																	"nativeSrc": "3214:17:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3214:17:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3228:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3228:3:4",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3218:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3218:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3245:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3245:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3280:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3280:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3291:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3291:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3276:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3276:3:4"
																				},
																				"nativeSrc": "3276:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3276:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3300:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3300:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3255:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3255:20:4"
																		},
																		"nativeSrc": "3255:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3255:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "3245:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3245:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "1976:1349:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2075:9:4",
														"nodeType": "YulTypedName",
														"src": "2075:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2086:7:4",
														"nodeType": "YulTypedName",
														"src": "2086:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2098:6:4",
														"nodeType": "YulTypedName",
														"src": "2098:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2106:6:4",
														"nodeType": "YulTypedName",
														"src": "2106:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2114:6:4",
														"nodeType": "YulTypedName",
														"src": "2114:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2122:6:4",
														"nodeType": "YulTypedName",
														"src": "2122:6:4",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2130:6:4",
														"nodeType": "YulTypedName",
														"src": "2130:6:4",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2138:6:4",
														"nodeType": "YulTypedName",
														"src": "2138:6:4",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2146:6:4",
														"nodeType": "YulTypedName",
														"src": "2146:6:4",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "2154:6:4",
														"nodeType": "YulTypedName",
														"src": "2154:6:4",
														"type": ""
													}
												],
												"src": "1976:1349:4"
											},
											{
												"body": {
													"nativeSrc": "3396:53:4",
													"nodeType": "YulBlock",
													"src": "3396:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3413:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3436:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3436:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3418:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3418:17:4"
																		},
																		"nativeSrc": "3418:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3406:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3406:6:4"
																},
																"nativeSrc": "3406:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3406:37:4"
															},
															"nativeSrc": "3406:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3406:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3331:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3384:5:4",
														"nodeType": "YulTypedName",
														"src": "3384:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3391:3:4",
														"nodeType": "YulTypedName",
														"src": "3391:3:4",
														"type": ""
													}
												],
												"src": "3331:118:4"
											},
											{
												"body": {
													"nativeSrc": "3609:288:4",
													"nodeType": "YulBlock",
													"src": "3609:288:4",
													"statements": [
														{
															"nativeSrc": "3619:26:4",
															"nodeType": "YulAssignment",
															"src": "3619:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3631:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3642:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3627:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:4"
																},
																"nativeSrc": "3627:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3627:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3619:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3619:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3699:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3699:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3712:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3712:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3723:1:4",
																				"nodeType": "YulLiteral",
																				"src": "3723:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3708:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3708:3:4"
																		},
																		"nativeSrc": "3708:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3708:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3655:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3655:43:4"
																},
																"nativeSrc": "3655:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3655:71:4"
															},
															"nativeSrc": "3655:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3655:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3780:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3793:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3793:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3804:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3804:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3789:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:4"
																		},
																		"nativeSrc": "3789:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3789:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3736:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3736:43:4"
																},
																"nativeSrc": "3736:72:4",
																"nodeType": "YulFunctionCall",
																"src": "3736:72:4"
															},
															"nativeSrc": "3736:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "3736:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3862:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3862:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3875:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3875:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3886:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3886:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3871:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3871:3:4"
																		},
																		"nativeSrc": "3871:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3871:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3818:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3818:43:4"
																},
																"nativeSrc": "3818:72:4",
																"nodeType": "YulFunctionCall",
																"src": "3818:72:4"
															},
															"nativeSrc": "3818:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "3818:72:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3455:442:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3565:9:4",
														"nodeType": "YulTypedName",
														"src": "3565:9:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3577:6:4",
														"nodeType": "YulTypedName",
														"src": "3577:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3585:6:4",
														"nodeType": "YulTypedName",
														"src": "3585:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3593:6:4",
														"nodeType": "YulTypedName",
														"src": "3593:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3604:4:4",
														"nodeType": "YulTypedName",
														"src": "3604:4:4",
														"type": ""
													}
												],
												"src": "3455:442:4"
											},
											{
												"body": {
													"nativeSrc": "3969:263:4",
													"nodeType": "YulBlock",
													"src": "3969:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4015:83:4",
																"nodeType": "YulBlock",
																"src": "4015:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4017:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "4017:77:4"
																			},
																			"nativeSrc": "4017:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:79:4"
																		},
																		"nativeSrc": "4017:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4017:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3990:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3990:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3999:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3999:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3986:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:4"
																		},
																		"nativeSrc": "3986:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3986:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4011:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4011:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3982:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:4"
																},
																"nativeSrc": "3982:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3982:32:4"
															},
															"nativeSrc": "3979:119:4",
															"nodeType": "YulIf",
															"src": "3979:119:4"
														},
														{
															"nativeSrc": "4108:117:4",
															"nodeType": "YulBlock",
															"src": "4108:117:4",
															"statements": [
																{
																	"nativeSrc": "4123:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4123:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4137:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4137:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4127:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4127:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4152:63:4",
																	"nodeType": "YulAssignment",
																	"src": "4152:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4187:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4187:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4198:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4198:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4183:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4183:3:4"
																				},
																				"nativeSrc": "4183:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4183:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4207:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4207:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4162:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "4162:20:4"
																		},
																		"nativeSrc": "4162:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4162:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4152:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4152:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3903:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3939:9:4",
														"nodeType": "YulTypedName",
														"src": "3939:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3950:7:4",
														"nodeType": "YulTypedName",
														"src": "3950:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3962:6:4",
														"nodeType": "YulTypedName",
														"src": "3962:6:4",
														"type": ""
													}
												],
												"src": "3903:329:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80638456cb59116100595780638456cb59146100b15780638da5cb5b146100bb578063e8e33700146100d9578063f2fde38b1461010b5761007b565b80633f4ba83a1461007f5780635c975abb14610089578063715018a6146100a7575b5f5ffd5b610087610127565b005b610091610139565b60405161009e91906104dc565b60405180910390f35b6100af61014d565b005b6100b9610160565b005b6100c3610172565b6040516100d09190610534565b60405180910390f35b6100f360048036038101906100ee91906105ae565b61019a565b6040516101029392919061066e565b60405180910390f35b610125600480360381019061012091906106a3565b6101ab565b005b61012f61022f565b6101376102b6565b565b5f5f5f9054906101000a900460ff16905090565b61015561022f565b61015e5f610316565b565b61016861022f565b6101706103d9565b565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f5f5f985098509895505050505050565b6101b361022f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610223575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161021a9190610534565b60405180910390fd5b61022c81610316565b50565b61023761043a565b73ffffffffffffffffffffffffffffffffffffffff16610255610172565b73ffffffffffffffffffffffffffffffffffffffff16146102b45761027861043a565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102ab9190610534565b60405180910390fd5b565b6102be610441565b5f5f5f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6102ff61043a565b60405161030c9190610534565b60405180910390a1565b5f5f60019054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6103e1610481565b60015f5f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861042361043a565b6040516104309190610534565b60405180910390a1565b5f33905090565b610449610139565b61047f576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610489610139565b156104c0576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f8115159050919050565b6104d6816104c2565b82525050565b5f6020820190506104ef5f8301846104cd565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61051e826104f5565b9050919050565b61052e81610514565b82525050565b5f6020820190506105475f830184610525565b92915050565b5f5ffd5b61055a81610514565b8114610564575f5ffd5b50565b5f8135905061057581610551565b92915050565b5f819050919050565b61058d8161057b565b8114610597575f5ffd5b50565b5f813590506105a881610584565b92915050565b5f5f5f5f5f5f5f5f610100898b0312156105cb576105ca61054d565b5b5f6105d88b828c01610567565b98505060206105e98b828c01610567565b97505060406105fa8b828c0161059a565b965050606061060b8b828c0161059a565b955050608061061c8b828c0161059a565b94505060a061062d8b828c0161059a565b93505060c061063e8b828c01610567565b92505060e061064f8b828c0161059a565b9150509295985092959890939650565b6106688161057b565b82525050565b5f6060820190506106815f83018661065f565b61068e602083018561065f565b61069b604083018461065f565b949350505050565b5f602082840312156106b8576106b761054d565b5b5f6106c584828501610567565b9150509291505056fea26469706673582212207da17b4c02a7496a10ca69dbf912664b0b42d0d38fb797c000dd22b6bfd97b6664736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x10B JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x91 PUSH2 0x139 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAF PUSH2 0x14D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB9 PUSH2 0x160 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0x172 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0x5AE JUMP JUMPDEST PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x6A3 JUMP JUMPDEST PUSH2 0x1AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x22F JUMP JUMPDEST PUSH2 0x137 PUSH2 0x2B6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x22F JUMP JUMPDEST PUSH2 0x15E PUSH0 PUSH2 0x316 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x168 PUSH2 0x22F JUMP JUMPDEST PUSH2 0x170 PUSH2 0x3D9 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1B3 PUSH2 0x22F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x223 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x316 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x237 PUSH2 0x43A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x255 PUSH2 0x172 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2B4 JUMPI PUSH2 0x278 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x2BE PUSH2 0x441 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2FF PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x3E1 PUSH2 0x481 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x423 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x534 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x449 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x489 PUSH2 0x139 JUMP JUMPDEST ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4D6 DUP2 PUSH2 0x4C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4EF PUSH0 DUP4 ADD DUP5 PUSH2 0x4CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x51E DUP3 PUSH2 0x4F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52E DUP2 PUSH2 0x514 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x547 PUSH0 DUP4 ADD DUP5 PUSH2 0x525 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x55A DUP2 PUSH2 0x514 JUMP JUMPDEST DUP2 EQ PUSH2 0x564 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x575 DUP2 PUSH2 0x551 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58D DUP2 PUSH2 0x57B JUMP JUMPDEST DUP2 EQ PUSH2 0x597 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5A8 DUP2 PUSH2 0x584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x5CB JUMPI PUSH2 0x5CA PUSH2 0x54D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5D8 DUP12 DUP3 DUP13 ADD PUSH2 0x567 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x5E9 DUP12 DUP3 DUP13 ADD PUSH2 0x567 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x5FA DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x60B DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x61C DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x62D DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x63E DUP12 DUP3 DUP13 ADD PUSH2 0x567 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x64F DUP12 DUP3 DUP13 ADD PUSH2 0x59A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x668 DUP2 PUSH2 0x57B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH0 DUP4 ADD DUP7 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x68E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x65F JUMP JUMPDEST PUSH2 0x69B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B7 PUSH2 0x54D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6C5 DUP5 DUP3 DUP6 ADD PUSH2 0x567 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH30 0xA17B4C02A7496A10CA69DBF912664B0B42D0D38FB797C000DD22B6BFD97B PUSH7 0x64736F6C634300 ADDMOD SHL STOP CALLER ",
							"sourceMap": "245:549:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:63;;;:::i;:::-;;1726:84:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;413:59:3;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;547:245:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;478:63:3;1531:13:0;:11;:13::i;:::-;524:10:3::1;:8;:10::i;:::-;478:63::o:0;1726:84:2:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;413:59:3:-;1531:13:0;:11;:13::i;:::-;457:8:3::1;:6;:8::i;:::-;413:59::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;547:245:3:-;741:12;755;769:14;547:245;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2586:117:2:-;1597:16;:14;:16::i;:::-;2654:5:::1;2644:7;;:15;;;;;;;;;;;;;;;;;;2674:22;2683:12;:10;:12::i;:::-;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2339:115:2:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7;;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;656:96:1:-;709:7;735:10;728:17;;656:96;:::o;2078:126:2:-;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;;;;;;;;;;;;;2136:62;2078:126::o;1878:128::-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;7:90:4:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o;1101:117::-;1210:1;1207;1200:12;1347:122;1420:24;1438:5;1420:24;:::i;:::-;1413:5;1410:35;1400:63;;1459:1;1456;1449:12;1400:63;1347:122;:::o;1475:139::-;1521:5;1559:6;1546:20;1537:29;;1575:33;1602:5;1575:33;:::i;:::-;1475:139;;;;:::o;1620:77::-;1657:7;1686:5;1675:16;;1620:77;;;:::o;1703:122::-;1776:24;1794:5;1776:24;:::i;:::-;1769:5;1766:35;1756:63;;1815:1;1812;1805:12;1756:63;1703:122;:::o;1831:139::-;1877:5;1915:6;1902:20;1893:29;;1931:33;1958:5;1931:33;:::i;:::-;1831:139;;;;:::o;1976:1349::-;2098:6;2106;2114;2122;2130;2138;2146;2154;2203:3;2191:9;2182:7;2178:23;2174:33;2171:120;;;2210:79;;:::i;:::-;2171:120;2330:1;2355:53;2400:7;2391:6;2380:9;2376:22;2355:53;:::i;:::-;2345:63;;2301:117;2457:2;2483:53;2528:7;2519:6;2508:9;2504:22;2483:53;:::i;:::-;2473:63;;2428:118;2585:2;2611:53;2656:7;2647:6;2636:9;2632:22;2611:53;:::i;:::-;2601:63;;2556:118;2713:2;2739:53;2784:7;2775:6;2764:9;2760:22;2739:53;:::i;:::-;2729:63;;2684:118;2841:3;2868:53;2913:7;2904:6;2893:9;2889:22;2868:53;:::i;:::-;2858:63;;2812:119;2970:3;2997:53;3042:7;3033:6;3022:9;3018:22;2997:53;:::i;:::-;2987:63;;2941:119;3099:3;3126:53;3171:7;3162:6;3151:9;3147:22;3126:53;:::i;:::-;3116:63;;3070:119;3228:3;3255:53;3300:7;3291:6;3280:9;3276:22;3255:53;:::i;:::-;3245:63;;3199:119;1976:1349;;;;;;;;;;;:::o;3331:118::-;3418:24;3436:5;3418:24;:::i;:::-;3413:3;3406:37;3331:118;;:::o;3455:442::-;3604:4;3642:2;3631:9;3627:18;3619:26;;3655:71;3723:1;3712:9;3708:17;3699:6;3655:71;:::i;:::-;3736:72;3804:2;3793:9;3789:18;3780:6;3736:72;:::i;:::-;3818;3886:2;3875:9;3871:18;3862:6;3818:72;:::i;:::-;3455:442;;;;;;:::o;3903:329::-;3962:6;4011:2;3999:9;3990:7;3986:23;3982:32;3979:119;;;4017:79;;:::i;:::-;3979:119;4137:1;4162:53;4207:7;4198:6;4187:9;4183:22;4162:53;:::i;:::-;4152:63;;4108:117;3903:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "359200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"owner()": "2587",
								"pause()": "infinite",
								"paused()": "2495",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 349,
									"end": 407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 349,
									"end": 407,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 349,
									"end": 407,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 391,
									"end": 403,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 349,
									"end": 407,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 245,
									"end": 794,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 245,
									"end": 794,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 794,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207da17b4c02a7496a10ca69dbf912664b0b42d0d38fb797c000dd22b6bfd97b6664736f6c634300081b0033",
									".code": [
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "8456CB59"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "8456CB59"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "E8E33700"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "3F4BA83A"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "5C975ABB"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 245,
											"end": 794,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 478,
											"end": 541,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 478,
											"end": 541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 541,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 478,
											"end": 541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 478,
											"end": 541,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 478,
											"end": 541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 541,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 472,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 413,
											"end": 472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 413,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 413,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 413,
											"end": 472,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 413,
											"end": 472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 413,
											"end": 472,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 547,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 547,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 547,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 547,
											"end": 792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 478,
											"end": 541,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 478,
											"end": 541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 524,
											"end": 534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 524,
											"end": 532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 534,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 534,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 524,
											"end": 534,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 478,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 413,
											"end": 472,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 472,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 457,
											"end": 465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 457,
											"end": 463,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 457,
											"end": 465,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 457,
											"end": 465,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 457,
											"end": 465,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 413,
											"end": 472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 547,
											"end": 792,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 741,
											"end": 753,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 783,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 547,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2654,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2683,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2683,
											"end": 2695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2427,
											"end": 2447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2141,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2078,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 97,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 7,
											"end": 97,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 41,
											"end": 48,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 89,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 77,
											"end": 90,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 70,
											"end": 91,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 59,
											"end": 91,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 59,
											"end": 91,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 97,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 97,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 97,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 103,
											"end": 212,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 103,
											"end": 212,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 199,
											"end": 204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 184,
											"end": 205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 184,
											"end": 205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 184,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 184,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 179,
											"end": 182,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 172,
											"end": 206,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 103,
											"end": 212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 103,
											"end": 212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 218,
											"end": 428,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 218,
											"end": 428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 305,
											"end": 309,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 328,
											"end": 346,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 320,
											"end": 346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 320,
											"end": 346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 416,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 403,
											"end": 420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 394,
											"end": 400,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 356,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 356,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 356,
											"end": 421,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 356,
											"end": 421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 218,
											"end": 428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 218,
											"end": 428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 218,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 434,
											"end": 560,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 434,
											"end": 560,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 471,
											"end": 478,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 511,
											"end": 553,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 504,
											"end": 509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 500,
											"end": 554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 489,
											"end": 554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 434,
											"end": 560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 434,
											"end": 560,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 434,
											"end": 560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 566,
											"end": 662,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 566,
											"end": 662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 603,
											"end": 610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 650,
											"end": 655,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 632,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 656,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 632,
											"end": 656,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 621,
											"end": 656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 621,
											"end": 656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 566,
											"end": 662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 566,
											"end": 662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 566,
											"end": 662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 668,
											"end": 786,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 668,
											"end": 786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 755,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 755,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 755,
											"end": 779,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 755,
											"end": 779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 750,
											"end": 753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 743,
											"end": 780,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 668,
											"end": 786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 668,
											"end": 786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 885,
											"end": 889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 912,
											"end": 921,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 908,
											"end": 926,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 900,
											"end": 926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 900,
											"end": 926,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 936,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 936,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 792,
											"end": 1014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 792,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1101,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1212,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1438,
											"end": 1443,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 1420,
											"end": 1444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 1420,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1410,
											"end": 1445,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1460,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1461,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1400,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1469,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1521,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1565,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1537,
											"end": 1566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1602,
											"end": 1607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 1575,
											"end": 1608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1575,
											"end": 1608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1614,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1697,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1620,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1675,
											"end": 1691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1697,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1703,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1794,
											"end": 1799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1776,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1776,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1766,
											"end": 1801,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1756,
											"end": 1819,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1817,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1756,
											"end": 1819,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1756,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1825,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1703,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1970,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1831,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1921,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1902,
											"end": 1922,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1893,
											"end": 1922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1958,
											"end": 1963,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 1931,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1964,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1931,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1970,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2114,
											"end": 2120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2206,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2191,
											"end": 2200,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2178,
											"end": 2201,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2207,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2171,
											"end": 2291,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2171,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2171,
											"end": 2291,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2210,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2210,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2210,
											"end": 2289,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2210,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2171,
											"end": 2291,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2171,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2330,
											"end": 2331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2400,
											"end": 2407,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2398,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2355,
											"end": 2408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2408,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2355,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2301,
											"end": 2418,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2483,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2526,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2483,
											"end": 2536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2483,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2536,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2536,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2428,
											"end": 2546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2656,
											"end": 2663,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2636,
											"end": 2645,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2632,
											"end": 2654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2611,
											"end": 2664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2664,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2611,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2664,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2664,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2715,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2739,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2784,
											"end": 2791,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2781,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2760,
											"end": 2782,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2739,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2792,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2739,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2792,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2729,
											"end": 2792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2684,
											"end": 2802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2844,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2868,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2913,
											"end": 2920,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2902,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2911,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2868,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2868,
											"end": 2921,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2868,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2921,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2970,
											"end": 2973,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3042,
											"end": 3049,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3031,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 3018,
											"end": 3040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2997,
											"end": 3050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2997,
											"end": 3050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2987,
											"end": 3050,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2987,
											"end": 3050,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3099,
											"end": 3102,
											"name": "PUSH",
											"source": 4,
											"value": "C0"
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3151,
											"end": 3160,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3126,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3126,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3179,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3179,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3070,
											"end": 3189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3228,
											"end": 3231,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3255,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3300,
											"end": 3307,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3280,
											"end": 3289,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 3276,
											"end": 3298,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3255,
											"end": 3308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3308,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3255,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3308,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3308,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 3325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3449,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3331,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3418,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3442,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3418,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3413,
											"end": 3416,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3443,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3631,
											"end": 3640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3645,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3645,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3619,
											"end": 3645,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3723,
											"end": 3724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3725,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3699,
											"end": 3705,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3655,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3655,
											"end": 3726,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3655,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3789,
											"end": 3807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3736,
											"end": 3808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3736,
											"end": 3808,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 3736,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3886,
											"end": 3888,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3871,
											"end": 3889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3818,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3890,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3818,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3903,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3962,
											"end": 3968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4011,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4014,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4098,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3979,
											"end": 4098,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4017,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4017,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4017,
											"end": 4096,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4017,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3979,
											"end": 4098,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3979,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4137,
											"end": 4138,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4207,
											"end": 4214,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4196,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4183,
											"end": 4205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4162,
											"end": 4215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4215,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4162,
											"end": 4215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4215,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4152,
											"end": 4215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4108,
											"end": 4225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 4232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"contracts/tp3/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tp3/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"contracts/tp3/SimpleSwap.sol\":{\"keccak256\":\"0xc2b7191abcc6afeb7d87e921938e0ae7665db30d280fd05a8b1c3022672c5d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a3c7568c26e5a304bb66ee2b65f470c0ddd63e29f267c089d4cb53826563fcf\",\"dweb:/ipfs/QmZ1C8ao3hkJ3feZmq6t7K5nNsigs9Y81ZJfejbQfMYEtP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 186,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 297,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "reserveA",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 299,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "reserveB",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 178,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								177
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							177
						]
					},
					"id": 178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 177,
							"linearizedBaseContracts": [
								177
							],
							"name": "Context",
							"nameLocation": "642:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "718:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 155,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 154,
												"id": 157,
												"nodeType": "Return",
												"src": "728:17:1"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "709:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:1"
									},
									"scope": 177,
									"src": "656:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "825:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 164,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:1",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 163,
												"id": 166,
												"nodeType": "Return",
												"src": "835:15:1"
											}
										]
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:1"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "809:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:1"
									},
									"scope": 177,
									"src": "758:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "935:25:1",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "945:8:1"
											}
										]
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:1"
									},
									"scope": 177,
									"src": "863:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 178,
							"src": "624:338:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							177
						],
						"Pausable": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 286,
							"sourceUnit": 178,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 180,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 177,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Context",
										"nameLocations": [
											"645:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 177,
										"src": "645:7:2"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285,
								177
							],
							"name": "Pausable",
							"nameLocation": "633:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 186,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "659:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 185,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 191,
									"name": "Paused",
									"nameLocation": "770:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "777:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:2"
									},
									"src": "764:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 196,
									"name": "Unpaused",
									"nameLocation": "881:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "890:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:2"
									},
									"src": "875:32:2"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:2",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 199,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:2"
									},
									"src": "994:22:2"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:2",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 202,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:2"
									},
									"src": "1107:22:2"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "1340:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 205,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "1350:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:2"
											},
											{
												"id": 208,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:2"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 210,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:2"
									},
									"src": "1315:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1587:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 213,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "1597:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:2"
											},
											{
												"id": 216,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:2"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 218,
									"name": "whenPaused",
									"nameLocation": "1574:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:2"
									},
									"src": "1565:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1779:31:2",
										"statements": [
											{
												"expression": {
													"id": 224,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 186,
													"src": "1796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 223,
												"id": 225,
												"nodeType": "Return",
												"src": "1789:14:2"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1773:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:2"
									},
									"scope": 285,
									"src": "1726:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1929:77:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 231,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "1943:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "IfStatement",
												"src": "1939:61:2",
												"trueBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "1953:47:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 233,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1974:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 235,
															"nodeType": "RevertStatement",
															"src": "1967:22:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:2"
									},
									"scope": 285,
									"src": "1878:128:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2126:78:2",
										"statements": [
											{
												"condition": {
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:2",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 243,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "2141:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "2136:62:2",
												"trueBody": {
													"id": 249,
													"nodeType": "Block",
													"src": "2151:47:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 246,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "2172:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 248,
															"nodeType": "RevertStatement",
															"src": "2165:22:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:2"
									},
									"scope": 285,
									"src": "2078:126:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "2388:66:2",
										"statements": [
											{
												"expression": {
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 258,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2398:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 263,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2434:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 262,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2427:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "2422:25:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 255,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 210,
												"src": "2374:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:2"
									},
									"scope": 285,
									"src": "2339:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "2634:69:2",
										"statements": [
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "2644:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 279,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "2683:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 278,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "2674:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "EmitStatement",
												"src": "2669:27:2"
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 271,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 218,
												"src": "2623:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:2"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:2"
									},
									"scope": 285,
									"src": "2586:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 286,
							"src": "615:2090:2",
							"usedErrors": [
								199,
								202
							],
							"usedEvents": [
								191,
								196
							]
						}
					],
					"src": "102:2604:2"
				},
				"id": 2
			},
			"contracts/tp3/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/tp3/SimpleSwap.sol",
					"exportedSymbols": {
						"Ownable": [
							147
						],
						"Pausable": [
							285
						],
						"SimpleSwap": [
							353
						]
					},
					"id": 354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 289,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 148,
							"src": "107:67:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 288,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "115:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 354,
							"sourceUnit": 286,
							"src": "175:68:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 290,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 285,
										"src": "183:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 292,
										"name": "Pausable",
										"nameLocations": [
											"268:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 285,
										"src": "268:8:3"
									},
									"id": 293,
									"nodeType": "InheritanceSpecifier",
									"src": "268:8:3"
								},
								{
									"baseName": {
										"id": 294,
										"name": "Ownable",
										"nameLocations": [
											"278:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "278:7:3"
									},
									"id": 295,
									"nodeType": "InheritanceSpecifier",
									"src": "278:7:3"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 353,
							"linearizedBaseContracts": [
								353,
								147,
								285,
								177
							],
							"name": "SimpleSwap",
							"nameLocation": "254:10:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 297,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "306:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "293:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 296,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "293:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "333:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 353,
									"src": "320:21:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 298,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "320:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "405:2:3",
										"statements": []
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 304,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "391:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 305,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 303,
												"name": "Ownable",
												"nameLocations": [
													"383:7:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "383:7:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "383:21:3"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "369:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "361:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:22:3"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:0:3"
									},
									"scope": 353,
									"src": "349:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "447:25:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 313,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "457:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "457:8:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "457:8:3"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 310,
												"name": "onlyOwner",
												"nameLocations": [
													"437:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "437:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "437:9:3"
										}
									],
									"name": "pause",
									"nameLocation": "422:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "427:2:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:0:3"
									},
									"scope": 353,
									"src": "413:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "514:27:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "524:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:10:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "524:10:3"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 320,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 319,
												"name": "onlyOwner",
												"nameLocations": [
													"504:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "504:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "504:9:3"
										}
									],
									"name": "unpause",
									"nameLocation": "487:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "494:2:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:0:3"
									},
									"scope": 353,
									"src": "478:63:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "784:8:3",
										"statements": []
									},
									"functionSelector": "e8e33700",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "556:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "577:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "569:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "593:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "585:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "606:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "601:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "601:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "627:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "622:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "622:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "657:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "652:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "674:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "669:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "694:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "686:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "703:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "698:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:144:3"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "746:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "741:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "741:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "760:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "755:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "774:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "769:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "769:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:44:3"
									},
									"scope": 353,
									"src": "547:245:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 354,
							"src": "245:549:3",
							"usedErrors": [
								13,
								18,
								199,
								202
							],
							"usedEvents": [
								24,
								191,
								196
							]
						}
					],
					"src": "81:714:3"
				},
				"id": 3
			}
		}
	}
}