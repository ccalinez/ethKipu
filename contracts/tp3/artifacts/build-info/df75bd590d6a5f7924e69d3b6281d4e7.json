{
	"id": "df75bd590d6a5f7924e69d3b6281d4e7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tp3/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.27;\n\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ERC20Pausable} from \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n\ncontract SimpleSwap is ERC20, ERC20Pausable, Ownable {\n    constructor(address initialOwner)\n        ERC20(\"LiquidityToken\", \"LTK\")\n        Ownable(initialOwner)\n    {}\n\n    uint256 private reserveA;\n    uint256 private reserveB;\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _update(address from, address to, uint256 value)\n        internal\n        override(ERC20, ERC20Pausable)\n    {\n        super._update(from, to, value);\n    }\n\n    /**\n    *  Given some asset amount and reserves, returns an amount of the other asset representing equivalent value.\n    */\n    function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB){\n        return ((amountA * reserveB) / (reserveA + amountA));\n    }\n\n\n    function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, \n        uint amountAMin, uint amountBMin, address to, uint deadline) \n        external returns (uint amountA, uint amountB, uint liquidity){\n        // validacion de parametros\n        require(tokenA != address(0) && tokenB != address(0), \"Invalid token addresses!\");\n        require(to != address(0), \"Invalid recipient address\");\n        require((amountADesired <= 0 || amountBDesired <= 0),\"Invalid input parameters!\"); \n\n        (amountA, amountB) = calculateLiquidityAmounts(amountADesired, amountBDesired);\n        require((amountA > amountAMin),\"Not meet the minimum for TokenA!\");\n        require((amountB > amountBMin),\"Not meet the minimum for TokenB!\");\n\n        // validacion disponibilidad de fondos\n        require(ERC20(tokenA).balanceOf(msg.sender) >= amountA, \"Insufficient TokenA funds!\");\n        require(ERC20(tokenB).balanceOf(msg.sender) >= amountB, \"Insufficient TokenB funds!\");\n        \n        reserveA += amountA;\n        reserveB += amountB;\n\n        ERC20(tokenA).transferFrom(msg.sender, address(this), amountA);\n        ERC20(tokenB).transferFrom(msg.sender, address(this), amountB);\n\n        liquidity = calculateLiquidityToken(amountA, amountB);\n        this.transfer(msg.sender, liquidity);\n       require(deadline > block.timestamp, \"Deadline reached!\");\n    }\n\n    function calculateLiquidityAmounts(uint amountADesired, uint amountBDesired) internal view\n        returns (uint amountA, uint amountB) {\n        if (reserveA == 0 && reserveB == 0) {\n            return (amountADesired, amountBDesired);\n        }\n        uint amountBOptimal = (amountADesired * reserveB) / reserveA;\n        if (amountBOptimal <= amountBDesired) {\n            return (amountADesired, amountBOptimal);\n        } else {\n            uint amountAOptimal = (amountBDesired * reserveA) / reserveB;\n            return (amountAOptimal, amountBDesired);\n        }\n    }\n\n    function calculateLiquidityToken(uint256 amountA, uint256 amountB) internal view returns (uint256){\n         if(this.totalSupply() == 0){\n             return Math.sqrt(amountA * amountB);\n        }else {\n            return (Math.min((amountA / reserveA), (amountB / reserveB)) * this.totalSupply());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/ERC20Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Pausable} from \"../../../utils/Pausable.sol\";\n\n/**\n * @dev ERC-20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n *\n * IMPORTANT: This contract does not include public pause and unpause functions. In\n * addition to inheriting this contract, you must define both functions, invoking the\n * {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n * access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n * make the contract pause mechanism of the contract unreachable, and thus unusable.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_update}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {\n        super._update(from, to, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug. IMPORTANT: This contract does not include public pause and unpause functions. In addition to inheriting this contract, you must define both functions, invoking the {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate access control, e.g. using {AccessControl} or {Ownable}. Not doing so will make the contract pause mechanism of the contract unreachable, and thus unusable.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1028,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"Panic": {
					"abi": [],
					"devdoc": {
						"details": "Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ARRAY_OUT_OF_BOUNDS": {
								"details": "array out of bounds access"
							},
							"ASSERT": {
								"details": "used by the assert() builtin"
							},
							"DIVISION_BY_ZERO": {
								"details": "division or modulo by zero"
							},
							"EMPTY_ARRAY_POP": {
								"details": "empty array pop"
							},
							"ENUM_CONVERSION_ERROR": {
								"details": "enum conversion error"
							},
							"GENERIC": {
								"details": "generic / unspecified error"
							},
							"INVALID_INTERNAL_FUNCTION": {
								"details": "calling invalid internal function"
							},
							"RESOURCE_ERROR": {
								"details": "resource error (too large allocation or too large array)"
							},
							"STORAGE_ENCODING_ERROR": {
								"details": "invalid encoding in storage"
							},
							"UNDER_OVERFLOW": {
								"details": "arithmetic underflow or overflow"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Panic.sol\":657:1972  library Panic {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x73719A36DA4CA9FA064C29D66775C55A0C9AA2E930345CB3D57303 CALLDATALOAD SWAP2 0xAF SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x73719A36DA4CA9FA064C29D66775C55A0C9AA2E930345CB3D57303 CALLDATALOAD SWAP2 0xAF SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "657:1315:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"panic(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 657,
									"end": 1972,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a73719a36da4ca9fa064c29d66775c55a0c9aa2e930345cb3d573033591afff64736f6c634300081b0033",
									".code": [
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 1972,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/tp3/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1028,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":281:32144  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206db0d632837f9b5724170e75ffbc3f174142b48a82b962f372a72fb5100f84ad64736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206db0d632837f9b5724170e75ffbc3f174142b48a82b962f372a72fb5100f84ad64736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB0D632837F9B5724170E75FFBC3F OR COINBASE TIMESTAMP 0xB4 DUP11 DUP3 0xB9 PUSH3 0xF372A7 0x2F 0xB5 LT 0xF DUP5 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "281:31863:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206db0d632837f9b5724170e75ffbc3f174142b48a82b962f372a72fb5100f84ad64736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB0D632837F9B5724170E75FFBC3F OR COINBASE TIMESTAMP 0xB4 DUP11 DUP3 0xB9 PUSH3 0xF372A7 0x2F 0xB5 LT 0xF DUP5 0xAD PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "281:31863:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_zeroBytes(bytes memory)": "infinite",
								"add512(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"invMod(uint256,uint256)": "infinite",
								"invModPrime(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"modExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"modExp(uint256,uint256,uint256)": "infinite",
								"mul512(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"mulShr(uint256,uint256,uint8)": "infinite",
								"mulShr(uint256,uint256,uint8,enum Math.Rounding)": "infinite",
								"saturatingAdd(uint256,uint256)": "infinite",
								"saturatingMul(uint256,uint256)": "infinite",
								"saturatingSub(uint256,uint256)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"ternary(bool,uint256,uint256)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryModExp(bytes memory,bytes memory,bytes memory)": "infinite",
								"tryModExp(uint256,uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 281,
									"end": 32144,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206db0d632837f9b5724170e75ffbc3f174142b48a82b962f372a72fb5100f84ad64736f6c634300081b0033",
									".code": [
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 32144,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/tp3/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":769:34942  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB2 CHAINID CALLDATACOPY ISZERO OR SLT 0xC3 SDIV 0xBF 0x4F GASPRICE BLOBBASEFEE SMOD BALANCE PREVRANDAO LOG2 0xA5 BLOCKHASH PUSH9 0x9C8A87EA327F39F972 0x29 CALLDATALOAD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "769:34173:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB2 CHAINID CALLDATACOPY ISZERO OR SLT 0xC3 SDIV 0xBF 0x4F GASPRICE BLOBBASEFEE SMOD BALANCE PREVRANDAO LOG2 0xA5 BLOCKHASH PUSH9 0x9C8A87EA327F39F972 0x29 CALLDATALOAD MSTORE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "769:34173:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint(bool)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 769,
									"end": 34942,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040b24637151712c305bf4f3a4a073144a2a540689c8a87ea327f39f97229355264736f6c634300081b0033",
									".code": [
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 34942,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/tp3/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/tp3/SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tp3/SimpleSwap.sol\":396:3601  contract SimpleSwap is ERC20, ERC20Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/tp3/SimpleSwap.sol\":455:564  constructor(address initialOwner)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/tp3/SimpleSwap.sol\":544:556  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0e\n  dup2\n  mstore\n  0x20\n  add\n  0x4c6971756964697479546f6b656e000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4c544b0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/tp3/SimpleSwap.sol\":455:564  constructor(address initialOwner)... */\n  pop\n    /* \"contracts/tp3/SimpleSwap.sol\":396:3601  contract SimpleSwap is ERC20, ERC20Pausable, Ownable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_54\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_56\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_57:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_59\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_62\n  tag_21\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":932:1051   */\ntag_61:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_63\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_26\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_27:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_28:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_29:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_30:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_68:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_70\n  tag_29\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1909:1993   */\ntag_69:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_31:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_32:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_33:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_34:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_75\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_33\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2624:2663   */\n  tag_76\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_35:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_36:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_37:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_80\n    /* \"#utility.yul\":3013:3047   */\n  tag_81\n    /* \"#utility.yul\":3022:3046   */\n  tag_82\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3013:3047   */\n  tag_36\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2995:3048   */\n  tag_35\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_38:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_39:\n    /* \"#utility.yul\":3251:3290   */\n  tag_85\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_37\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3312:3403   */\n  tag_86\n    /* \"#utility.yul\":3361:3402   */\n  tag_87\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_38\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_40:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3482:3483   */\n  0x00\n    /* \"#utility.yul\":3475:3483   */\n  swap1\n  pop\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_41:\n    /* \"#utility.yul\":3572:3604   */\n  tag_90\n  tag_40\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3613:3678   */\n  tag_91\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_42:\n    /* \"#utility.yul\":3750:3870   */\ntag_93:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_96\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_41\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_43:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_99\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_31\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4101:4130   */\n  tag_100\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_32\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_101:\n    /* \"#utility.yul\":4328:4408   */\n  tag_102\n    /* \"#utility.yul\":4384:4406   */\n  tag_103\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_42\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_98:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_44:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_45:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_106\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_44\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_46:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_108\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_45\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_110\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_27\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_112\n  tag_28\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5233:5289   */\ntag_111:\n    /* \"#utility.yul\":5313:5351   */\n  tag_113\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_30\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":5398:5465   */\n  tag_114\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_116\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_117:\n    /* \"#utility.yul\":6339:6406   */\n  tag_118\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_46\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_115)\n    /* \"#utility.yul\":5560:6178   */\ntag_116:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_119\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_31\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_120:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_124\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_45\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_123:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_115:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_47:\n    /* \"#utility.yul\":6516:6540   */\n  tag_126\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_24\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_128\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_47\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/tp3/SimpleSwap.sol\":396:3601  contract SimpleSwap is ERC20, ERC20Pausable, Ownable {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tp3/SimpleSwap.sol\":396:3601  contract SimpleSwap is ERC20, ERC20Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe8e33700\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tp3/SimpleSwap.sol\":696:759  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_9:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"contracts/tp3/SimpleSwap.sol\":631:690  function pause() public onlyOwner {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tp3/SimpleSwap.sol\":1303:2695  function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, ... */\n    tag_17:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_79\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_86\n      jump\t// in\n    tag_87:\n      dup1\n      iszero\n      tag_88\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_89\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_88)\n    tag_89:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_90:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_90\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4081  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      tag_92\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4094  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4096  _msgSender() */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4068:4096  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4115:4120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2882:2889  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2920  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4875  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4888  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4878:4890  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4860:4890  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4922:4929  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4994  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2737:2742  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2754:2763  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":696:759  function unpause() public onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/tp3/SimpleSwap.sol\":742:752  _unpause() */\n      tag_108\n        /* \"contracts/tp3/SimpleSwap.sol\":742:750  _unpause */\n      tag_109\n        /* \"contracts/tp3/SimpleSwap.sol\":742:752  _unpause() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/tp3/SimpleSwap.sol\":696:759  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1773:1777  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1789:1803  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3085  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3093  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3094  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":631:690  function pause() public onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/tp3/SimpleSwap.sol\":675:683  _pause() */\n      tag_120\n        /* \"contracts/tp3/SimpleSwap.sol\":675:681  _pause */\n      tag_121\n        /* \"contracts/tp3/SimpleSwap.sol\":675:683  _pause() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/tp3/SimpleSwap.sol\":631:690  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_124\n      swap1\n      tag_86\n      jump\t// in\n    tag_124:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_86\n      jump\t// in\n    tag_125:\n      dup1\n      iszero\n      tag_126\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_127\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_126)\n    tag_127:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_128:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_128\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_126:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3394  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3407  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3397:3409  _msgSender() */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3381:3409  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3463:3467  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3456:3467  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3655  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3664  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3665  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":1303:2695  function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, ... */\n    tag_78:\n        /* \"contracts/tp3/SimpleSwap.sol\":1496:1508  uint amountA */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1510:1522  uint amountB */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1524:1538  uint liquidity */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1611:1612  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1593:1613  tokenA != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tp3/SimpleSwap.sol\":1593:1599  tokenA */\n      dup12\n        /* \"contracts/tp3/SimpleSwap.sol\":1593:1613  tokenA != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/tp3/SimpleSwap.sol\":1593:1637  tokenA != address(0) && tokenB != address(0) */\n      dup1\n      iszero\n      tag_134\n      jumpi\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":1635:1636  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1617:1637  tokenB != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tp3/SimpleSwap.sol\":1617:1623  tokenB */\n      dup11\n        /* \"contracts/tp3/SimpleSwap.sol\":1617:1637  tokenB != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/tp3/SimpleSwap.sol\":1593:1637  tokenA != address(0) && tokenB != address(0) */\n    tag_134:\n        /* \"contracts/tp3/SimpleSwap.sol\":1585:1666  require(tokenA != address(0) && tokenB != address(0), \"Invalid token addresses!\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/tp3/SimpleSwap.sol\":1698:1699  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1684:1700  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/tp3/SimpleSwap.sol\":1684:1686  to */\n      dup6\n        /* \"contracts/tp3/SimpleSwap.sol\":1684:1700  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/tp3/SimpleSwap.sol\":1676:1730  require(to != address(0), \"Invalid recipient address\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/tp3/SimpleSwap.sol\":1767:1768  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1749:1763  amountADesired */\n      dup10\n        /* \"contracts/tp3/SimpleSwap.sol\":1749:1768  amountADesired <= 0 */\n      gt\n      iszero\n        /* \"contracts/tp3/SimpleSwap.sol\":1749:1791  amountADesired <= 0 || amountBDesired <= 0 */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":1790:1791  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":1772:1786  amountBDesired */\n      dup9\n        /* \"contracts/tp3/SimpleSwap.sol\":1772:1791  amountBDesired <= 0 */\n      gt\n      iszero\n        /* \"contracts/tp3/SimpleSwap.sol\":1749:1791  amountADesired <= 0 || amountBDesired <= 0 */\n    tag_141:\n        /* \"contracts/tp3/SimpleSwap.sol\":1740:1821  require((amountADesired <= 0 || amountBDesired <= 0),\"Invalid input parameters!\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/tp3/SimpleSwap.sol\":1854:1911  calculateLiquidityAmounts(amountADesired, amountBDesired) */\n      tag_145\n        /* \"contracts/tp3/SimpleSwap.sol\":1880:1894  amountADesired */\n      dup10\n        /* \"contracts/tp3/SimpleSwap.sol\":1896:1910  amountBDesired */\n      dup10\n        /* \"contracts/tp3/SimpleSwap.sol\":1854:1879  calculateLiquidityAmounts */\n      tag_146\n        /* \"contracts/tp3/SimpleSwap.sol\":1854:1911  calculateLiquidityAmounts(amountADesired, amountBDesired) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/tp3/SimpleSwap.sol\":1833:1911  (amountA, amountB) = calculateLiquidityAmounts(amountADesired, amountBDesired) */\n      dup1\n      swap4\n      pop\n      dup2\n      swap5\n      pop\n      pop\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":1940:1950  amountAMin */\n      dup7\n        /* \"contracts/tp3/SimpleSwap.sol\":1930:1937  amountA */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":1930:1950  amountA > amountAMin */\n      gt\n        /* \"contracts/tp3/SimpleSwap.sol\":1921:1987  require((amountA > amountAMin),\"Not meet the minimum for TokenA!\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"contracts/tp3/SimpleSwap.sol\":2016:2026  amountBMin */\n      dup6\n        /* \"contracts/tp3/SimpleSwap.sol\":2006:2013  amountB */\n      dup3\n        /* \"contracts/tp3/SimpleSwap.sol\":2006:2026  amountB > amountBMin */\n      gt\n        /* \"contracts/tp3/SimpleSwap.sol\":1997:2063  require((amountB > amountBMin),\"Not meet the minimum for TokenB!\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n        /* \"contracts/tp3/SimpleSwap.sol\":2168:2175  amountA */\n      dup3\n        /* \"contracts/tp3/SimpleSwap.sol\":2135:2141  tokenA */\n      dup12\n        /* \"contracts/tp3/SimpleSwap.sol\":2129:2152  ERC20(tokenA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/tp3/SimpleSwap.sol\":2153:2163  msg.sender */\n      caller\n        /* \"contracts/tp3/SimpleSwap.sol\":2129:2164  ERC20(tokenA).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/tp3/SimpleSwap.sol\":2129:2175  ERC20(tokenA).balanceOf(msg.sender) >= amountA */\n      lt\n      iszero\n        /* \"contracts/tp3/SimpleSwap.sol\":2121:2206  require(ERC20(tokenA).balanceOf(msg.sender) >= amountA, \"Insufficient TokenA funds!\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"contracts/tp3/SimpleSwap.sol\":2263:2270  amountB */\n      dup2\n        /* \"contracts/tp3/SimpleSwap.sol\":2230:2236  tokenB */\n      dup11\n        /* \"contracts/tp3/SimpleSwap.sol\":2224:2247  ERC20(tokenB).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/tp3/SimpleSwap.sol\":2248:2258  msg.sender */\n      caller\n        /* \"contracts/tp3/SimpleSwap.sol\":2224:2259  ERC20(tokenB).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_161:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_164:\n        /* \"contracts/tp3/SimpleSwap.sol\":2224:2270  ERC20(tokenB).balanceOf(msg.sender) >= amountB */\n      lt\n      iszero\n        /* \"contracts/tp3/SimpleSwap.sol\":2216:2301  require(ERC20(tokenB).balanceOf(msg.sender) >= amountB, \"Insufficient TokenB funds!\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/tp3/SimpleSwap.sol\":2332:2339  amountA */\n      dup3\n        /* \"contracts/tp3/SimpleSwap.sol\":2320:2328  reserveA */\n      0x06\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":2320:2339  reserveA += amountA */\n      dup3\n      dup3\n      sload\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2361:2368  amountB */\n      dup2\n        /* \"contracts/tp3/SimpleSwap.sol\":2349:2357  reserveB */\n      0x07\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":2349:2368  reserveB += amountB */\n      dup3\n      dup3\n      sload\n      tag_170\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_170:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2385:2391  tokenA */\n      dup11\n        /* \"contracts/tp3/SimpleSwap.sol\":2379:2405  ERC20(tokenA).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/tp3/SimpleSwap.sol\":2406:2416  msg.sender */\n      caller\n        /* \"contracts/tp3/SimpleSwap.sol\":2426:2430  this */\n      address\n        /* \"contracts/tp3/SimpleSwap.sol\":2433:2440  amountA */\n      dup7\n        /* \"contracts/tp3/SimpleSwap.sol\":2379:2441  ERC20(tokenA).transferFrom(msg.sender, address(this), amountA) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2457:2463  tokenB */\n      dup10\n        /* \"contracts/tp3/SimpleSwap.sol\":2451:2477  ERC20(tokenB).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/tp3/SimpleSwap.sol\":2478:2488  msg.sender */\n      caller\n        /* \"contracts/tp3/SimpleSwap.sol\":2498:2502  this */\n      address\n        /* \"contracts/tp3/SimpleSwap.sol\":2505:2512  amountB */\n      dup6\n        /* \"contracts/tp3/SimpleSwap.sol\":2451:2513  ERC20(tokenB).transferFrom(msg.sender, address(this), amountB) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_177:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_180:\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2536:2577  calculateLiquidityToken(amountA, amountB) */\n      tag_181\n        /* \"contracts/tp3/SimpleSwap.sol\":2560:2567  amountA */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":2569:2576  amountB */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":2536:2559  calculateLiquidityToken */\n      tag_182\n        /* \"contracts/tp3/SimpleSwap.sol\":2536:2577  calculateLiquidityToken(amountA, amountB) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/tp3/SimpleSwap.sol\":2524:2577  liquidity = calculateLiquidityToken(amountA, amountB) */\n      swap1\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2587:2591  this */\n      address\n        /* \"contracts/tp3/SimpleSwap.sol\":2587:2600  this.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/tp3/SimpleSwap.sol\":2601:2611  msg.sender */\n      caller\n        /* \"contracts/tp3/SimpleSwap.sol\":2613:2622  liquidity */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":2587:2623  this.transfer(msg.sender, liquidity) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_187:\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2651:2666  block.timestamp */\n      timestamp\n        /* \"contracts/tp3/SimpleSwap.sol\":2640:2648  deadline */\n      dup5\n        /* \"contracts/tp3/SimpleSwap.sol\":2640:2666  deadline > block.timestamp */\n      gt\n        /* \"contracts/tp3/SimpleSwap.sol\":2632:2688  require(deadline > block.timestamp, \"Deadline reached!\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/tp3/SimpleSwap.sol\":1303:2695  function addLiquidity(address tokenA, address tokenB, uint amountADesired, uint amountBDesired, ... */\n      swap9\n      pop\n      swap9\n      pop\n      swap9\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_192\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_196\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_199\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10532:10537  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10539:10546  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10531  allowance */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10522:10547  allowance(owner, spender) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10547  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10597  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10577  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10695:10702  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10704:10720  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10722:10727  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5473:5474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5461  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5566:5567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5554  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_222\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2654:2659  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      tag_225\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2693  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_229\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2405  _paused */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_232\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2444  _msgSender */\n      tag_93\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      mload(0x40)\n      tag_233\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":2701:3278  function calculateLiquidityAmounts(uint amountADesired, uint amountBDesired) internal view... */\n    tag_146:\n        /* \"contracts/tp3/SimpleSwap.sol\":2809:2821  uint amountA */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":2823:2835  uint amountB */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":2863:2864  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":2851:2859  reserveA */\n      sload(0x06)\n        /* \"contracts/tp3/SimpleSwap.sol\":2851:2864  reserveA == 0 */\n      eq\n        /* \"contracts/tp3/SimpleSwap.sol\":2851:2881  reserveA == 0 && reserveB == 0 */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2880:2881  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":2868:2876  reserveB */\n      sload(0x07)\n        /* \"contracts/tp3/SimpleSwap.sol\":2868:2881  reserveB == 0 */\n      eq\n        /* \"contracts/tp3/SimpleSwap.sol\":2851:2881  reserveA == 0 && reserveB == 0 */\n    tag_235:\n        /* \"contracts/tp3/SimpleSwap.sol\":2847:2947  if (reserveA == 0 && reserveB == 0) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/tp3/SimpleSwap.sol\":2905:2919  amountADesired */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":2921:2935  amountBDesired */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":2897:2936  return (amountADesired, amountBDesired) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_234)\n        /* \"contracts/tp3/SimpleSwap.sol\":2847:2947  if (reserveA == 0 && reserveB == 0) {... */\n    tag_236:\n        /* \"contracts/tp3/SimpleSwap.sol\":2956:2975  uint amountBOptimal */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":3008:3016  reserveA */\n      sload(0x06)\n        /* \"contracts/tp3/SimpleSwap.sol\":2996:3004  reserveB */\n      sload(0x07)\n        /* \"contracts/tp3/SimpleSwap.sol\":2979:2993  amountADesired */\n      dup7\n        /* \"contracts/tp3/SimpleSwap.sol\":2979:3004  amountADesired * reserveB */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/tp3/SimpleSwap.sol\":2978:3016  (amountADesired * reserveB) / reserveA */\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/tp3/SimpleSwap.sol\":2956:3016  uint amountBOptimal = (amountADesired * reserveB) / reserveA */\n      swap1\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":3048:3062  amountBDesired */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":3030:3044  amountBOptimal */\n      dup2\n        /* \"contracts/tp3/SimpleSwap.sol\":3030:3062  amountBOptimal <= amountBDesired */\n      gt\n        /* \"contracts/tp3/SimpleSwap.sol\":3026:3272  if (amountBOptimal <= amountBDesired) {... */\n      tag_241\n      jumpi\n        /* \"contracts/tp3/SimpleSwap.sol\":3086:3100  amountADesired */\n      dup5\n        /* \"contracts/tp3/SimpleSwap.sol\":3102:3116  amountBOptimal */\n      dup2\n        /* \"contracts/tp3/SimpleSwap.sol\":3078:3117  return (amountADesired, amountBOptimal) */\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      jump(tag_234)\n        /* \"contracts/tp3/SimpleSwap.sol\":3026:3272  if (amountBOptimal <= amountBDesired) {... */\n    tag_241:\n        /* \"contracts/tp3/SimpleSwap.sol\":3148:3167  uint amountAOptimal */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":3200:3208  reserveB */\n      sload(0x07)\n        /* \"contracts/tp3/SimpleSwap.sol\":3188:3196  reserveA */\n      sload(0x06)\n        /* \"contracts/tp3/SimpleSwap.sol\":3171:3185  amountBDesired */\n      dup7\n        /* \"contracts/tp3/SimpleSwap.sol\":3171:3196  amountBDesired * reserveA */\n      tag_243\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_243:\n        /* \"contracts/tp3/SimpleSwap.sol\":3170:3208  (amountBDesired * reserveA) / reserveB */\n      tag_244\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_244:\n        /* \"contracts/tp3/SimpleSwap.sol\":3148:3208  uint amountAOptimal = (amountBDesired * reserveA) / reserveB */\n      swap1\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":3230:3244  amountAOptimal */\n      dup1\n        /* \"contracts/tp3/SimpleSwap.sol\":3246:3260  amountBDesired */\n      dup6\n        /* \"contracts/tp3/SimpleSwap.sol\":3222:3261  return (amountAOptimal, amountBDesired) */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":2701:3278  function calculateLiquidityAmounts(uint amountADesired, uint amountBDesired) internal view... */\n    tag_234:\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":3284:3599  function calculateLiquidityToken(uint256 amountA, uint256 amountB) internal view returns (uint256){... */\n    tag_182:\n        /* \"contracts/tp3/SimpleSwap.sol\":3374:3381  uint256 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":3418:3419  0 */\n      0x00\n        /* \"contracts/tp3/SimpleSwap.sol\":3396:3400  this */\n      address\n        /* \"contracts/tp3/SimpleSwap.sol\":3396:3412  this.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/tp3/SimpleSwap.sol\":3396:3414  this.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_248:\n        /* \"contracts/tp3/SimpleSwap.sol\":3396:3419  this.totalSupply() == 0 */\n      sub\n        /* \"contracts/tp3/SimpleSwap.sol\":3393:3593  if(this.totalSupply() == 0){... */\n      tag_249\n      jumpi\n        /* \"contracts/tp3/SimpleSwap.sol\":3442:3470  Math.sqrt(amountA * amountB) */\n      tag_250\n        /* \"contracts/tp3/SimpleSwap.sol\":3462:3469  amountB */\n      dup3\n        /* \"contracts/tp3/SimpleSwap.sol\":3452:3459  amountA */\n      dup5\n        /* \"contracts/tp3/SimpleSwap.sol\":3452:3469  amountA * amountB */\n      tag_251\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_251:\n        /* \"contracts/tp3/SimpleSwap.sol\":3442:3451  Math.sqrt */\n      tag_252\n        /* \"contracts/tp3/SimpleSwap.sol\":3442:3470  Math.sqrt(amountA * amountB) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/tp3/SimpleSwap.sol\":3435:3470  return Math.sqrt(amountA * amountB) */\n      swap1\n      pop\n      jump(tag_245)\n        /* \"contracts/tp3/SimpleSwap.sol\":3393:3593  if(this.totalSupply() == 0){... */\n    tag_249:\n        /* \"contracts/tp3/SimpleSwap.sol\":3563:3567  this */\n      address\n        /* \"contracts/tp3/SimpleSwap.sol\":3563:3579  this.totalSupply */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x18160ddd\n        /* \"contracts/tp3/SimpleSwap.sol\":3563:3581  this.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_255\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_256\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_256:\n        /* \"contracts/tp3/SimpleSwap.sol\":3508:3560  Math.min((amountA / reserveA), (amountB / reserveB)) */\n      tag_257\n        /* \"contracts/tp3/SimpleSwap.sol\":3528:3536  reserveA */\n      sload(0x06)\n        /* \"contracts/tp3/SimpleSwap.sol\":3518:3525  amountA */\n      dup6\n        /* \"contracts/tp3/SimpleSwap.sol\":3518:3536  amountA / reserveA */\n      tag_258\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_258:\n        /* \"contracts/tp3/SimpleSwap.sol\":3550:3558  reserveB */\n      sload(0x07)\n        /* \"contracts/tp3/SimpleSwap.sol\":3540:3547  amountB */\n      dup6\n        /* \"contracts/tp3/SimpleSwap.sol\":3540:3558  amountB / reserveB */\n      tag_259\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_259:\n        /* \"contracts/tp3/SimpleSwap.sol\":3508:3516  Math.min */\n      tag_260\n        /* \"contracts/tp3/SimpleSwap.sol\":3508:3560  Math.min((amountA / reserveA), (amountB / reserveB)) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/tp3/SimpleSwap.sol\":3508:3581  Math.min((amountA / reserveA), (amountB / reserveB)) * this.totalSupply() */\n      tag_261\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_261:\n        /* \"contracts/tp3/SimpleSwap.sol\":3500:3582  return (Math.min((amountA / reserveA), (amountB / reserveB)) * this.totalSupply()) */\n      swap1\n      pop\n        /* \"contracts/tp3/SimpleSwap.sol\":3284:3599  function calculateLiquidityToken(uint256 amountA, uint256 amountB) internal view returns (uint256){... */\n    tag_245:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9811:9812  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9799  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9912  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9899  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_266\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_266:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10017:10022  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9999:10004  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10013  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10045  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_268\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tp3/SimpleSwap.sol\":833:998  function _update(address from, address to, uint256 value)... */\n    tag_214:\n        /* \"contracts/tp3/SimpleSwap.sol\":961:991  super._update(from, to, value) */\n      tag_270\n        /* \"contracts/tp3/SimpleSwap.sol\":975:979  from */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":981:983  to */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":985:990  value */\n      dup4\n        /* \"contracts/tp3/SimpleSwap.sol\":961:974  super._update */\n      tag_271\n        /* \"contracts/tp3/SimpleSwap.sol\":961:991  super._update(from, to, value) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/tp3/SimpleSwap.sol\":833:998  function _update(address from, address to, uint256 value)... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      tag_273\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2147  paused */\n      tag_48\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2141:2149  paused() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      tag_276\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1949  paused */\n      tag_48\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1943:1951  paused() */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20567:25748  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20615:20622  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20733:20734  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20728:20729  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20728:20734  a <= 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20724:20777  if (a <= 1) {... */\n      tag_279\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20761:20762  a */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20754:20762  return a */\n      swap1\n      pop\n      jump(tag_278)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20724:20777  if (a <= 1) {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21704:21714  uint256 aa */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21717:21718  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21704:21718  uint256 aa = a */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21732:21742  uint256 xn */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21745:21746  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21732:21746  uint256 xn = 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21772:21780  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21765:21767  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21765:21781  aa >= (1 << 128) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21761:21853  if (aa >= (1 << 128)) {... */\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21808:21811  128 */\n      0x80\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21801:21811  aa >>= 128 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21836:21838  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21829:21838  xn <<= 64 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21761:21853  if (aa >= (1 << 128)) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21877:21884  1 << 64 */\n      0x010000000000000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21870:21872  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21870:21885  aa >= (1 << 64) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21866:21956  if (aa >= (1 << 64)) {... */\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21912:21914  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21905:21914  aa >>= 64 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21939:21941  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21932:21941  xn <<= 32 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21866:21956  if (aa >= (1 << 64)) {... */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21980:21987  1 << 32 */\n      0x0100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21973:21975  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21973:21988  aa >= (1 << 32) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21969:22059  if (aa >= (1 << 32)) {... */\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22015:22017  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22008:22017  aa >>= 32 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22042:22044  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22035:22044  xn <<= 16 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":21969:22059  if (aa >= (1 << 32)) {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22083:22090  1 << 16 */\n      0x010000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22076:22078  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22076:22091  aa >= (1 << 16) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22072:22161  if (aa >= (1 << 16)) {... */\n      tag_283\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22118:22120  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22111:22120  aa >>= 16 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22145:22146  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22138:22146  xn <<= 8 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22072:22161  if (aa >= (1 << 16)) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22185:22191  1 << 8 */\n      0x0100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22178:22180  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22178:22192  aa >= (1 << 8) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22174:22261  if (aa >= (1 << 8)) {... */\n      tag_284\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22219:22220  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22212:22220  aa >>= 8 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22245:22246  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22238:22246  xn <<= 4 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22174:22261  if (aa >= (1 << 8)) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22285:22291  1 << 4 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22278:22280  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22278:22292  aa >= (1 << 4) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22274:22361  if (aa >= (1 << 4)) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22319:22320  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22312:22320  aa >>= 4 */\n      dup3\n      swap1\n      shr\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22345:22346  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22338:22346  xn <<= 2 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22274:22361  if (aa >= (1 << 4)) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22385:22391  1 << 2 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22378:22380  aa */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22378:22392  aa >= (1 << 2) */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22374:22435  if (aa >= (1 << 2)) {... */\n      tag_286\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22419:22420  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22412:22420  xn <<= 1 */\n      dup2\n      swap1\n      shl\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22374:22435  if (aa >= (1 << 2)) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22872:22873  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22865:22867  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22861:22862  3 */\n      0x03\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22861:22867  3 * xn */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22860:22873  (3 * xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":22855:22873  xn = (3 * xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24782:24783  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24775:24777  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24771:24772  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24771:24777  a / xn */\n      dup2\n      tag_287\n      jumpi\n      tag_288\n      tag_289\n      jump\t// in\n    tag_288:\n    tag_287:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24766:24768  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24766:24777  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24765:24783  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24760:24783  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24891:24892  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24884:24886  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24880:24881  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24880:24886  a / xn */\n      dup2\n      tag_290\n      jumpi\n      tag_291\n      tag_289\n      jump\t// in\n    tag_291:\n    tag_290:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24875:24877  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24875:24886  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24874:24892  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24869:24892  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25002:25003  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24995:24997  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24991:24992  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24991:24997  a / xn */\n      dup2\n      tag_292\n      jumpi\n      tag_293\n      tag_289\n      jump\t// in\n    tag_293:\n    tag_292:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24986:24988  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24986:24997  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24985:25003  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":24980:25003  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25111:25112  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25104:25106  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25100:25101  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25100:25106  a / xn */\n      dup2\n      tag_294\n      jumpi\n      tag_295\n      tag_289\n      jump\t// in\n    tag_295:\n    tag_294:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25095:25097  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25095:25106  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25094:25112  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25089:25112  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25221:25222  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25214:25216  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25210:25211  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25210:25216  a / xn */\n      dup2\n      tag_296\n      jumpi\n      tag_297\n      tag_289\n      jump\t// in\n    tag_297:\n    tag_296:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25205:25207  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25205:25216  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25204:25222  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25199:25222  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25331:25332  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25324:25326  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25320:25321  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25320:25326  a / xn */\n      dup2\n      tag_298\n      jumpi\n      tag_299\n      tag_289\n      jump\t// in\n    tag_299:\n    tag_298:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25315:25317  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25315:25326  xn + a / xn */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25314:25332  (xn + a / xn) >> 1 */\n      swap1\n      shr\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25309:25332  xn = (xn + a / xn) >> 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25703:25731  SafeCast.toUint(xn > a / xn) */\n      tag_300\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25728:25730  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25724:25725  a */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25724:25730  a / xn */\n      dup2\n      tag_301\n      jumpi\n      tag_302\n      tag_289\n      jump\t// in\n    tag_302:\n    tag_301:\n      div\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25719:25721  xn */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25719:25730  xn > a / xn */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25703:25718  SafeCast.toUint */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25703:25731  SafeCast.toUint(xn > a / xn) */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25698:25700  xn */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25698:25731  xn - SafeCast.toUint(xn > a / xn) */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":25691:25731  return xn - SafeCast.toUint(xn > a / xn) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":20567:25748  function sqrt(uint256 a) internal pure returns (uint256) {... */\n    tag_278:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5617:5728  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5675:5682  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5721  ternary(a < b, a, b) */\n      tag_305\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5713:5714  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5709:5710  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5709:5714  a < b */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5716:5717  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5719:5720  b */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5708  ternary */\n      tag_306\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5701:5721  ternary(a < b, a, b) */\n      jump\t// in\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5694:5721  return ternary(a < b, a, b) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5617:5728  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_308\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_230\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      tag_310\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1235:1239  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1241:1243  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1245:1250  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1234  super._update */\n      tag_311\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1221:1251  super._update(from, to, value) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":1113:1258  function _update(address from, address to, uint256 value) internal virtual override whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34842:34851  uint256 u */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34921:34922  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34914:34923  iszero(b) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34907:34924  iszero(iszero(b)) */\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34902:34924  u := iszero(iszero(b)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeCast.sol\":34795:34940  function toUint(bool b) internal pure returns (uint256 u) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5149:5156  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5347  SafeCast.toUint(condition) */\n      tag_314\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5337:5346  condition */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5336  SafeCast.toUint */\n      tag_303\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5321:5347  SafeCast.toUint(condition) */\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5316:5317  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5313  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5312:5317  a ^ b */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5311:5347  (a ^ b) * SafeCast.toUint(condition) */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5307  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5306:5348  b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      xor\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5299:5348  return b ^ ((a ^ b) * SafeCast.toUint(condition)) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":5071:5365  function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_311:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6094:6095  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6082  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_317\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_317:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      jump(tag_318)\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6298:6302  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6303  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6335:6340  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6332  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6392:6396  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6398:6409  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6416  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_319:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6584:6589  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6581  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6562:6566  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6252:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6642:6643  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6630  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_321\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6807:6812  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_322)\n    tag_321:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7019:7024  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7012:7014  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_323\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_324:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_325:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_326:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_327:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_328:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_372\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_324\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":711:782   */\n      tag_373\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_325\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_374\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_326\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":881:910   */\n      tag_375\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_327\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_25:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_377\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_328\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_330:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_332:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_333:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_383\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_332\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_334:\n        /* \"#utility.yul\":1876:1900   */\n      tag_385\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_333\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_386\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_386:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_335:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_388\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_334\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_336:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_337:\n        /* \"#utility.yul\":2232:2256   */\n      tag_391\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_336\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_392:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_338:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_394\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_337\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_28:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_397\n      tag_330\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":2525:2644   */\n    tag_396:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_398\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_335\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_399\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_338\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_339:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_340:\n        /* \"#utility.yul\":3089:3110   */\n      tag_402\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_339\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_31:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_404\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_340\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_341:\n        /* \"#utility.yul\":3426:3450   */\n      tag_406\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_336\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_408\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_341\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_38:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_411\n      tag_330\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":3801:3920   */\n    tag_410:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_412\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_335\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_413\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_335\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_414\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_338\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_342:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_343:\n        /* \"#utility.yul\":4491:4513   */\n      tag_417\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_342\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_44:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_419\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_343\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_52:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_422\n      tag_330\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":4822:4941   */\n    tag_421:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_423\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_335\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_344:\n        /* \"#utility.yul\":5168:5192   */\n      tag_425\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_333\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_62:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_427\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_344\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_72:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_430\n      tag_330\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":5526:5645   */\n    tag_429:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_431\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_335\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_432\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_335\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:7262   */\n    tag_77:\n        /* \"#utility.yul\":6035:6041   */\n      0x00\n        /* \"#utility.yul\":6043:6049   */\n      0x00\n        /* \"#utility.yul\":6051:6057   */\n      0x00\n        /* \"#utility.yul\":6059:6065   */\n      0x00\n        /* \"#utility.yul\":6067:6073   */\n      0x00\n        /* \"#utility.yul\":6075:6081   */\n      0x00\n        /* \"#utility.yul\":6083:6089   */\n      0x00\n        /* \"#utility.yul\":6091:6097   */\n      0x00\n        /* \"#utility.yul\":6140:6143   */\n      0x0100\n        /* \"#utility.yul\":6128:6137   */\n      dup10\n        /* \"#utility.yul\":6119:6126   */\n      dup12\n        /* \"#utility.yul\":6115:6138   */\n      sub\n        /* \"#utility.yul\":6111:6144   */\n      slt\n        /* \"#utility.yul\":6108:6228   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":6147:6226   */\n      tag_435\n      tag_330\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6108:6228   */\n    tag_434:\n        /* \"#utility.yul\":6267:6268   */\n      0x00\n        /* \"#utility.yul\":6292:6345   */\n      tag_436\n        /* \"#utility.yul\":6337:6344   */\n      dup12\n        /* \"#utility.yul\":6328:6334   */\n      dup3\n        /* \"#utility.yul\":6317:6326   */\n      dup13\n        /* \"#utility.yul\":6313:6335   */\n      add\n        /* \"#utility.yul\":6292:6345   */\n      tag_335\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6282:6345   */\n      swap9\n      pop\n        /* \"#utility.yul\":6238:6355   */\n      pop\n        /* \"#utility.yul\":6394:6396   */\n      0x20\n        /* \"#utility.yul\":6420:6473   */\n      tag_437\n        /* \"#utility.yul\":6465:6472   */\n      dup12\n        /* \"#utility.yul\":6456:6462   */\n      dup3\n        /* \"#utility.yul\":6445:6454   */\n      dup13\n        /* \"#utility.yul\":6441:6463   */\n      add\n        /* \"#utility.yul\":6420:6473   */\n      tag_335\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6410:6473   */\n      swap8\n      pop\n        /* \"#utility.yul\":6365:6483   */\n      pop\n        /* \"#utility.yul\":6522:6524   */\n      0x40\n        /* \"#utility.yul\":6548:6601   */\n      tag_438\n        /* \"#utility.yul\":6593:6600   */\n      dup12\n        /* \"#utility.yul\":6584:6590   */\n      dup3\n        /* \"#utility.yul\":6573:6582   */\n      dup13\n        /* \"#utility.yul\":6569:6591   */\n      add\n        /* \"#utility.yul\":6548:6601   */\n      tag_338\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6538:6601   */\n      swap7\n      pop\n        /* \"#utility.yul\":6493:6611   */\n      pop\n        /* \"#utility.yul\":6650:6652   */\n      0x60\n        /* \"#utility.yul\":6676:6729   */\n      tag_439\n        /* \"#utility.yul\":6721:6728   */\n      dup12\n        /* \"#utility.yul\":6712:6718   */\n      dup3\n        /* \"#utility.yul\":6701:6710   */\n      dup13\n        /* \"#utility.yul\":6697:6719   */\n      add\n        /* \"#utility.yul\":6676:6729   */\n      tag_338\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6666:6729   */\n      swap6\n      pop\n        /* \"#utility.yul\":6621:6739   */\n      pop\n        /* \"#utility.yul\":6778:6781   */\n      0x80\n        /* \"#utility.yul\":6805:6858   */\n      tag_440\n        /* \"#utility.yul\":6850:6857   */\n      dup12\n        /* \"#utility.yul\":6841:6847   */\n      dup3\n        /* \"#utility.yul\":6830:6839   */\n      dup13\n        /* \"#utility.yul\":6826:6848   */\n      add\n        /* \"#utility.yul\":6805:6858   */\n      tag_338\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":6795:6858   */\n      swap5\n      pop\n        /* \"#utility.yul\":6749:6868   */\n      pop\n        /* \"#utility.yul\":6907:6910   */\n      0xa0\n        /* \"#utility.yul\":6934:6987   */\n      tag_441\n        /* \"#utility.yul\":6979:6986   */\n      dup12\n        /* \"#utility.yul\":6970:6976   */\n      dup3\n        /* \"#utility.yul\":6959:6968   */\n      dup13\n        /* \"#utility.yul\":6955:6977   */\n      add\n        /* \"#utility.yul\":6934:6987   */\n      tag_338\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":6924:6987   */\n      swap4\n      pop\n        /* \"#utility.yul\":6878:6997   */\n      pop\n        /* \"#utility.yul\":7036:7039   */\n      0xc0\n        /* \"#utility.yul\":7063:7116   */\n      tag_442\n        /* \"#utility.yul\":7108:7115   */\n      dup12\n        /* \"#utility.yul\":7099:7105   */\n      dup3\n        /* \"#utility.yul\":7088:7097   */\n      dup13\n        /* \"#utility.yul\":7084:7106   */\n      add\n        /* \"#utility.yul\":7063:7116   */\n      tag_335\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":7053:7116   */\n      swap3\n      pop\n        /* \"#utility.yul\":7007:7126   */\n      pop\n        /* \"#utility.yul\":7165:7168   */\n      0xe0\n        /* \"#utility.yul\":7192:7245   */\n      tag_443\n        /* \"#utility.yul\":7237:7244   */\n      dup12\n        /* \"#utility.yul\":7228:7234   */\n      dup3\n        /* \"#utility.yul\":7217:7226   */\n      dup13\n        /* \"#utility.yul\":7213:7235   */\n      add\n        /* \"#utility.yul\":7192:7245   */\n      tag_338\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7182:7245   */\n      swap2\n      pop\n        /* \"#utility.yul\":7136:7255   */\n      pop\n        /* \"#utility.yul\":5913:7262   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7268:7710   */\n    tag_80:\n        /* \"#utility.yul\":7417:7421   */\n      0x00\n        /* \"#utility.yul\":7455:7457   */\n      0x60\n        /* \"#utility.yul\":7444:7453   */\n      dup3\n        /* \"#utility.yul\":7440:7458   */\n      add\n        /* \"#utility.yul\":7432:7458   */\n      swap1\n      pop\n        /* \"#utility.yul\":7468:7539   */\n      tag_445\n        /* \"#utility.yul\":7536:7537   */\n      0x00\n        /* \"#utility.yul\":7525:7534   */\n      dup4\n        /* \"#utility.yul\":7521:7538   */\n      add\n        /* \"#utility.yul\":7512:7518   */\n      dup7\n        /* \"#utility.yul\":7468:7539   */\n      tag_341\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":7549:7621   */\n      tag_446\n        /* \"#utility.yul\":7617:7619   */\n      0x20\n        /* \"#utility.yul\":7606:7615   */\n      dup4\n        /* \"#utility.yul\":7602:7620   */\n      add\n        /* \"#utility.yul\":7593:7599   */\n      dup6\n        /* \"#utility.yul\":7549:7621   */\n      tag_341\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7631:7703   */\n      tag_447\n        /* \"#utility.yul\":7699:7701   */\n      0x40\n        /* \"#utility.yul\":7688:7697   */\n      dup4\n        /* \"#utility.yul\":7684:7702   */\n      add\n        /* \"#utility.yul\":7675:7681   */\n      dup5\n        /* \"#utility.yul\":7631:7703   */\n      tag_341\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7268:7710   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7716:7896   */\n    tag_345:\n        /* \"#utility.yul\":7764:7841   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7761:7762   */\n      0x00\n        /* \"#utility.yul\":7754:7842   */\n      mstore\n        /* \"#utility.yul\":7861:7865   */\n      0x22\n        /* \"#utility.yul\":7858:7859   */\n      0x04\n        /* \"#utility.yul\":7851:7866   */\n      mstore\n        /* \"#utility.yul\":7885:7889   */\n      0x24\n        /* \"#utility.yul\":7882:7883   */\n      0x00\n        /* \"#utility.yul\":7875:7890   */\n      revert\n        /* \"#utility.yul\":7902:8222   */\n    tag_86:\n        /* \"#utility.yul\":7946:7952   */\n      0x00\n        /* \"#utility.yul\":7983:7984   */\n      0x02\n        /* \"#utility.yul\":7977:7981   */\n      dup3\n        /* \"#utility.yul\":7973:7985   */\n      div\n        /* \"#utility.yul\":7963:7985   */\n      swap1\n      pop\n        /* \"#utility.yul\":8030:8031   */\n      0x01\n        /* \"#utility.yul\":8024:8028   */\n      dup3\n        /* \"#utility.yul\":8020:8032   */\n      and\n        /* \"#utility.yul\":8051:8069   */\n      dup1\n        /* \"#utility.yul\":8041:8122   */\n      tag_450\n      jumpi\n        /* \"#utility.yul\":8107:8111   */\n      0x7f\n        /* \"#utility.yul\":8099:8105   */\n      dup3\n        /* \"#utility.yul\":8095:8112   */\n      and\n        /* \"#utility.yul\":8085:8112   */\n      swap2\n      pop\n        /* \"#utility.yul\":8041:8122   */\n    tag_450:\n        /* \"#utility.yul\":8169:8171   */\n      0x20\n        /* \"#utility.yul\":8161:8167   */\n      dup3\n        /* \"#utility.yul\":8158:8172   */\n      lt\n        /* \"#utility.yul\":8138:8156   */\n      dup2\n        /* \"#utility.yul\":8135:8173   */\n      sub\n        /* \"#utility.yul\":8132:8216   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":8188:8206   */\n      tag_452\n      tag_345\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":8132:8216   */\n    tag_451:\n        /* \"#utility.yul\":7953:8222   */\n      pop\n        /* \"#utility.yul\":7902:8222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8228:8402   */\n    tag_346:\n        /* \"#utility.yul\":8368:8394   */\n      0x496e76616c696420746f6b656e20616464726573736573210000000000000000\n        /* \"#utility.yul\":8364:8365   */\n      0x00\n        /* \"#utility.yul\":8356:8362   */\n      dup3\n        /* \"#utility.yul\":8352:8366   */\n      add\n        /* \"#utility.yul\":8345:8395   */\n      mstore\n        /* \"#utility.yul\":8228:8402   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8408:8774   */\n    tag_347:\n        /* \"#utility.yul\":8550:8553   */\n      0x00\n        /* \"#utility.yul\":8571:8638   */\n      tag_455\n        /* \"#utility.yul\":8635:8637   */\n      0x18\n        /* \"#utility.yul\":8630:8633   */\n      dup4\n        /* \"#utility.yul\":8571:8638   */\n      tag_325\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":8564:8638   */\n      swap2\n      pop\n        /* \"#utility.yul\":8647:8740   */\n      tag_456\n        /* \"#utility.yul\":8736:8739   */\n      dup3\n        /* \"#utility.yul\":8647:8740   */\n      tag_346\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8765:8767   */\n      0x20\n        /* \"#utility.yul\":8760:8763   */\n      dup3\n        /* \"#utility.yul\":8756:8768   */\n      add\n        /* \"#utility.yul\":8749:8768   */\n      swap1\n      pop\n        /* \"#utility.yul\":8408:8774   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8780:9199   */\n    tag_137:\n        /* \"#utility.yul\":8946:8950   */\n      0x00\n        /* \"#utility.yul\":8984:8986   */\n      0x20\n        /* \"#utility.yul\":8973:8982   */\n      dup3\n        /* \"#utility.yul\":8969:8987   */\n      add\n        /* \"#utility.yul\":8961:8987   */\n      swap1\n      pop\n        /* \"#utility.yul\":9033:9042   */\n      dup2\n        /* \"#utility.yul\":9027:9031   */\n      dup2\n        /* \"#utility.yul\":9023:9043   */\n      sub\n        /* \"#utility.yul\":9019:9020   */\n      0x00\n        /* \"#utility.yul\":9008:9017   */\n      dup4\n        /* \"#utility.yul\":9004:9021   */\n      add\n        /* \"#utility.yul\":8997:9044   */\n      mstore\n        /* \"#utility.yul\":9061:9192   */\n      tag_458\n        /* \"#utility.yul\":9187:9191   */\n      dup2\n        /* \"#utility.yul\":9061:9192   */\n      tag_347\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9053:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":8780:9199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9205:9380   */\n    tag_348:\n        /* \"#utility.yul\":9345:9372   */\n      0x496e76616c696420726563697069656e74206164647265737300000000000000\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9333:9339   */\n      dup3\n        /* \"#utility.yul\":9329:9343   */\n      add\n        /* \"#utility.yul\":9322:9373   */\n      mstore\n        /* \"#utility.yul\":9205:9380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9386:9752   */\n    tag_349:\n        /* \"#utility.yul\":9528:9531   */\n      0x00\n        /* \"#utility.yul\":9549:9616   */\n      tag_461\n        /* \"#utility.yul\":9613:9615   */\n      0x19\n        /* \"#utility.yul\":9608:9611   */\n      dup4\n        /* \"#utility.yul\":9549:9616   */\n      tag_325\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9542:9616   */\n      swap2\n      pop\n        /* \"#utility.yul\":9625:9718   */\n      tag_462\n        /* \"#utility.yul\":9714:9717   */\n      dup3\n        /* \"#utility.yul\":9625:9718   */\n      tag_348\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":9743:9745   */\n      0x20\n        /* \"#utility.yul\":9738:9741   */\n      dup3\n        /* \"#utility.yul\":9734:9746   */\n      add\n        /* \"#utility.yul\":9727:9746   */\n      swap1\n      pop\n        /* \"#utility.yul\":9386:9752   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9758:10177   */\n    tag_140:\n        /* \"#utility.yul\":9924:9928   */\n      0x00\n        /* \"#utility.yul\":9962:9964   */\n      0x20\n        /* \"#utility.yul\":9951:9960   */\n      dup3\n        /* \"#utility.yul\":9947:9965   */\n      add\n        /* \"#utility.yul\":9939:9965   */\n      swap1\n      pop\n        /* \"#utility.yul\":10011:10020   */\n      dup2\n        /* \"#utility.yul\":10005:10009   */\n      dup2\n        /* \"#utility.yul\":10001:10021   */\n      sub\n        /* \"#utility.yul\":9997:9998   */\n      0x00\n        /* \"#utility.yul\":9986:9995   */\n      dup4\n        /* \"#utility.yul\":9982:9999   */\n      add\n        /* \"#utility.yul\":9975:10022   */\n      mstore\n        /* \"#utility.yul\":10039:10170   */\n      tag_464\n        /* \"#utility.yul\":10165:10169   */\n      dup2\n        /* \"#utility.yul\":10039:10170   */\n      tag_349\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10031:10170   */\n      swap1\n      pop\n        /* \"#utility.yul\":9758:10177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10183:10358   */\n    tag_350:\n        /* \"#utility.yul\":10323:10350   */\n      0x496e76616c696420696e70757420706172616d65746572732100000000000000\n        /* \"#utility.yul\":10319:10320   */\n      0x00\n        /* \"#utility.yul\":10311:10317   */\n      dup3\n        /* \"#utility.yul\":10307:10321   */\n      add\n        /* \"#utility.yul\":10300:10351   */\n      mstore\n        /* \"#utility.yul\":10183:10358   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10364:10730   */\n    tag_351:\n        /* \"#utility.yul\":10506:10509   */\n      0x00\n        /* \"#utility.yul\":10527:10594   */\n      tag_467\n        /* \"#utility.yul\":10591:10593   */\n      0x19\n        /* \"#utility.yul\":10586:10589   */\n      dup4\n        /* \"#utility.yul\":10527:10594   */\n      tag_325\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":10520:10594   */\n      swap2\n      pop\n        /* \"#utility.yul\":10603:10696   */\n      tag_468\n        /* \"#utility.yul\":10692:10695   */\n      dup3\n        /* \"#utility.yul\":10603:10696   */\n      tag_350\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10721:10723   */\n      0x20\n        /* \"#utility.yul\":10716:10719   */\n      dup3\n        /* \"#utility.yul\":10712:10724   */\n      add\n        /* \"#utility.yul\":10705:10724   */\n      swap1\n      pop\n        /* \"#utility.yul\":10364:10730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10736:11155   */\n    tag_144:\n        /* \"#utility.yul\":10902:10906   */\n      0x00\n        /* \"#utility.yul\":10940:10942   */\n      0x20\n        /* \"#utility.yul\":10929:10938   */\n      dup3\n        /* \"#utility.yul\":10925:10943   */\n      add\n        /* \"#utility.yul\":10917:10943   */\n      swap1\n      pop\n        /* \"#utility.yul\":10989:10998   */\n      dup2\n        /* \"#utility.yul\":10983:10987   */\n      dup2\n        /* \"#utility.yul\":10979:10999   */\n      sub\n        /* \"#utility.yul\":10975:10976   */\n      0x00\n        /* \"#utility.yul\":10964:10973   */\n      dup4\n        /* \"#utility.yul\":10960:10977   */\n      add\n        /* \"#utility.yul\":10953:11000   */\n      mstore\n        /* \"#utility.yul\":11017:11148   */\n      tag_470\n        /* \"#utility.yul\":11143:11147   */\n      dup2\n        /* \"#utility.yul\":11017:11148   */\n      tag_351\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11009:11148   */\n      swap1\n      pop\n        /* \"#utility.yul\":10736:11155   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11161:11343   */\n    tag_352:\n        /* \"#utility.yul\":11301:11335   */\n      0x4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e4121\n        /* \"#utility.yul\":11297:11298   */\n      0x00\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11285:11299   */\n      add\n        /* \"#utility.yul\":11278:11336   */\n      mstore\n        /* \"#utility.yul\":11161:11343   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11349:11715   */\n    tag_353:\n        /* \"#utility.yul\":11491:11494   */\n      0x00\n        /* \"#utility.yul\":11512:11579   */\n      tag_473\n        /* \"#utility.yul\":11576:11578   */\n      0x20\n        /* \"#utility.yul\":11571:11574   */\n      dup4\n        /* \"#utility.yul\":11512:11579   */\n      tag_325\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":11505:11579   */\n      swap2\n      pop\n        /* \"#utility.yul\":11588:11681   */\n      tag_474\n        /* \"#utility.yul\":11677:11680   */\n      dup3\n        /* \"#utility.yul\":11588:11681   */\n      tag_352\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11706:11708   */\n      0x20\n        /* \"#utility.yul\":11701:11704   */\n      dup3\n        /* \"#utility.yul\":11697:11709   */\n      add\n        /* \"#utility.yul\":11690:11709   */\n      swap1\n      pop\n        /* \"#utility.yul\":11349:11715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11721:12140   */\n    tag_149:\n        /* \"#utility.yul\":11887:11891   */\n      0x00\n        /* \"#utility.yul\":11925:11927   */\n      0x20\n        /* \"#utility.yul\":11914:11923   */\n      dup3\n        /* \"#utility.yul\":11910:11928   */\n      add\n        /* \"#utility.yul\":11902:11928   */\n      swap1\n      pop\n        /* \"#utility.yul\":11974:11983   */\n      dup2\n        /* \"#utility.yul\":11968:11972   */\n      dup2\n        /* \"#utility.yul\":11964:11984   */\n      sub\n        /* \"#utility.yul\":11960:11961   */\n      0x00\n        /* \"#utility.yul\":11949:11958   */\n      dup4\n        /* \"#utility.yul\":11945:11962   */\n      add\n        /* \"#utility.yul\":11938:11985   */\n      mstore\n        /* \"#utility.yul\":12002:12133   */\n      tag_476\n        /* \"#utility.yul\":12128:12132   */\n      dup2\n        /* \"#utility.yul\":12002:12133   */\n      tag_353\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":11994:12133   */\n      swap1\n      pop\n        /* \"#utility.yul\":11721:12140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12146:12328   */\n    tag_354:\n        /* \"#utility.yul\":12286:12320   */\n      0x4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e4221\n        /* \"#utility.yul\":12282:12283   */\n      0x00\n        /* \"#utility.yul\":12274:12280   */\n      dup3\n        /* \"#utility.yul\":12270:12284   */\n      add\n        /* \"#utility.yul\":12263:12321   */\n      mstore\n        /* \"#utility.yul\":12146:12328   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12334:12700   */\n    tag_355:\n        /* \"#utility.yul\":12476:12479   */\n      0x00\n        /* \"#utility.yul\":12497:12564   */\n      tag_479\n        /* \"#utility.yul\":12561:12563   */\n      0x20\n        /* \"#utility.yul\":12556:12559   */\n      dup4\n        /* \"#utility.yul\":12497:12564   */\n      tag_325\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12490:12564   */\n      swap2\n      pop\n        /* \"#utility.yul\":12573:12666   */\n      tag_480\n        /* \"#utility.yul\":12662:12665   */\n      dup3\n        /* \"#utility.yul\":12573:12666   */\n      tag_354\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12691:12693   */\n      0x20\n        /* \"#utility.yul\":12686:12689   */\n      dup3\n        /* \"#utility.yul\":12682:12694   */\n      add\n        /* \"#utility.yul\":12675:12694   */\n      swap1\n      pop\n        /* \"#utility.yul\":12334:12700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:13125   */\n    tag_152:\n        /* \"#utility.yul\":12872:12876   */\n      0x00\n        /* \"#utility.yul\":12910:12912   */\n      0x20\n        /* \"#utility.yul\":12899:12908   */\n      dup3\n        /* \"#utility.yul\":12895:12913   */\n      add\n        /* \"#utility.yul\":12887:12913   */\n      swap1\n      pop\n        /* \"#utility.yul\":12959:12968   */\n      dup2\n        /* \"#utility.yul\":12953:12957   */\n      dup2\n        /* \"#utility.yul\":12949:12969   */\n      sub\n        /* \"#utility.yul\":12945:12946   */\n      0x00\n        /* \"#utility.yul\":12934:12943   */\n      dup4\n        /* \"#utility.yul\":12930:12947   */\n      add\n        /* \"#utility.yul\":12923:12970   */\n      mstore\n        /* \"#utility.yul\":12987:13118   */\n      tag_482\n        /* \"#utility.yul\":13113:13117   */\n      dup2\n        /* \"#utility.yul\":12987:13118   */\n      tag_355\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":12979:13118   */\n      swap1\n      pop\n        /* \"#utility.yul\":12706:13125   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13131:13274   */\n    tag_356:\n        /* \"#utility.yul\":13188:13193   */\n      0x00\n        /* \"#utility.yul\":13219:13225   */\n      dup2\n        /* \"#utility.yul\":13213:13226   */\n      mload\n        /* \"#utility.yul\":13204:13226   */\n      swap1\n      pop\n        /* \"#utility.yul\":13235:13268   */\n      tag_484\n        /* \"#utility.yul\":13262:13267   */\n      dup2\n        /* \"#utility.yul\":13235:13268   */\n      tag_337\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13131:13274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13280:13631   */\n    tag_157:\n        /* \"#utility.yul\":13350:13356   */\n      0x00\n        /* \"#utility.yul\":13399:13401   */\n      0x20\n        /* \"#utility.yul\":13387:13396   */\n      dup3\n        /* \"#utility.yul\":13378:13385   */\n      dup5\n        /* \"#utility.yul\":13374:13397   */\n      sub\n        /* \"#utility.yul\":13370:13402   */\n      slt\n        /* \"#utility.yul\":13367:13486   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":13405:13484   */\n      tag_487\n      tag_330\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13367:13486   */\n    tag_486:\n        /* \"#utility.yul\":13525:13526   */\n      0x00\n        /* \"#utility.yul\":13550:13614   */\n      tag_488\n        /* \"#utility.yul\":13606:13613   */\n      dup5\n        /* \"#utility.yul\":13597:13603   */\n      dup3\n        /* \"#utility.yul\":13586:13595   */\n      dup6\n        /* \"#utility.yul\":13582:13604   */\n      add\n        /* \"#utility.yul\":13550:13614   */\n      tag_356\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":13540:13614   */\n      swap2\n      pop\n        /* \"#utility.yul\":13496:13624   */\n      pop\n        /* \"#utility.yul\":13280:13631   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13637:13813   */\n    tag_357:\n        /* \"#utility.yul\":13777:13805   */\n      0x496e73756666696369656e7420546f6b656e412066756e647321000000000000\n        /* \"#utility.yul\":13773:13774   */\n      0x00\n        /* \"#utility.yul\":13765:13771   */\n      dup3\n        /* \"#utility.yul\":13761:13775   */\n      add\n        /* \"#utility.yul\":13754:13806   */\n      mstore\n        /* \"#utility.yul\":13637:13813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13819:14185   */\n    tag_358:\n        /* \"#utility.yul\":13961:13964   */\n      0x00\n        /* \"#utility.yul\":13982:14049   */\n      tag_491\n        /* \"#utility.yul\":14046:14048   */\n      0x1a\n        /* \"#utility.yul\":14041:14044   */\n      dup4\n        /* \"#utility.yul\":13982:14049   */\n      tag_325\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13975:14049   */\n      swap2\n      pop\n        /* \"#utility.yul\":14058:14151   */\n      tag_492\n        /* \"#utility.yul\":14147:14150   */\n      dup3\n        /* \"#utility.yul\":14058:14151   */\n      tag_357\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14176:14178   */\n      0x20\n        /* \"#utility.yul\":14171:14174   */\n      dup3\n        /* \"#utility.yul\":14167:14179   */\n      add\n        /* \"#utility.yul\":14160:14179   */\n      swap1\n      pop\n        /* \"#utility.yul\":13819:14185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14191:14610   */\n    tag_160:\n        /* \"#utility.yul\":14357:14361   */\n      0x00\n        /* \"#utility.yul\":14395:14397   */\n      0x20\n        /* \"#utility.yul\":14384:14393   */\n      dup3\n        /* \"#utility.yul\":14380:14398   */\n      add\n        /* \"#utility.yul\":14372:14398   */\n      swap1\n      pop\n        /* \"#utility.yul\":14444:14453   */\n      dup2\n        /* \"#utility.yul\":14438:14442   */\n      dup2\n        /* \"#utility.yul\":14434:14454   */\n      sub\n        /* \"#utility.yul\":14430:14431   */\n      0x00\n        /* \"#utility.yul\":14419:14428   */\n      dup4\n        /* \"#utility.yul\":14415:14432   */\n      add\n        /* \"#utility.yul\":14408:14455   */\n      mstore\n        /* \"#utility.yul\":14472:14603   */\n      tag_494\n        /* \"#utility.yul\":14598:14602   */\n      dup2\n        /* \"#utility.yul\":14472:14603   */\n      tag_358\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":14464:14603   */\n      swap1\n      pop\n        /* \"#utility.yul\":14191:14610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14616:14792   */\n    tag_359:\n        /* \"#utility.yul\":14756:14784   */\n      0x496e73756666696369656e7420546f6b656e422066756e647321000000000000\n        /* \"#utility.yul\":14752:14753   */\n      0x00\n        /* \"#utility.yul\":14744:14750   */\n      dup3\n        /* \"#utility.yul\":14740:14754   */\n      add\n        /* \"#utility.yul\":14733:14785   */\n      mstore\n        /* \"#utility.yul\":14616:14792   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14798:15164   */\n    tag_360:\n        /* \"#utility.yul\":14940:14943   */\n      0x00\n        /* \"#utility.yul\":14961:15028   */\n      tag_497\n        /* \"#utility.yul\":15025:15027   */\n      0x1a\n        /* \"#utility.yul\":15020:15023   */\n      dup4\n        /* \"#utility.yul\":14961:15028   */\n      tag_325\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":14954:15028   */\n      swap2\n      pop\n        /* \"#utility.yul\":15037:15130   */\n      tag_498\n        /* \"#utility.yul\":15126:15129   */\n      dup3\n        /* \"#utility.yul\":15037:15130   */\n      tag_359\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15155:15157   */\n      0x20\n        /* \"#utility.yul\":15150:15153   */\n      dup3\n        /* \"#utility.yul\":15146:15158   */\n      add\n        /* \"#utility.yul\":15139:15158   */\n      swap1\n      pop\n        /* \"#utility.yul\":14798:15164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15170:15589   */\n    tag_167:\n        /* \"#utility.yul\":15336:15340   */\n      0x00\n        /* \"#utility.yul\":15374:15376   */\n      0x20\n        /* \"#utility.yul\":15363:15372   */\n      dup3\n        /* \"#utility.yul\":15359:15377   */\n      add\n        /* \"#utility.yul\":15351:15377   */\n      swap1\n      pop\n        /* \"#utility.yul\":15423:15432   */\n      dup2\n        /* \"#utility.yul\":15417:15421   */\n      dup2\n        /* \"#utility.yul\":15413:15433   */\n      sub\n        /* \"#utility.yul\":15409:15410   */\n      0x00\n        /* \"#utility.yul\":15398:15407   */\n      dup4\n        /* \"#utility.yul\":15394:15411   */\n      add\n        /* \"#utility.yul\":15387:15434   */\n      mstore\n        /* \"#utility.yul\":15451:15582   */\n      tag_500\n        /* \"#utility.yul\":15577:15581   */\n      dup2\n        /* \"#utility.yul\":15451:15582   */\n      tag_360\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":15443:15582   */\n      swap1\n      pop\n        /* \"#utility.yul\":15170:15589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15595:15775   */\n    tag_361:\n        /* \"#utility.yul\":15643:15720   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15640:15641   */\n      0x00\n        /* \"#utility.yul\":15633:15721   */\n      mstore\n        /* \"#utility.yul\":15740:15744   */\n      0x11\n        /* \"#utility.yul\":15737:15738   */\n      0x04\n        /* \"#utility.yul\":15730:15745   */\n      mstore\n        /* \"#utility.yul\":15764:15768   */\n      0x24\n        /* \"#utility.yul\":15761:15762   */\n      0x00\n        /* \"#utility.yul\":15754:15769   */\n      revert\n        /* \"#utility.yul\":15781:15972   */\n    tag_169:\n        /* \"#utility.yul\":15821:15824   */\n      0x00\n        /* \"#utility.yul\":15840:15860   */\n      tag_503\n        /* \"#utility.yul\":15858:15859   */\n      dup3\n        /* \"#utility.yul\":15840:15860   */\n      tag_336\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":15835:15860   */\n      swap2\n      pop\n        /* \"#utility.yul\":15874:15894   */\n      tag_504\n        /* \"#utility.yul\":15892:15893   */\n      dup4\n        /* \"#utility.yul\":15874:15894   */\n      tag_336\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":15869:15894   */\n      swap3\n      pop\n        /* \"#utility.yul\":15917:15918   */\n      dup3\n        /* \"#utility.yul\":15914:15915   */\n      dup3\n        /* \"#utility.yul\":15910:15919   */\n      add\n        /* \"#utility.yul\":15903:15919   */\n      swap1\n      pop\n        /* \"#utility.yul\":15938:15941   */\n      dup1\n        /* \"#utility.yul\":15935:15936   */\n      dup3\n        /* \"#utility.yul\":15932:15942   */\n      gt\n        /* \"#utility.yul\":15929:15965   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":15945:15963   */\n      tag_506\n      tag_361\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15929:15965   */\n    tag_505:\n        /* \"#utility.yul\":15781:15972   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15978:16420   */\n    tag_172:\n        /* \"#utility.yul\":16127:16131   */\n      0x00\n        /* \"#utility.yul\":16165:16167   */\n      0x60\n        /* \"#utility.yul\":16154:16163   */\n      dup3\n        /* \"#utility.yul\":16150:16168   */\n      add\n        /* \"#utility.yul\":16142:16168   */\n      swap1\n      pop\n        /* \"#utility.yul\":16178:16249   */\n      tag_508\n        /* \"#utility.yul\":16246:16247   */\n      0x00\n        /* \"#utility.yul\":16235:16244   */\n      dup4\n        /* \"#utility.yul\":16231:16248   */\n      add\n        /* \"#utility.yul\":16222:16228   */\n      dup7\n        /* \"#utility.yul\":16178:16249   */\n      tag_344\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":16259:16331   */\n      tag_509\n        /* \"#utility.yul\":16327:16329   */\n      0x20\n        /* \"#utility.yul\":16316:16325   */\n      dup4\n        /* \"#utility.yul\":16312:16330   */\n      add\n        /* \"#utility.yul\":16303:16309   */\n      dup6\n        /* \"#utility.yul\":16259:16331   */\n      tag_344\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16341:16413   */\n      tag_510\n        /* \"#utility.yul\":16409:16411   */\n      0x40\n        /* \"#utility.yul\":16398:16407   */\n      dup4\n        /* \"#utility.yul\":16394:16412   */\n      add\n        /* \"#utility.yul\":16385:16391   */\n      dup5\n        /* \"#utility.yul\":16341:16413   */\n      tag_341\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":15978:16420   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16426:16542   */\n    tag_362:\n        /* \"#utility.yul\":16496:16517   */\n      tag_512\n        /* \"#utility.yul\":16511:16516   */\n      dup2\n        /* \"#utility.yul\":16496:16517   */\n      tag_339\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16489:16494   */\n      dup2\n        /* \"#utility.yul\":16486:16518   */\n      eq\n        /* \"#utility.yul\":16476:16536   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":16532:16533   */\n      0x00\n        /* \"#utility.yul\":16529:16530   */\n      0x00\n        /* \"#utility.yul\":16522:16534   */\n      revert\n        /* \"#utility.yul\":16476:16536   */\n    tag_513:\n        /* \"#utility.yul\":16426:16542   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16548:16685   */\n    tag_363:\n        /* \"#utility.yul\":16602:16607   */\n      0x00\n        /* \"#utility.yul\":16633:16639   */\n      dup2\n        /* \"#utility.yul\":16627:16640   */\n      mload\n        /* \"#utility.yul\":16618:16640   */\n      swap1\n      pop\n        /* \"#utility.yul\":16649:16679   */\n      tag_515\n        /* \"#utility.yul\":16673:16678   */\n      dup2\n        /* \"#utility.yul\":16649:16679   */\n      tag_362\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16548:16685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16691:17036   */\n    tag_176:\n        /* \"#utility.yul\":16758:16764   */\n      0x00\n        /* \"#utility.yul\":16807:16809   */\n      0x20\n        /* \"#utility.yul\":16795:16804   */\n      dup3\n        /* \"#utility.yul\":16786:16793   */\n      dup5\n        /* \"#utility.yul\":16782:16805   */\n      sub\n        /* \"#utility.yul\":16778:16810   */\n      slt\n        /* \"#utility.yul\":16775:16894   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":16813:16892   */\n      tag_518\n      tag_330\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":16775:16894   */\n    tag_517:\n        /* \"#utility.yul\":16933:16934   */\n      0x00\n        /* \"#utility.yul\":16958:17019   */\n      tag_519\n        /* \"#utility.yul\":17011:17018   */\n      dup5\n        /* \"#utility.yul\":17002:17008   */\n      dup3\n        /* \"#utility.yul\":16991:17000   */\n      dup6\n        /* \"#utility.yul\":16987:17009   */\n      add\n        /* \"#utility.yul\":16958:17019   */\n      tag_363\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":16948:17019   */\n      swap2\n      pop\n        /* \"#utility.yul\":16904:17029   */\n      pop\n        /* \"#utility.yul\":16691:17036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17042:17374   */\n    tag_184:\n        /* \"#utility.yul\":17163:17167   */\n      0x00\n        /* \"#utility.yul\":17201:17203   */\n      0x40\n        /* \"#utility.yul\":17190:17199   */\n      dup3\n        /* \"#utility.yul\":17186:17204   */\n      add\n        /* \"#utility.yul\":17178:17204   */\n      swap1\n      pop\n        /* \"#utility.yul\":17214:17285   */\n      tag_521\n        /* \"#utility.yul\":17282:17283   */\n      0x00\n        /* \"#utility.yul\":17271:17280   */\n      dup4\n        /* \"#utility.yul\":17267:17284   */\n      add\n        /* \"#utility.yul\":17258:17264   */\n      dup6\n        /* \"#utility.yul\":17214:17285   */\n      tag_344\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":17295:17367   */\n      tag_522\n        /* \"#utility.yul\":17363:17365   */\n      0x20\n        /* \"#utility.yul\":17352:17361   */\n      dup4\n        /* \"#utility.yul\":17348:17366   */\n      add\n        /* \"#utility.yul\":17339:17345   */\n      dup5\n        /* \"#utility.yul\":17295:17367   */\n      tag_341\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":17042:17374   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17380:17547   */\n    tag_364:\n        /* \"#utility.yul\":17520:17539   */\n      0x446561646c696e65207265616368656421000000000000000000000000000000\n        /* \"#utility.yul\":17516:17517   */\n      0x00\n        /* \"#utility.yul\":17508:17514   */\n      dup3\n        /* \"#utility.yul\":17504:17518   */\n      add\n        /* \"#utility.yul\":17497:17540   */\n      mstore\n        /* \"#utility.yul\":17380:17547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17553:17919   */\n    tag_365:\n        /* \"#utility.yul\":17695:17698   */\n      0x00\n        /* \"#utility.yul\":17716:17783   */\n      tag_525\n        /* \"#utility.yul\":17780:17782   */\n      0x11\n        /* \"#utility.yul\":17775:17778   */\n      dup4\n        /* \"#utility.yul\":17716:17783   */\n      tag_325\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":17709:17783   */\n      swap2\n      pop\n        /* \"#utility.yul\":17792:17885   */\n      tag_526\n        /* \"#utility.yul\":17881:17884   */\n      dup3\n        /* \"#utility.yul\":17792:17885   */\n      tag_364\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":17910:17912   */\n      0x20\n        /* \"#utility.yul\":17905:17908   */\n      dup3\n        /* \"#utility.yul\":17901:17913   */\n      add\n        /* \"#utility.yul\":17894:17913   */\n      swap1\n      pop\n        /* \"#utility.yul\":17553:17919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17925:18344   */\n    tag_190:\n        /* \"#utility.yul\":18091:18095   */\n      0x00\n        /* \"#utility.yul\":18129:18131   */\n      0x20\n        /* \"#utility.yul\":18118:18127   */\n      dup3\n        /* \"#utility.yul\":18114:18132   */\n      add\n        /* \"#utility.yul\":18106:18132   */\n      swap1\n      pop\n        /* \"#utility.yul\":18178:18187   */\n      dup2\n        /* \"#utility.yul\":18172:18176   */\n      dup2\n        /* \"#utility.yul\":18168:18188   */\n      sub\n        /* \"#utility.yul\":18164:18165   */\n      0x00\n        /* \"#utility.yul\":18153:18162   */\n      dup4\n        /* \"#utility.yul\":18149:18166   */\n      add\n        /* \"#utility.yul\":18142:18189   */\n      mstore\n        /* \"#utility.yul\":18206:18337   */\n      tag_528\n        /* \"#utility.yul\":18332:18336   */\n      dup2\n        /* \"#utility.yul\":18206:18337   */\n      tag_365\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":18198:18337   */\n      swap1\n      pop\n        /* \"#utility.yul\":17925:18344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18350:18792   */\n    tag_206:\n        /* \"#utility.yul\":18499:18503   */\n      0x00\n        /* \"#utility.yul\":18537:18539   */\n      0x60\n        /* \"#utility.yul\":18526:18535   */\n      dup3\n        /* \"#utility.yul\":18522:18540   */\n      add\n        /* \"#utility.yul\":18514:18540   */\n      swap1\n      pop\n        /* \"#utility.yul\":18550:18621   */\n      tag_530\n        /* \"#utility.yul\":18618:18619   */\n      0x00\n        /* \"#utility.yul\":18607:18616   */\n      dup4\n        /* \"#utility.yul\":18603:18620   */\n      add\n        /* \"#utility.yul\":18594:18600   */\n      dup7\n        /* \"#utility.yul\":18550:18621   */\n      tag_344\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":18631:18703   */\n      tag_531\n        /* \"#utility.yul\":18699:18701   */\n      0x20\n        /* \"#utility.yul\":18688:18697   */\n      dup4\n        /* \"#utility.yul\":18684:18702   */\n      add\n        /* \"#utility.yul\":18675:18681   */\n      dup6\n        /* \"#utility.yul\":18631:18703   */\n      tag_341\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":18713:18785   */\n      tag_532\n        /* \"#utility.yul\":18781:18783   */\n      0x40\n        /* \"#utility.yul\":18770:18779   */\n      dup4\n        /* \"#utility.yul\":18766:18784   */\n      add\n        /* \"#utility.yul\":18757:18763   */\n      dup5\n        /* \"#utility.yul\":18713:18785   */\n      tag_341\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":18350:18792   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18798:19208   */\n    tag_238:\n        /* \"#utility.yul\":18838:18845   */\n      0x00\n        /* \"#utility.yul\":18861:18881   */\n      tag_534\n        /* \"#utility.yul\":18879:18880   */\n      dup3\n        /* \"#utility.yul\":18861:18881   */\n      tag_336\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":18856:18881   */\n      swap2\n      pop\n        /* \"#utility.yul\":18895:18915   */\n      tag_535\n        /* \"#utility.yul\":18913:18914   */\n      dup4\n        /* \"#utility.yul\":18895:18915   */\n      tag_336\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":18890:18915   */\n      swap3\n      pop\n        /* \"#utility.yul\":18950:18951   */\n      dup3\n        /* \"#utility.yul\":18947:18948   */\n      dup3\n        /* \"#utility.yul\":18943:18952   */\n      mul\n        /* \"#utility.yul\":18972:19002   */\n      tag_536\n        /* \"#utility.yul\":18990:19001   */\n      dup2\n        /* \"#utility.yul\":18972:19002   */\n      tag_336\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":18961:19002   */\n      swap2\n      pop\n        /* \"#utility.yul\":19151:19152   */\n      dup3\n        /* \"#utility.yul\":19142:19149   */\n      dup3\n        /* \"#utility.yul\":19138:19153   */\n      div\n        /* \"#utility.yul\":19135:19136   */\n      dup5\n        /* \"#utility.yul\":19132:19154   */\n      eq\n        /* \"#utility.yul\":19112:19113   */\n      dup4\n        /* \"#utility.yul\":19105:19114   */\n      iszero\n        /* \"#utility.yul\":19085:19168   */\n      or\n        /* \"#utility.yul\":19062:19201   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":19181:19199   */\n      tag_538\n      tag_361\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":19062:19201   */\n    tag_537:\n        /* \"#utility.yul\":18846:19208   */\n      pop\n        /* \"#utility.yul\":18798:19208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19214:19394   */\n    tag_289:\n        /* \"#utility.yul\":19262:19339   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19259:19260   */\n      0x00\n        /* \"#utility.yul\":19252:19340   */\n      mstore\n        /* \"#utility.yul\":19359:19363   */\n      0x12\n        /* \"#utility.yul\":19356:19357   */\n      0x04\n        /* \"#utility.yul\":19349:19364   */\n      mstore\n        /* \"#utility.yul\":19383:19387   */\n      0x24\n        /* \"#utility.yul\":19380:19381   */\n      0x00\n        /* \"#utility.yul\":19373:19388   */\n      revert\n        /* \"#utility.yul\":19400:19585   */\n    tag_240:\n        /* \"#utility.yul\":19440:19441   */\n      0x00\n        /* \"#utility.yul\":19457:19477   */\n      tag_541\n        /* \"#utility.yul\":19475:19476   */\n      dup3\n        /* \"#utility.yul\":19457:19477   */\n      tag_336\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":19452:19477   */\n      swap2\n      pop\n        /* \"#utility.yul\":19491:19511   */\n      tag_542\n        /* \"#utility.yul\":19509:19510   */\n      dup4\n        /* \"#utility.yul\":19491:19511   */\n      tag_336\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":19486:19511   */\n      swap3\n      pop\n        /* \"#utility.yul\":19530:19531   */\n      dup3\n        /* \"#utility.yul\":19520:19555   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":19535:19553   */\n      tag_544\n      tag_289\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":19520:19555   */\n    tag_543:\n        /* \"#utility.yul\":19577:19578   */\n      dup3\n        /* \"#utility.yul\":19574:19575   */\n      dup3\n        /* \"#utility.yul\":19570:19579   */\n      div\n        /* \"#utility.yul\":19565:19579   */\n      swap1\n      pop\n        /* \"#utility.yul\":19400:19585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202e0ca18b788c89ee5df0d222059a4b25d8e1684c528d228ad27af9d15554cff764736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_4541": {
									"entryPoint": null,
									"id": 4541,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 326,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 994,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1031,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6778:12",
										"nodeType": "YulBlock",
										"src": "0:6778:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "922:274:12",
													"nodeType": "YulBlock",
													"src": "922:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:12",
																"nodeType": "YulBlock",
																"src": "968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:12"
																			},
																			"nativeSrc": "970:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:12"
																		},
																		"nativeSrc": "970:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nativeSrc": "939:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nativeSrc": "935:32:12",
																"nodeType": "YulFunctionCall",
																"src": "935:32:12"
															},
															"nativeSrc": "932:119:12",
															"nodeType": "YulIf",
															"src": "932:119:12"
														},
														{
															"nativeSrc": "1061:128:12",
															"nodeType": "YulBlock",
															"src": "1061:128:12",
															"statements": [
																{
																	"nativeSrc": "1076:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:12"
																				},
																				"nativeSrc": "1147:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:12"
																		},
																		"nativeSrc": "1115:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:12",
														"nodeType": "YulTypedName",
														"src": "892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:12",
														"nodeType": "YulTypedName",
														"src": "903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:12",
														"nodeType": "YulTypedName",
														"src": "915:6:12",
														"type": ""
													}
												],
												"src": "845:351:12"
											},
											{
												"body": {
													"nativeSrc": "1261:40:12",
													"nodeType": "YulBlock",
													"src": "1261:40:12",
													"statements": [
														{
															"nativeSrc": "1272:22:12",
															"nodeType": "YulAssignment",
															"src": "1272:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:12"
																},
																"nativeSrc": "1282:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:12",
														"nodeType": "YulTypedName",
														"src": "1244:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:12",
														"nodeType": "YulTypedName",
														"src": "1254:6:12",
														"type": ""
													}
												],
												"src": "1202:99:12"
											},
											{
												"body": {
													"nativeSrc": "1335:152:12",
													"nodeType": "YulBlock",
													"src": "1335:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:12"
																},
																"nativeSrc": "1345:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:12"
															},
															"nativeSrc": "1345:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:12"
																},
																"nativeSrc": "1442:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:12"
															},
															"nativeSrc": "1442:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:12"
																},
																"nativeSrc": "1466:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:12"
															},
															"nativeSrc": "1466:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:12"
											},
											{
												"body": {
													"nativeSrc": "1521:152:12",
													"nodeType": "YulBlock",
													"src": "1521:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:12"
																},
																"nativeSrc": "1531:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:12"
															},
															"nativeSrc": "1531:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:12"
																},
																"nativeSrc": "1628:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:12"
															},
															"nativeSrc": "1628:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:12"
																},
																"nativeSrc": "1652:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:12"
															},
															"nativeSrc": "1652:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:12"
											},
											{
												"body": {
													"nativeSrc": "1730:269:12",
													"nodeType": "YulBlock",
													"src": "1730:269:12",
													"statements": [
														{
															"nativeSrc": "1740:22:12",
															"nodeType": "YulAssignment",
															"src": "1740:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:12"
																},
																"nativeSrc": "1750:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:12"
																}
															]
														},
														{
															"nativeSrc": "1771:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:12"
																},
																"nativeSrc": "1797:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:12",
																"nodeType": "YulBlock",
																"src": "1848:51:12",
																"statements": [
																	{
																		"nativeSrc": "1862:27:12",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:12"
																			},
																			"nativeSrc": "1872:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:12"
																},
																"nativeSrc": "1821:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:12"
															},
															"nativeSrc": "1818:81:12",
															"nodeType": "YulIf",
															"src": "1818:81:12"
														},
														{
															"body": {
																"nativeSrc": "1951:42:12",
																"nodeType": "YulBlock",
																"src": "1951:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:12"
																			},
																			"nativeSrc": "1965:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:12"
																		},
																		"nativeSrc": "1965:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:12"
																		},
																		"nativeSrc": "1935:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:12"
																},
																"nativeSrc": "1912:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:12"
															},
															"nativeSrc": "1909:84:12",
															"nodeType": "YulIf",
															"src": "1909:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:12",
														"nodeType": "YulTypedName",
														"src": "1714:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:12",
														"nodeType": "YulTypedName",
														"src": "1723:6:12",
														"type": ""
													}
												],
												"src": "1679:320:12"
											},
											{
												"body": {
													"nativeSrc": "2059:87:12",
													"nodeType": "YulBlock",
													"src": "2059:87:12",
													"statements": [
														{
															"nativeSrc": "2069:11:12",
															"nodeType": "YulAssignment",
															"src": "2069:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:12",
																"nodeType": "YulIdentifier",
																"src": "2077:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:12"
																},
																"nativeSrc": "2090:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:12"
															},
															"nativeSrc": "2090:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:12"
														},
														{
															"nativeSrc": "2113:26:12",
															"nodeType": "YulAssignment",
															"src": "2113:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:12"
																},
																"nativeSrc": "2121:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:12",
														"nodeType": "YulTypedName",
														"src": "2046:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:12",
														"nodeType": "YulTypedName",
														"src": "2054:4:12",
														"type": ""
													}
												],
												"src": "2005:141:12"
											},
											{
												"body": {
													"nativeSrc": "2196:49:12",
													"nodeType": "YulBlock",
													"src": "2196:49:12",
													"statements": [
														{
															"nativeSrc": "2206:33:12",
															"nodeType": "YulAssignment",
															"src": "2206:33:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:12"
																		},
																		"nativeSrc": "2220:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:12"
																},
																"nativeSrc": "2216:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:12"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:12",
														"nodeType": "YulTypedName",
														"src": "2179:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:12",
														"nodeType": "YulTypedName",
														"src": "2189:6:12",
														"type": ""
													}
												],
												"src": "2152:93:12"
											},
											{
												"body": {
													"nativeSrc": "2304:54:12",
													"nodeType": "YulBlock",
													"src": "2304:54:12",
													"statements": [
														{
															"nativeSrc": "2314:37:12",
															"nodeType": "YulAssignment",
															"src": "2314:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:12"
																},
																"nativeSrc": "2335:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:12",
														"nodeType": "YulTypedName",
														"src": "2279:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:12",
														"nodeType": "YulTypedName",
														"src": "2285:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:12",
														"nodeType": "YulTypedName",
														"src": "2295:8:12",
														"type": ""
													}
												],
												"src": "2251:107:12"
											},
											{
												"body": {
													"nativeSrc": "2440:317:12",
													"nodeType": "YulBlock",
													"src": "2440:317:12",
													"statements": [
														{
															"nativeSrc": "2450:35:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:12"
																},
																"nativeSrc": "2467:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:12"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:12",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:12"
																},
																"nativeSrc": "2506:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:12",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:12",
															"nodeType": "YulAssignment",
															"src": "2612:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:12"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:12"
																},
																"nativeSrc": "2624:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:12"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:12"
																}
															]
														},
														{
															"nativeSrc": "2672:30:12",
															"nodeType": "YulAssignment",
															"src": "2672:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:12"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:12"
																		},
																		"nativeSrc": "2692:9:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:12"
																},
																"nativeSrc": "2681:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:12"
																}
															]
														},
														{
															"nativeSrc": "2711:40:12",
															"nodeType": "YulAssignment",
															"src": "2711:40:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:12"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:12"
																		},
																		"nativeSrc": "2731:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:12"
																},
																"nativeSrc": "2721:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:12"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:12",
														"nodeType": "YulTypedName",
														"src": "2401:5:12",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:12",
														"nodeType": "YulTypedName",
														"src": "2408:10:12",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:12",
														"nodeType": "YulTypedName",
														"src": "2420:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:12",
														"nodeType": "YulTypedName",
														"src": "2433:6:12",
														"type": ""
													}
												],
												"src": "2364:393:12"
											},
											{
												"body": {
													"nativeSrc": "2808:32:12",
													"nodeType": "YulBlock",
													"src": "2808:32:12",
													"statements": [
														{
															"nativeSrc": "2818:16:12",
															"nodeType": "YulAssignment",
															"src": "2818:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:12",
																"nodeType": "YulIdentifier",
																"src": "2829:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:12",
														"nodeType": "YulTypedName",
														"src": "2790:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:12",
														"nodeType": "YulTypedName",
														"src": "2800:7:12",
														"type": ""
													}
												],
												"src": "2763:77:12"
											},
											{
												"body": {
													"nativeSrc": "2878:28:12",
													"nodeType": "YulBlock",
													"src": "2878:28:12",
													"statements": [
														{
															"nativeSrc": "2888:12:12",
															"nodeType": "YulAssignment",
															"src": "2888:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:12",
																"nodeType": "YulIdentifier",
																"src": "2895:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:12",
														"nodeType": "YulTypedName",
														"src": "2864:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:12",
														"nodeType": "YulTypedName",
														"src": "2874:3:12",
														"type": ""
													}
												],
												"src": "2846:60:12"
											},
											{
												"body": {
													"nativeSrc": "2972:82:12",
													"nodeType": "YulBlock",
													"src": "2972:82:12",
													"statements": [
														{
															"nativeSrc": "2982:66:12",
															"nodeType": "YulAssignment",
															"src": "2982:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:12"
																				},
																				"nativeSrc": "3022:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:12"
																		},
																		"nativeSrc": "3013:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:12"
																},
																"nativeSrc": "2995:53:12",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:12",
														"nodeType": "YulTypedName",
														"src": "2952:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:12",
														"nodeType": "YulTypedName",
														"src": "2962:9:12",
														"type": ""
													}
												],
												"src": "2912:142:12"
											},
											{
												"body": {
													"nativeSrc": "3107:28:12",
													"nodeType": "YulBlock",
													"src": "3107:28:12",
													"statements": [
														{
															"nativeSrc": "3117:12:12",
															"nodeType": "YulAssignment",
															"src": "3117:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:12",
																"nodeType": "YulIdentifier",
																"src": "3124:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:12"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:12",
														"nodeType": "YulTypedName",
														"src": "3093:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:12",
														"nodeType": "YulTypedName",
														"src": "3103:3:12",
														"type": ""
													}
												],
												"src": "3060:75:12"
											},
											{
												"body": {
													"nativeSrc": "3217:193:12",
													"nodeType": "YulBlock",
													"src": "3217:193:12",
													"statements": [
														{
															"nativeSrc": "3227:63:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:12"
																},
																"nativeSrc": "3251:39:12",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:12"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:12",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:12"
																				},
																				"nativeSrc": "3340:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:12",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:12"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:12",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:12"
																				},
																				"nativeSrc": "3361:41:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:12"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:12"
																		},
																		"nativeSrc": "3312:91:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:12"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:12"
																},
																"nativeSrc": "3299:105:12",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:12"
															},
															"nativeSrc": "3299:105:12",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:12"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:12",
														"nodeType": "YulTypedName",
														"src": "3194:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:12",
														"nodeType": "YulTypedName",
														"src": "3200:6:12",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:12",
														"nodeType": "YulTypedName",
														"src": "3208:7:12",
														"type": ""
													}
												],
												"src": "3141:269:12"
											},
											{
												"body": {
													"nativeSrc": "3465:24:12",
													"nodeType": "YulBlock",
													"src": "3465:24:12",
													"statements": [
														{
															"nativeSrc": "3475:8:12",
															"nodeType": "YulAssignment",
															"src": "3475:8:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:12",
																"nodeType": "YulLiteral",
																"src": "3482:1:12",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:12"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:12",
														"nodeType": "YulTypedName",
														"src": "3461:3:12",
														"type": ""
													}
												],
												"src": "3416:73:12"
											},
											{
												"body": {
													"nativeSrc": "3548:136:12",
													"nodeType": "YulBlock",
													"src": "3548:136:12",
													"statements": [
														{
															"nativeSrc": "3558:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:12",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:12"
																},
																"nativeSrc": "3572:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:12"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:12"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:12"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:12"
																},
																"nativeSrc": "3613:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:12"
															},
															"nativeSrc": "3613:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:12"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:12",
														"nodeType": "YulTypedName",
														"src": "3534:4:12",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:12",
														"nodeType": "YulTypedName",
														"src": "3540:6:12",
														"type": ""
													}
												],
												"src": "3495:189:12"
											},
											{
												"body": {
													"nativeSrc": "3740:136:12",
													"nodeType": "YulBlock",
													"src": "3740:136:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:12",
																"nodeType": "YulBlock",
																"src": "3807:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:12",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:12"
																			},
																			"nativeSrc": "3821:39:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:12"
																		},
																		"nativeSrc": "3821:39:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:12"
																},
																"nativeSrc": "3757:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:12"
															},
															"nativeSrc": "3750:120:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:12",
																"nodeType": "YulBlock",
																"src": "3772:26:12",
																"statements": [
																	{
																		"nativeSrc": "3774:22:12",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:12"
																			},
																			"nativeSrc": "3783:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:12"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:12",
																"nodeType": "YulBlock",
																"src": "3754:2:12",
																"statements": []
															},
															"src": "3750:120:12"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:12",
														"nodeType": "YulTypedName",
														"src": "3728:5:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:12",
														"nodeType": "YulTypedName",
														"src": "3735:3:12",
														"type": ""
													}
												],
												"src": "3690:186:12"
											},
											{
												"body": {
													"nativeSrc": "3961:464:12",
													"nodeType": "YulBlock",
													"src": "3961:464:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:12",
																"nodeType": "YulBlock",
																"src": "3987:431:12",
																"statements": [
																	{
																		"nativeSrc": "4001:54:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:12"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:12",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:12"
																			},
																			"nativeSrc": "4017:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:12"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:12",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:12"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:12",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:12"
																					},
																					"nativeSrc": "4101:29:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:12"
																			},
																			"nativeSrc": "4087:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:12",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:12",
																			"nodeType": "YulBlock",
																			"src": "4288:27:12",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:12",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:12",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:12",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:12",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:12"
																			},
																			"nativeSrc": "4269:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:12"
																		},
																		"nativeSrc": "4266:49:12",
																		"nodeType": "YulIf",
																		"src": "4266:49:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:12",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:12"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:12"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:12",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:12"
																							},
																							"nativeSrc": "4384:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:12"
																					},
																					"nativeSrc": "4370:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:12"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:12",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:12"
																			},
																			"nativeSrc": "4328:80:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:12"
																		},
																		"nativeSrc": "4328:80:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:12"
																},
																"nativeSrc": "3975:11:12",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:12"
															},
															"nativeSrc": "3972:446:12",
															"nodeType": "YulIf",
															"src": "3972:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:12",
														"nodeType": "YulTypedName",
														"src": "3937:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:12",
														"nodeType": "YulTypedName",
														"src": "3944:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:12",
														"nodeType": "YulTypedName",
														"src": "3949:10:12",
														"type": ""
													}
												],
												"src": "3882:543:12"
											},
											{
												"body": {
													"nativeSrc": "4494:54:12",
													"nodeType": "YulBlock",
													"src": "4494:54:12",
													"statements": [
														{
															"nativeSrc": "4504:37:12",
															"nodeType": "YulAssignment",
															"src": "4504:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:12"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:12"
																},
																"nativeSrc": "4525:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:12"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:12",
														"nodeType": "YulTypedName",
														"src": "4469:4:12",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:12",
														"nodeType": "YulTypedName",
														"src": "4475:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:12",
														"nodeType": "YulTypedName",
														"src": "4485:8:12",
														"type": ""
													}
												],
												"src": "4431:117:12"
											},
											{
												"body": {
													"nativeSrc": "4605:118:12",
													"nodeType": "YulBlock",
													"src": "4605:118:12",
													"statements": [
														{
															"nativeSrc": "4615:68:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:12",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:12"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:12"
																				},
																				"nativeSrc": "4660:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:12"
																				},
																				"nativeSrc": "4675:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:12"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:12"
																		},
																		"nativeSrc": "4631:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:12"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:12"
																},
																"nativeSrc": "4627:56:12",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:12"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:12",
															"nodeType": "YulAssignment",
															"src": "4692:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:12"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:12"
																},
																"nativeSrc": "4702:15:12",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:12"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:12",
														"nodeType": "YulTypedName",
														"src": "4582:4:12",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:12",
														"nodeType": "YulTypedName",
														"src": "4588:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:12",
														"nodeType": "YulTypedName",
														"src": "4598:6:12",
														"type": ""
													}
												],
												"src": "4554:169:12"
											},
											{
												"body": {
													"nativeSrc": "4809:214:12",
													"nodeType": "YulBlock",
													"src": "4809:214:12",
													"statements": [
														{
															"nativeSrc": "4942:37:12",
															"nodeType": "YulAssignment",
															"src": "4942:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:12"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:12"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:12"
																},
																"nativeSrc": "4950:29:12",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:12"
																}
															]
														},
														{
															"nativeSrc": "4988:29:12",
															"nodeType": "YulAssignment",
															"src": "4988:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:12",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:12"
																		},
																		"nativeSrc": "5005:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:12"
																},
																"nativeSrc": "4996:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:12",
														"nodeType": "YulTypedName",
														"src": "4790:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:12",
														"nodeType": "YulTypedName",
														"src": "4796:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:12",
														"nodeType": "YulTypedName",
														"src": "4804:4:12",
														"type": ""
													}
												],
												"src": "4728:295:12"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:12",
													"nodeType": "YulBlock",
													"src": "5120:1303:12",
													"statements": [
														{
															"nativeSrc": "5131:51:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:12"
																},
																"nativeSrc": "5145:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:12",
																"nodeType": "YulBlock",
																"src": "5267:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:12"
																			},
																			"nativeSrc": "5269:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:12"
																		},
																		"nativeSrc": "5269:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:12",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:12"
																},
																"nativeSrc": "5236:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:12"
															},
															"nativeSrc": "5233:56:12",
															"nodeType": "YulIf",
															"src": "5233:56:12"
														},
														{
															"nativeSrc": "5299:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:12"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:12"
																		},
																		"nativeSrc": "5339:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:12"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:12"
																},
																"nativeSrc": "5313:38:12",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:12"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:12"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:12",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:12"
																},
																"nativeSrc": "5398:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:12"
															},
															"nativeSrc": "5398:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:12"
														},
														{
															"nativeSrc": "5475:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:12",
																"nodeType": "YulLiteral",
																"src": "5492:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:12",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:12",
															"nodeType": "YulAssignment",
															"src": "5503:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:12",
																"nodeType": "YulLiteral",
																"src": "5516:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:12",
																		"nodeType": "YulBlock",
																		"src": "5567:611:12",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:12",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:12",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:12"
																							},
																							"nativeSrc": "5608:9:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:12"
																					},
																					"nativeSrc": "5596:22:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:12",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:12",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:12"
																					},
																					"nativeSrc": "5646:37:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:12",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:12",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:12",
																					"nodeType": "YulBlock",
																					"src": "5764:163:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:12"
																												},
																												"nativeSrc": "5803:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:12"
																										},
																										"nativeSrc": "5797:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:12"
																								},
																								"nativeSrc": "5782:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:12"
																							},
																							"nativeSrc": "5782:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:12"
																						},
																						{
																							"nativeSrc": "5841:24:12",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:12",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:12"
																								},
																								"nativeSrc": "5851:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:12",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:12",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:12",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:12"
																								},
																								"nativeSrc": "5895:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:12"
																					},
																					"nativeSrc": "5727:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:12"
																				},
																				"nativeSrc": "5719:208:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:12",
																					"nodeType": "YulBlock",
																					"src": "5742:21:12",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:12",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:12",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:12",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:12"
																								},
																								"nativeSrc": "5749:12:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:12",
																					"nodeType": "YulBlock",
																					"src": "5723:3:12",
																					"statements": []
																				},
																				"src": "5719:208:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:12",
																					"nodeType": "YulBlock",
																					"src": "5963:156:12",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:12"
																										},
																										"nativeSrc": "6004:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:12"
																								},
																								"nativeSrc": "5998:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:12",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:12",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:12"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:12",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:12",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:12"
																												},
																												"nativeSrc": "6086:17:12",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:12"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:12",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:12"
																										},
																										"nativeSrc": "6056:48:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:12"
																								},
																								"nativeSrc": "6041:64:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:12"
																							},
																							"nativeSrc": "6041:64:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:12"
																					},
																					"nativeSrc": "5943:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:12"
																				},
																				"nativeSrc": "5940:179:12",
																				"nodeType": "YulIf",
																				"src": "5940:179:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:12"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:12",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:12",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:12"
																									},
																									"nativeSrc": "6149:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:12",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:12"
																							},
																							"nativeSrc": "6145:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:12"
																					},
																					"nativeSrc": "6132:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:12"
																				},
																				"nativeSrc": "6132:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:12"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:12",
																	"nodeType": "YulCase",
																	"src": "5560:618:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:12",
																		"nodeType": "YulBlock",
																		"src": "6195:222:12",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:12",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:12",
																					"nodeType": "YulBlock",
																					"src": "6246:67:12",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:12",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:12"
																										},
																										"nativeSrc": "6279:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:12"
																								},
																								"nativeSrc": "6273:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:12"
																				},
																				"nativeSrc": "6236:77:12",
																				"nodeType": "YulIf",
																				"src": "6236:77:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:12"
																							},
																							"nativeSrc": "6339:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:12"
																					},
																					"nativeSrc": "6326:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:12"
																				},
																				"nativeSrc": "6326:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:12"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:12",
																	"nodeType": "YulCase",
																	"src": "6187:230:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:12"
																},
																"nativeSrc": "5537:14:12",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:12"
															},
															"nativeSrc": "5530:887:12",
															"nodeType": "YulSwitch",
															"src": "5530:887:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:12",
														"nodeType": "YulTypedName",
														"src": "5109:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:12",
														"nodeType": "YulTypedName",
														"src": "5115:3:12",
														"type": ""
													}
												],
												"src": "5028:1395:12"
											},
											{
												"body": {
													"nativeSrc": "6494:53:12",
													"nodeType": "YulBlock",
													"src": "6494:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:12"
																		},
																		"nativeSrc": "6516:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:12"
																},
																"nativeSrc": "6504:37:12",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:12"
															},
															"nativeSrc": "6504:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:12",
														"nodeType": "YulTypedName",
														"src": "6482:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:12",
														"nodeType": "YulTypedName",
														"src": "6489:3:12",
														"type": ""
													}
												],
												"src": "6429:118:12"
											},
											{
												"body": {
													"nativeSrc": "6651:124:12",
													"nodeType": "YulBlock",
													"src": "6651:124:12",
													"statements": [
														{
															"nativeSrc": "6661:26:12",
															"nodeType": "YulAssignment",
															"src": "6661:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:12"
																},
																"nativeSrc": "6669:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:12"
																		},
																		"nativeSrc": "6750:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:12"
																},
																"nativeSrc": "6697:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:12"
															},
															"nativeSrc": "6697:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:12",
														"nodeType": "YulTypedName",
														"src": "6623:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:12",
														"nodeType": "YulTypedName",
														"src": "6635:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:12",
														"nodeType": "YulTypedName",
														"src": "6646:4:12",
														"type": ""
													}
												],
												"src": "6553:222:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161272f38038061272f83398181016040528101906100319190610269565b806040518060400160405280600e81526020017f4c6971756964697479546f6b656e0000000000000000000000000000000000008152506040518060400160405280600381526020017f4c544b000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906104d1565b5080600490816100bd91906104d1565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906105af565b60405180910390fd5b61013f8161014660201b60201c565b50506105c8565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102388261020f565b9050919050565b6102488161022e565b8114610252575f5ffd5b50565b5f815190506102638161023f565b92915050565b5f6020828403121561027e5761027d61020b565b5b5f61028b84828501610255565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061030f57607f821691505b602082108103610322576103216102cb565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610349565b61038e8683610349565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103d26103cd6103c8846103a6565b6103af565b6103a6565b9050919050565b5f819050919050565b6103eb836103b8565b6103ff6103f7826103d9565b848454610355565b825550505050565b5f5f905090565b610416610407565b6104218184846103e2565b505050565b5b81811015610444576104395f8261040e565b600181019050610427565b5050565b601f8211156104895761045a81610328565b6104638461033a565b81016020851015610472578190505b61048661047e8561033a565b830182610426565b50505b505050565b5f82821c905092915050565b5f6104a95f198460080261048e565b1980831691505092915050565b5f6104c1838361049a565b9150826002028217905092915050565b6104da82610294565b67ffffffffffffffff8111156104f3576104f261029e565b5b6104fd82546102f8565b610508828285610448565b5f60209050601f831160018114610539575f8415610527578287015190505b61053185826104b6565b865550610598565b601f19841661054786610328565b5f5b8281101561056e57848901518255600182019150602085019450602081019050610549565b8683101561058b5784890151610587601f89168261049a565b8355505b6001600288020188555050505b505050505050565b6105a98161022e565b82525050565b5f6020820190506105c25f8301846105a0565b92915050565b61215a806105d55f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb14610264578063dd62ed3e14610294578063e8e33700146102c4578063f2fde38b146102f6576100fe565b8063715018a6146102145780638456cb591461021e5780638da5cb5b1461022857806395d89b4114610246576100fe565b8063313ce567116100d1578063313ce5671461019e5780633f4ba83a146101bc5780635c975abb146101c657806370a08231146101e4576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a610312565b604051610117919061181f565b60405180910390f35b61013a600480360381019061013591906118d0565b6103a2565b6040516101479190611928565b60405180910390f35b6101586103c4565b6040516101659190611950565b60405180910390f35b61018860048036038101906101839190611969565b6103cd565b6040516101959190611928565b60405180910390f35b6101a66103fb565b6040516101b391906119d4565b60405180910390f35b6101c4610403565b005b6101ce610415565b6040516101db9190611928565b60405180910390f35b6101fe60048036038101906101f991906119ed565b61042a565b60405161020b9190611950565b60405180910390f35b61021c61046f565b005b610226610482565b005b610230610494565b60405161023d9190611a27565b60405180910390f35b61024e6104bd565b60405161025b919061181f565b60405180910390f35b61027e600480360381019061027991906118d0565b61054d565b60405161028b9190611928565b60405180910390f35b6102ae60048036038101906102a99190611a40565b61056f565b6040516102bb9190611950565b60405180910390f35b6102de60048036038101906102d99190611a7e565b6105f1565b6040516102ed93929190611b2f565b60405180910390f35b610310600480360381019061030b91906119ed565b610b65565b005b60606003805461032190611b91565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611b91565b80156103985780601f1061036f57610100808354040283529160200191610398565b820191905f5260205f20905b81548152906001019060200180831161037b57829003601f168201915b5050505050905090565b5f5f6103ac610be9565b90506103b9818585610bf0565b600191505092915050565b5f600254905090565b5f5f6103d7610be9565b90506103e4858285610c02565b6103ef858585610c95565b60019150509392505050565b5f6012905090565b61040b610d85565b610413610e0c565b565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610477610d85565b6104805f610e6d565b565b61048a610d85565b610492610f32565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104cc90611b91565b80601f01602080910402602001604051908101604052809291908181526020018280546104f890611b91565b80156105435780601f1061051a57610100808354040283529160200191610543565b820191905f5260205f20905b81548152906001019060200180831161052657829003601f168201915b5050505050905090565b5f5f610557610be9565b9050610564818585610c95565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f5f5f73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161415801561065c57505f73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614155b61069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290611c0b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090611c73565b60405180910390fd5b5f8911158061071857505f8811155b610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611cdb565b60405180910390fd5b6107618989610f94565b80935081945050508683116107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290611d43565b60405180910390fd5b8582116107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e490611dab565b60405180910390fd5b828b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108279190611a27565b602060405180830381865afa158015610842573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108669190611ddd565b10156108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e90611e52565b60405180910390fd5b818a73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108e19190611a27565b602060405180830381865afa1580156108fc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109209190611ddd565b1015610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095890611eba565b60405180910390fd5b8260065f8282546109729190611f05565b925050819055508160075f82825461098a9190611f05565b925050819055508a73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016109ce93929190611f38565b6020604051808303815f875af11580156109ea573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0e9190611f97565b508973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a4c93929190611f38565b6020604051808303815f875af1158015610a68573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a8c9190611f97565b50610a978383611017565b90503073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ad4929190611fc2565b6020604051808303815f875af1158015610af0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b149190611f97565b50428411610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90612033565b60405180910390fd5b985098509895505050505050565b610b6d610d85565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bdd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bd49190611a27565b60405180910390fd5b610be681610e6d565b50565b5f33905090565b610bfd838383600161114a565b505050565b5f610c0d848461056f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610c8f5781811015610c80578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c7793929190612051565b60405180910390fd5b610c8e84848484035f61114a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d05575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cfc9190611a27565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d75575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d6c9190611a27565b60405180910390fd5b610d80838383611319565b505050565b610d8d610be9565b73ffffffffffffffffffffffffffffffffffffffff16610dab610494565b73ffffffffffffffffffffffffffffffffffffffff1614610e0a57610dce610be9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e019190611a27565b60405180910390fd5b565b610e14611329565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610e56610be9565b604051610e639190611a27565b60405180910390a1565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f3a611369565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f7d610be9565b604051610f8a9190611a27565b60405180910390a1565b5f5f5f600654148015610fa857505f600754145b15610fb857838391509150611010565b5f60065460075486610fca9190612086565b610fd491906120f4565b9050838111610fe95784819250925050611010565b5f60075460065486610ffb9190612086565b61100591906120f4565b905080859350935050505b9250929050565b5f5f3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611062573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110869190611ddd565b036110a65761109f828461109a9190612086565b6113aa565b9050611144565b3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110ef573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111139190611ddd565b6111376006548561112491906120f4565b6007548561113291906120f4565b611544565b6111419190612086565b90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111ba575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111b19190611a27565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361122a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112219190611a27565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611313578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161130a9190611950565b60405180910390a35b50505050565b61132483838361155a565b505050565b611331610415565b611367576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611371610415565b156113a8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f600182116113bb5781905061153f565b5f8290505f6001905070010000000000000000000000000000000082106113eb57608082901c9150604081901b90505b68010000000000000000821061140a57604082901c9150602081901b90505b640100000000821061142557602082901c9150601081901b90505b62010000821061143e57601082901c9150600881901b90505b610100821061145657600882901c9150600481901b90505b6010821061146d57600482901c9150600281901b90505b6004821061147d57600181901b90505b600181600302901c90506001818581611499576114986120c7565b5b048201901c905060018185816114b2576114b16120c7565b5b048201901c905060018185816114cb576114ca6120c7565b5b048201901c905060018185816114e4576114e36120c7565b5b048201901c905060018185816114fd576114fc6120c7565b5b048201901c90506001818581611516576115156120c7565b5b048201901c90506115388185816115305761152f6120c7565b5b048211611572565b8103925050505b919050565b5f611552828410848461157d565b905092915050565b611562611369565b61156d838383611596565b505050565b5f8115159050919050565b5f61158784611572565b82841802821890509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115e6578060025f8282546115da9190611f05565b925050819055506116b4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561166f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161166693929190612051565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116fb578060025f8282540392505081905550611745565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117a29190611950565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117f1826117af565b6117fb81856117b9565b935061180b8185602086016117c9565b611814816117d7565b840191505092915050565b5f6020820190508181035f83015261183781846117e7565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61186c82611843565b9050919050565b61187c81611862565b8114611886575f5ffd5b50565b5f8135905061189781611873565b92915050565b5f819050919050565b6118af8161189d565b81146118b9575f5ffd5b50565b5f813590506118ca816118a6565b92915050565b5f5f604083850312156118e6576118e561183f565b5b5f6118f385828601611889565b9250506020611904858286016118bc565b9150509250929050565b5f8115159050919050565b6119228161190e565b82525050565b5f60208201905061193b5f830184611919565b92915050565b61194a8161189d565b82525050565b5f6020820190506119635f830184611941565b92915050565b5f5f5f606084860312156119805761197f61183f565b5b5f61198d86828701611889565b935050602061199e86828701611889565b92505060406119af868287016118bc565b9150509250925092565b5f60ff82169050919050565b6119ce816119b9565b82525050565b5f6020820190506119e75f8301846119c5565b92915050565b5f60208284031215611a0257611a0161183f565b5b5f611a0f84828501611889565b91505092915050565b611a2181611862565b82525050565b5f602082019050611a3a5f830184611a18565b92915050565b5f5f60408385031215611a5657611a5561183f565b5b5f611a6385828601611889565b9250506020611a7485828601611889565b9150509250929050565b5f5f5f5f5f5f5f5f610100898b031215611a9b57611a9a61183f565b5b5f611aa88b828c01611889565b9850506020611ab98b828c01611889565b9750506040611aca8b828c016118bc565b9650506060611adb8b828c016118bc565b9550506080611aec8b828c016118bc565b94505060a0611afd8b828c016118bc565b93505060c0611b0e8b828c01611889565b92505060e0611b1f8b828c016118bc565b9150509295985092959890939650565b5f606082019050611b425f830186611941565b611b4f6020830185611941565b611b5c6040830184611941565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ba857607f821691505b602082108103611bbb57611bba611b64565b5b50919050565b7f496e76616c696420746f6b656e206164647265737365732100000000000000005f82015250565b5f611bf56018836117b9565b9150611c0082611bc1565b602082019050919050565b5f6020820190508181035f830152611c2281611be9565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f611c5d6019836117b9565b9150611c6882611c29565b602082019050919050565b5f6020820190508181035f830152611c8a81611c51565b9050919050565b7f496e76616c696420696e70757420706172616d657465727321000000000000005f82015250565b5f611cc56019836117b9565b9150611cd082611c91565b602082019050919050565b5f6020820190508181035f830152611cf281611cb9565b9050919050565b7f4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e41215f82015250565b5f611d2d6020836117b9565b9150611d3882611cf9565b602082019050919050565b5f6020820190508181035f830152611d5a81611d21565b9050919050565b7f4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e42215f82015250565b5f611d956020836117b9565b9150611da082611d61565b602082019050919050565b5f6020820190508181035f830152611dc281611d89565b9050919050565b5f81519050611dd7816118a6565b92915050565b5f60208284031215611df257611df161183f565b5b5f611dff84828501611dc9565b91505092915050565b7f496e73756666696369656e7420546f6b656e412066756e6473210000000000005f82015250565b5f611e3c601a836117b9565b9150611e4782611e08565b602082019050919050565b5f6020820190508181035f830152611e6981611e30565b9050919050565b7f496e73756666696369656e7420546f6b656e422066756e6473210000000000005f82015250565b5f611ea4601a836117b9565b9150611eaf82611e70565b602082019050919050565b5f6020820190508181035f830152611ed181611e98565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0f8261189d565b9150611f1a8361189d565b9250828201905080821115611f3257611f31611ed8565b5b92915050565b5f606082019050611f4b5f830186611a18565b611f586020830185611a18565b611f656040830184611941565b949350505050565b611f768161190e565b8114611f80575f5ffd5b50565b5f81519050611f9181611f6d565b92915050565b5f60208284031215611fac57611fab61183f565b5b5f611fb984828501611f83565b91505092915050565b5f604082019050611fd55f830185611a18565b611fe26020830184611941565b9392505050565b7f446561646c696e652072656163686564210000000000000000000000000000005f82015250565b5f61201d6011836117b9565b915061202882611fe9565b602082019050919050565b5f6020820190508181035f83015261204a81612011565b9050919050565b5f6060820190506120645f830186611a18565b6120716020830185611941565b61207e6040830184611941565b949350505050565b5f6120908261189d565b915061209b8361189d565b92508282026120a98161189d565b915082820484148315176120c0576120bf611ed8565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6120fe8261189d565b91506121098361189d565b925082612119576121186120c7565b5b82820490509291505056fea26469706673582212202e0ca18b788c89ee5df0d222059a4b25d8e1684c528d228ad27af9d15554cff764736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x272F CODESIZE SUB DUP1 PUSH2 0x272F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x269 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C6971756964697479546F6B656E000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4C544B0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x4D1 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x4D1 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x146 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x5C8 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x238 DUP3 PUSH2 0x20F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH2 0x22E JUMP JUMPDEST DUP2 EQ PUSH2 0x252 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x263 DUP2 PUSH2 0x23F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E JUMPI PUSH2 0x27D PUSH2 0x20B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28B DUP5 DUP3 DUP6 ADD PUSH2 0x255 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x30F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x322 JUMPI PUSH2 0x321 PUSH2 0x2CB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x384 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x349 JUMP JUMPDEST PUSH2 0x38E DUP7 DUP4 PUSH2 0x349 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3D2 PUSH2 0x3CD PUSH2 0x3C8 DUP5 PUSH2 0x3A6 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EB DUP4 PUSH2 0x3B8 JUMP JUMPDEST PUSH2 0x3FF PUSH2 0x3F7 DUP3 PUSH2 0x3D9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x355 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x416 PUSH2 0x407 JUMP JUMPDEST PUSH2 0x421 DUP2 DUP5 DUP5 PUSH2 0x3E2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x444 JUMPI PUSH2 0x439 PUSH0 DUP3 PUSH2 0x40E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x427 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x489 JUMPI PUSH2 0x45A DUP2 PUSH2 0x328 JUMP JUMPDEST PUSH2 0x463 DUP5 PUSH2 0x33A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x472 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x486 PUSH2 0x47E DUP6 PUSH2 0x33A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x426 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4A9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x48E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4C1 DUP4 DUP4 PUSH2 0x49A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4DA DUP3 PUSH2 0x294 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4F3 JUMPI PUSH2 0x4F2 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH2 0x4FD DUP3 SLOAD PUSH2 0x2F8 JUMP JUMPDEST PUSH2 0x508 DUP3 DUP3 DUP6 PUSH2 0x448 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x539 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x527 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x531 DUP6 DUP3 PUSH2 0x4B6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x598 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x547 DUP7 PUSH2 0x328 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x56E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x549 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x58B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x587 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x49A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5A9 DUP2 PUSH2 0x22E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5C2 PUSH0 DUP4 ADD DUP5 PUSH2 0x5A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x215A DUP1 PUSH2 0x5D5 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x246 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x403 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH2 0x482 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x398 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x398 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3AC PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B9 DUP2 DUP6 DUP6 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D7 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E4 DUP6 DUP3 DUP6 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x3EF DUP6 DUP6 DUP6 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x40B PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x413 PUSH2 0xE0C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x477 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x480 PUSH0 PUSH2 0xE6D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x48A PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x492 PUSH2 0xF32 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CC SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F8 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x543 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x543 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x526 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x557 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x564 DUP2 DUP6 DUP6 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x692 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP10 GT ISZERO DUP1 PUSH2 0x718 JUMPI POP PUSH0 DUP9 GT ISZERO JUMPDEST PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x761 DUP10 DUP10 PUSH2 0xF94 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP7 DUP4 GT PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP3 GT PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST LT ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x958 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST POP PUSH2 0xA97 DUP4 DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB14 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST POP TIMESTAMP DUP5 GT PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xD85 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0xE6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x114A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC0D DUP5 DUP5 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xC8F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC80 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x114A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD80 DUP4 DUP4 DUP4 PUSH2 0x1319 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD8D PUSH2 0xBE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDAB PUSH2 0x494 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE0A JUMPI PUSH2 0xDCE PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1329 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xE56 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF3A PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF7D PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x6 SLOAD EQ DUP1 ISZERO PUSH2 0xFA8 JUMPI POP PUSH0 PUSH1 0x7 SLOAD EQ JUMPDEST ISZERO PUSH2 0xFB8 JUMPI DUP4 DUP4 SWAP2 POP SWAP2 POP PUSH2 0x1010 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP7 PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xFD4 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT PUSH2 0xFE9 JUMPI DUP5 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x1010 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SUB PUSH2 0x10A6 JUMPI PUSH2 0x109F DUP3 DUP5 PUSH2 0x109A SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP PUSH2 0x1144 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH2 0x1137 PUSH1 0x6 SLOAD DUP6 PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP6 PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x1141 SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1221 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1313 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1324 DUP4 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1367 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1371 PUSH2 0x415 JUMP JUMPDEST ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 GT PUSH2 0x13BB JUMPI DUP2 SWAP1 POP PUSH2 0x153F JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x13EB JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x140A JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1425 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x143E JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x1456 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x146D JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x147D JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14E4 JUMPI PUSH2 0x14E3 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14FD JUMPI PUSH2 0x14FC PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1538 DUP2 DUP6 DUP2 PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x1572 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1552 DUP3 DUP5 LT DUP5 DUP5 PUSH2 0x157D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1562 PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x156D DUP4 DUP4 DUP4 PUSH2 0x1596 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1587 DUP5 PUSH2 0x1572 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16B4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x166F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1745 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17A2 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F1 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x17FB DUP2 DUP6 PUSH2 0x17B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x180B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x1814 DUP2 PUSH2 0x17D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1837 DUP2 DUP5 PUSH2 0x17E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x186C DUP3 PUSH2 0x1843 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP2 EQ PUSH2 0x1886 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1897 DUP2 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AF DUP2 PUSH2 0x189D JUMP JUMPDEST DUP2 EQ PUSH2 0x18B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18CA DUP2 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E5 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1904 DUP6 DUP3 DUP7 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1922 DUP2 PUSH2 0x190E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193B PUSH0 DUP4 ADD DUP5 PUSH2 0x1919 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0x189D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1963 PUSH0 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198D DUP7 DUP3 DUP8 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x199E DUP7 DUP3 DUP8 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19AF DUP7 DUP3 DUP8 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CE DUP2 PUSH2 0x19B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A02 JUMPI PUSH2 0x1A01 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A0F DUP5 DUP3 DUP6 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A21 DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A3A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH2 0x1A55 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A63 DUP6 DUP3 DUP7 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A74 DUP6 DUP3 DUP7 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1A9B JUMPI PUSH2 0x1A9A PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA8 DUP12 DUP3 DUP13 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1AB9 DUP12 DUP3 DUP13 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1ACA DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1ADB DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1AEC DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1AFD DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1B0E DUP12 DUP3 DUP13 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1B1F DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B42 PUSH0 DUP4 ADD DUP7 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x1B5C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BA8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BBB JUMPI PUSH2 0x1BBA PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573736573210000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF5 PUSH1 0x18 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C00 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C22 DUP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5D PUSH1 0x19 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C68 DUP3 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8A DUP2 PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757420706172616D65746572732100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC5 PUSH1 0x19 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD0 DUP3 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CF2 DUP2 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206D65657420746865206D696E696D756D20666F7220546F6B656E4121 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH1 0x20 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5A DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206D65657420746865206D696E696D756D20666F7220546F6B656E4221 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D95 PUSH1 0x20 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA0 DUP3 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DC2 DUP2 PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DD7 DUP2 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF2 JUMPI PUSH2 0x1DF1 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DFF DUP5 DUP3 DUP6 ADD PUSH2 0x1DC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E412066756E647321000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3C PUSH1 0x1A DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E47 DUP3 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E69 DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E422066756E647321000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA4 PUSH1 0x1A DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED1 DUP2 PUSH2 0x1E98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1A DUP4 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F4B PUSH0 DUP4 ADD DUP7 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1F58 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1F65 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F76 DUP2 PUSH2 0x190E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F80 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1F83 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FD5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1FE2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446561646C696E65207265616368656421000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x201D PUSH1 0x11 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2028 DUP3 PUSH2 0x1FE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x204A DUP2 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2064 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x2071 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x207E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2090 DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x209B DUP4 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20A9 DUP2 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20C0 JUMPI PUSH2 0x20BF PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20FE DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x2109 DUP4 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2119 JUMPI PUSH2 0x2118 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xC LOG1 DUP12 PUSH25 0x8C89EE5DF0D222059A4B25D8E1684C528D228AD27AF9D15554 0xCF 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "396:3205:11:-:0;;;455:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;544:12;1582:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:5;1648;:13;;;;;;:::i;:::-;;1681:7;1671;:17;;;;;;:::i;:::-;;1582:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;455:109:11;396:3205;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3482:1;3475:8;;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;396:3205:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3056,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4426,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3461,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_949": {
									"entryPoint": 3049,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1110": {
									"entryPoint": 3890,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1081": {
									"entryPoint": 4969,
									"id": 1081,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1094": {
									"entryPoint": 4905,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_798": {
									"entryPoint": 3074,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3693,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3221,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_1126": {
									"entryPoint": 3596,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_4584": {
									"entryPoint": 4889,
									"id": 4584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5526,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_910": {
									"entryPoint": 5466,
									"id": 910,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_4781": {
									"entryPoint": 1521,
									"id": 4781,
									"parameterSlots": 8,
									"returnSlots": 3
								},
								"@allowance_426": {
									"entryPoint": 1391,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 930,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1066,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateLiquidityAmounts_4838": {
									"entryPoint": 3988,
									"id": 4838,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@calculateLiquidityToken_4880": {
									"entryPoint": 4119,
									"id": 4880,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1019,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@min_1454": {
									"entryPoint": 5444,
									"id": 1454,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 786,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1172,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_4554": {
									"entryPoint": 1154,
									"id": 4554,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1069": {
									"entryPoint": 1045,
									"id": 1069,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1135,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_2292": {
									"entryPoint": 5034,
									"id": 2292,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 1213,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ternary_1416": {
									"entryPoint": 5501,
									"id": 1416,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@toUint_4512": {
									"entryPoint": 5490,
									"id": 4512,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 964,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 973,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2917,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1357,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_4563": {
									"entryPoint": 1027,
									"id": 4563,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7491,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6959,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6089,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e": {
									"entryPoint": 7792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789": {
									"entryPoint": 7688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2": {
									"entryPoint": 7105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df": {
									"entryPoint": 7209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0": {
									"entryPoint": 8169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19588:12",
										"nodeType": "YulBlock",
										"src": "0:19588:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:12",
													"nodeType": "YulBlock",
													"src": "66:40:12",
													"statements": [
														{
															"nativeSrc": "77:22:12",
															"nodeType": "YulAssignment",
															"src": "77:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:12"
																},
																"nativeSrc": "87:12:12",
																"nodeType": "YulFunctionCall",
																"src": "87:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:12",
														"nodeType": "YulTypedName",
														"src": "49:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:12",
														"nodeType": "YulTypedName",
														"src": "59:6:12",
														"type": ""
													}
												],
												"src": "7:99:12"
											},
											{
												"body": {
													"nativeSrc": "208:73:12",
													"nodeType": "YulBlock",
													"src": "208:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:12"
																},
																"nativeSrc": "218:19:12",
																"nodeType": "YulFunctionCall",
																"src": "218:19:12"
															},
															"nativeSrc": "218:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:12"
														},
														{
															"nativeSrc": "246:29:12",
															"nodeType": "YulAssignment",
															"src": "246:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:12",
																		"nodeType": "YulLiteral",
																		"src": "270:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:12"
																},
																"nativeSrc": "261:14:12",
																"nodeType": "YulFunctionCall",
																"src": "261:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:12",
														"nodeType": "YulTypedName",
														"src": "180:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:12",
														"nodeType": "YulTypedName",
														"src": "185:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:12",
														"nodeType": "YulTypedName",
														"src": "196:11:12",
														"type": ""
													}
												],
												"src": "112:169:12"
											},
											{
												"body": {
													"nativeSrc": "349:77:12",
													"nodeType": "YulBlock",
													"src": "349:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:12"
																},
																"nativeSrc": "360:23:12",
																"nodeType": "YulFunctionCall",
																"src": "360:23:12"
															},
															"nativeSrc": "360:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:12"
																		},
																		"nativeSrc": "399:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:12",
																		"nodeType": "YulLiteral",
																		"src": "417:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:12"
																},
																"nativeSrc": "392:27:12",
																"nodeType": "YulFunctionCall",
																"src": "392:27:12"
															},
															"nativeSrc": "392:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:12",
														"nodeType": "YulTypedName",
														"src": "331:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:12",
														"nodeType": "YulTypedName",
														"src": "336:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:12",
														"nodeType": "YulTypedName",
														"src": "341:6:12",
														"type": ""
													}
												],
												"src": "287:139:12"
											},
											{
												"body": {
													"nativeSrc": "480:54:12",
													"nodeType": "YulBlock",
													"src": "480:54:12",
													"statements": [
														{
															"nativeSrc": "490:38:12",
															"nodeType": "YulAssignment",
															"src": "490:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:12",
																				"nodeType": "YulLiteral",
																				"src": "515:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:12"
																		},
																		"nativeSrc": "504:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:12",
																				"nodeType": "YulLiteral",
																				"src": "524:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:12"
																		},
																		"nativeSrc": "520:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:12"
																},
																"nativeSrc": "500:28:12",
																"nodeType": "YulFunctionCall",
																"src": "500:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:12",
														"nodeType": "YulTypedName",
														"src": "463:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:12",
														"nodeType": "YulTypedName",
														"src": "473:6:12",
														"type": ""
													}
												],
												"src": "432:102:12"
											},
											{
												"body": {
													"nativeSrc": "632:285:12",
													"nodeType": "YulBlock",
													"src": "632:285:12",
													"statements": [
														{
															"nativeSrc": "642:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:12"
																},
																"nativeSrc": "656:39:12",
																"nodeType": "YulFunctionCall",
																"src": "656:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:12",
																	"nodeType": "YulTypedName",
																	"src": "646:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:12",
															"nodeType": "YulAssignment",
															"src": "704:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:12"
																},
																"nativeSrc": "711:71:12",
																"nodeType": "YulFunctionCall",
																"src": "711:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:12",
																				"nodeType": "YulLiteral",
																				"src": "837:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:12"
																		},
																		"nativeSrc": "826:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:12"
																},
																"nativeSrc": "791:65:12",
																"nodeType": "YulFunctionCall",
																"src": "791:65:12"
															},
															"nativeSrc": "791:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:12"
														},
														{
															"nativeSrc": "865:46:12",
															"nodeType": "YulAssignment",
															"src": "865:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:12"
																		},
																		"nativeSrc": "881:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:12"
																},
																"nativeSrc": "872:39:12",
																"nodeType": "YulFunctionCall",
																"src": "872:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:12",
														"nodeType": "YulTypedName",
														"src": "613:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:12",
														"nodeType": "YulTypedName",
														"src": "620:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:12",
														"nodeType": "YulTypedName",
														"src": "628:3:12",
														"type": ""
													}
												],
												"src": "540:377:12"
											},
											{
												"body": {
													"nativeSrc": "1041:195:12",
													"nodeType": "YulBlock",
													"src": "1041:195:12",
													"statements": [
														{
															"nativeSrc": "1051:26:12",
															"nodeType": "YulAssignment",
															"src": "1051:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:12"
																},
																"nativeSrc": "1059:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:12"
																		},
																		"nativeSrc": "1094:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:12"
																		},
																		"nativeSrc": "1113:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:12"
																},
																"nativeSrc": "1087:47:12",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:12"
															},
															"nativeSrc": "1087:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:12"
														},
														{
															"nativeSrc": "1143:86:12",
															"nodeType": "YulAssignment",
															"src": "1143:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:12"
																},
																"nativeSrc": "1151:78:12",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:12",
														"nodeType": "YulTypedName",
														"src": "1013:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:12",
														"nodeType": "YulTypedName",
														"src": "1025:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:12",
														"nodeType": "YulTypedName",
														"src": "1036:4:12",
														"type": ""
													}
												],
												"src": "923:313:12"
											},
											{
												"body": {
													"nativeSrc": "1282:35:12",
													"nodeType": "YulBlock",
													"src": "1282:35:12",
													"statements": [
														{
															"nativeSrc": "1292:19:12",
															"nodeType": "YulAssignment",
															"src": "1292:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:12"
																},
																"nativeSrc": "1302:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:12",
														"nodeType": "YulTypedName",
														"src": "1275:6:12",
														"type": ""
													}
												],
												"src": "1242:75:12"
											},
											{
												"body": {
													"nativeSrc": "1412:28:12",
													"nodeType": "YulBlock",
													"src": "1412:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:12"
																},
																"nativeSrc": "1422:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:12"
															},
															"nativeSrc": "1422:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:12"
											},
											{
												"body": {
													"nativeSrc": "1535:28:12",
													"nodeType": "YulBlock",
													"src": "1535:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:12"
																},
																"nativeSrc": "1545:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:12"
															},
															"nativeSrc": "1545:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:12"
											},
											{
												"body": {
													"nativeSrc": "1614:81:12",
													"nodeType": "YulBlock",
													"src": "1614:81:12",
													"statements": [
														{
															"nativeSrc": "1624:65:12",
															"nodeType": "YulAssignment",
															"src": "1624:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:12"
																},
																"nativeSrc": "1635:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:12",
														"nodeType": "YulTypedName",
														"src": "1596:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:12",
														"nodeType": "YulTypedName",
														"src": "1606:7:12",
														"type": ""
													}
												],
												"src": "1569:126:12"
											},
											{
												"body": {
													"nativeSrc": "1746:51:12",
													"nodeType": "YulBlock",
													"src": "1746:51:12",
													"statements": [
														{
															"nativeSrc": "1756:35:12",
															"nodeType": "YulAssignment",
															"src": "1756:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:12"
																},
																"nativeSrc": "1767:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:12",
														"nodeType": "YulTypedName",
														"src": "1728:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:12",
														"nodeType": "YulTypedName",
														"src": "1738:7:12",
														"type": ""
													}
												],
												"src": "1701:96:12"
											},
											{
												"body": {
													"nativeSrc": "1846:79:12",
													"nodeType": "YulBlock",
													"src": "1846:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:12",
																"nodeType": "YulBlock",
																"src": "1903:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:12"
																			},
																			"nativeSrc": "1905:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:12"
																		},
																		"nativeSrc": "1905:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:12"
																				},
																				"nativeSrc": "1876:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:12"
																		},
																		"nativeSrc": "1866:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:12"
																},
																"nativeSrc": "1859:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:12"
															},
															"nativeSrc": "1856:63:12",
															"nodeType": "YulIf",
															"src": "1856:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:12",
														"nodeType": "YulTypedName",
														"src": "1839:5:12",
														"type": ""
													}
												],
												"src": "1803:122:12"
											},
											{
												"body": {
													"nativeSrc": "1983:87:12",
													"nodeType": "YulBlock",
													"src": "1983:87:12",
													"statements": [
														{
															"nativeSrc": "1993:29:12",
															"nodeType": "YulAssignment",
															"src": "1993:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:12"
																},
																"nativeSrc": "2002:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:12"
																},
																"nativeSrc": "2031:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:12"
															},
															"nativeSrc": "2031:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:12",
														"nodeType": "YulTypedName",
														"src": "1961:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:12",
														"nodeType": "YulTypedName",
														"src": "1969:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:12",
														"nodeType": "YulTypedName",
														"src": "1977:5:12",
														"type": ""
													}
												],
												"src": "1931:139:12"
											},
											{
												"body": {
													"nativeSrc": "2121:32:12",
													"nodeType": "YulBlock",
													"src": "2121:32:12",
													"statements": [
														{
															"nativeSrc": "2131:16:12",
															"nodeType": "YulAssignment",
															"src": "2131:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:12",
																"nodeType": "YulIdentifier",
																"src": "2142:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:12",
														"nodeType": "YulTypedName",
														"src": "2103:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:12",
														"nodeType": "YulTypedName",
														"src": "2113:7:12",
														"type": ""
													}
												],
												"src": "2076:77:12"
											},
											{
												"body": {
													"nativeSrc": "2202:79:12",
													"nodeType": "YulBlock",
													"src": "2202:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:12",
																"nodeType": "YulBlock",
																"src": "2259:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:12"
																			},
																			"nativeSrc": "2261:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:12"
																		},
																		"nativeSrc": "2261:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:12"
																				},
																				"nativeSrc": "2232:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:12"
																		},
																		"nativeSrc": "2222:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:12"
																},
																"nativeSrc": "2215:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:12"
															},
															"nativeSrc": "2212:63:12",
															"nodeType": "YulIf",
															"src": "2212:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:12",
														"nodeType": "YulTypedName",
														"src": "2195:5:12",
														"type": ""
													}
												],
												"src": "2159:122:12"
											},
											{
												"body": {
													"nativeSrc": "2339:87:12",
													"nodeType": "YulBlock",
													"src": "2339:87:12",
													"statements": [
														{
															"nativeSrc": "2349:29:12",
															"nodeType": "YulAssignment",
															"src": "2349:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:12"
																},
																"nativeSrc": "2358:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:12"
																},
																"nativeSrc": "2387:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:12"
															},
															"nativeSrc": "2387:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:12",
														"nodeType": "YulTypedName",
														"src": "2317:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:12",
														"nodeType": "YulTypedName",
														"src": "2325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:12",
														"nodeType": "YulTypedName",
														"src": "2333:5:12",
														"type": ""
													}
												],
												"src": "2287:139:12"
											},
											{
												"body": {
													"nativeSrc": "2515:391:12",
													"nodeType": "YulBlock",
													"src": "2515:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:12",
																"nodeType": "YulBlock",
																"src": "2561:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:12"
																			},
																			"nativeSrc": "2563:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:12"
																		},
																		"nativeSrc": "2563:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:12"
																		},
																		"nativeSrc": "2532:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:12"
																},
																"nativeSrc": "2528:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:12"
															},
															"nativeSrc": "2525:119:12",
															"nodeType": "YulIf",
															"src": "2525:119:12"
														},
														{
															"nativeSrc": "2654:117:12",
															"nodeType": "YulBlock",
															"src": "2654:117:12",
															"statements": [
																{
																	"nativeSrc": "2669:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:12"
																				},
																				"nativeSrc": "2729:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:12"
																		},
																		"nativeSrc": "2708:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:12",
															"nodeType": "YulBlock",
															"src": "2781:118:12",
															"statements": [
																{
																	"nativeSrc": "2796:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:12"
																				},
																				"nativeSrc": "2857:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:12"
																		},
																		"nativeSrc": "2836:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:12",
														"nodeType": "YulTypedName",
														"src": "2477:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:12",
														"nodeType": "YulTypedName",
														"src": "2488:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:12",
														"nodeType": "YulTypedName",
														"src": "2500:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:12",
														"nodeType": "YulTypedName",
														"src": "2508:6:12",
														"type": ""
													}
												],
												"src": "2432:474:12"
											},
											{
												"body": {
													"nativeSrc": "2954:48:12",
													"nodeType": "YulBlock",
													"src": "2954:48:12",
													"statements": [
														{
															"nativeSrc": "2964:32:12",
															"nodeType": "YulAssignment",
															"src": "2964:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:12"
																		},
																		"nativeSrc": "2982:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:12"
																},
																"nativeSrc": "2975:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:12",
														"nodeType": "YulTypedName",
														"src": "2936:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:12",
														"nodeType": "YulTypedName",
														"src": "2946:7:12",
														"type": ""
													}
												],
												"src": "2912:90:12"
											},
											{
												"body": {
													"nativeSrc": "3067:50:12",
													"nodeType": "YulBlock",
													"src": "3067:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:12"
																		},
																		"nativeSrc": "3089:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:12"
																},
																"nativeSrc": "3077:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:12"
															},
															"nativeSrc": "3077:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:12",
														"nodeType": "YulTypedName",
														"src": "3055:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:12",
														"nodeType": "YulTypedName",
														"src": "3062:3:12",
														"type": ""
													}
												],
												"src": "3008:109:12"
											},
											{
												"body": {
													"nativeSrc": "3215:118:12",
													"nodeType": "YulBlock",
													"src": "3215:118:12",
													"statements": [
														{
															"nativeSrc": "3225:26:12",
															"nodeType": "YulAssignment",
															"src": "3225:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:12"
																},
																"nativeSrc": "3233:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:12"
																		},
																		"nativeSrc": "3308:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:12"
																},
																"nativeSrc": "3261:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:12"
															},
															"nativeSrc": "3261:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:12",
														"nodeType": "YulTypedName",
														"src": "3187:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:12",
														"nodeType": "YulTypedName",
														"src": "3199:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:12",
														"nodeType": "YulTypedName",
														"src": "3210:4:12",
														"type": ""
													}
												],
												"src": "3123:210:12"
											},
											{
												"body": {
													"nativeSrc": "3404:53:12",
													"nodeType": "YulBlock",
													"src": "3404:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:12"
																		},
																		"nativeSrc": "3426:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:12"
																},
																"nativeSrc": "3414:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:12"
															},
															"nativeSrc": "3414:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:12",
														"nodeType": "YulTypedName",
														"src": "3392:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:12",
														"nodeType": "YulTypedName",
														"src": "3399:3:12",
														"type": ""
													}
												],
												"src": "3339:118:12"
											},
											{
												"body": {
													"nativeSrc": "3561:124:12",
													"nodeType": "YulBlock",
													"src": "3561:124:12",
													"statements": [
														{
															"nativeSrc": "3571:26:12",
															"nodeType": "YulAssignment",
															"src": "3571:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:12"
																},
																"nativeSrc": "3579:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:12"
																		},
																		"nativeSrc": "3660:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:12"
																},
																"nativeSrc": "3607:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:12"
															},
															"nativeSrc": "3607:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:12",
														"nodeType": "YulTypedName",
														"src": "3533:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:12",
														"nodeType": "YulTypedName",
														"src": "3545:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:12",
														"nodeType": "YulTypedName",
														"src": "3556:4:12",
														"type": ""
													}
												],
												"src": "3463:222:12"
											},
											{
												"body": {
													"nativeSrc": "3791:519:12",
													"nodeType": "YulBlock",
													"src": "3791:519:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:12",
																"nodeType": "YulBlock",
																"src": "3837:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:12"
																			},
																			"nativeSrc": "3839:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:12"
																		},
																		"nativeSrc": "3839:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:12"
																		},
																		"nativeSrc": "3808:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:12"
																},
																"nativeSrc": "3804:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:12"
															},
															"nativeSrc": "3801:119:12",
															"nodeType": "YulIf",
															"src": "3801:119:12"
														},
														{
															"nativeSrc": "3930:117:12",
															"nodeType": "YulBlock",
															"src": "3930:117:12",
															"statements": [
																{
																	"nativeSrc": "3945:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:12"
																				},
																				"nativeSrc": "4005:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:12"
																		},
																		"nativeSrc": "3984:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:12",
															"nodeType": "YulBlock",
															"src": "4057:118:12",
															"statements": [
																{
																	"nativeSrc": "4072:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:12"
																				},
																				"nativeSrc": "4133:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:12"
																		},
																		"nativeSrc": "4112:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:12",
															"nodeType": "YulBlock",
															"src": "4185:118:12",
															"statements": [
																{
																	"nativeSrc": "4200:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:12"
																				},
																				"nativeSrc": "4261:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:12"
																		},
																		"nativeSrc": "4240:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:12",
														"nodeType": "YulTypedName",
														"src": "3745:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:12",
														"nodeType": "YulTypedName",
														"src": "3756:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:12",
														"nodeType": "YulTypedName",
														"src": "3768:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:12",
														"nodeType": "YulTypedName",
														"src": "3776:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:12",
														"nodeType": "YulTypedName",
														"src": "3784:6:12",
														"type": ""
													}
												],
												"src": "3691:619:12"
											},
											{
												"body": {
													"nativeSrc": "4359:43:12",
													"nodeType": "YulBlock",
													"src": "4359:43:12",
													"statements": [
														{
															"nativeSrc": "4369:27:12",
															"nodeType": "YulAssignment",
															"src": "4369:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:12"
																},
																"nativeSrc": "4380:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:12",
														"nodeType": "YulTypedName",
														"src": "4341:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:12",
														"nodeType": "YulTypedName",
														"src": "4351:7:12",
														"type": ""
													}
												],
												"src": "4316:86:12"
											},
											{
												"body": {
													"nativeSrc": "4469:51:12",
													"nodeType": "YulBlock",
													"src": "4469:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:12"
																		},
																		"nativeSrc": "4491:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:12"
																},
																"nativeSrc": "4479:35:12",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:12"
															},
															"nativeSrc": "4479:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:12",
														"nodeType": "YulTypedName",
														"src": "4457:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:12",
														"nodeType": "YulTypedName",
														"src": "4464:3:12",
														"type": ""
													}
												],
												"src": "4408:112:12"
											},
											{
												"body": {
													"nativeSrc": "4620:120:12",
													"nodeType": "YulBlock",
													"src": "4620:120:12",
													"statements": [
														{
															"nativeSrc": "4630:26:12",
															"nodeType": "YulAssignment",
															"src": "4630:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:12"
																},
																"nativeSrc": "4638:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:12"
																		},
																		"nativeSrc": "4715:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:12"
																},
																"nativeSrc": "4666:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:12"
															},
															"nativeSrc": "4666:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:12",
														"nodeType": "YulTypedName",
														"src": "4592:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:12",
														"nodeType": "YulTypedName",
														"src": "4604:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:12",
														"nodeType": "YulTypedName",
														"src": "4615:4:12",
														"type": ""
													}
												],
												"src": "4526:214:12"
											},
											{
												"body": {
													"nativeSrc": "4812:263:12",
													"nodeType": "YulBlock",
													"src": "4812:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:12",
																"nodeType": "YulBlock",
																"src": "4858:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:12"
																			},
																			"nativeSrc": "4860:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:12"
																		},
																		"nativeSrc": "4860:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:12"
																		},
																		"nativeSrc": "4829:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:12"
																},
																"nativeSrc": "4825:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:12"
															},
															"nativeSrc": "4822:119:12",
															"nodeType": "YulIf",
															"src": "4822:119:12"
														},
														{
															"nativeSrc": "4951:117:12",
															"nodeType": "YulBlock",
															"src": "4951:117:12",
															"statements": [
																{
																	"nativeSrc": "4966:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:12"
																				},
																				"nativeSrc": "5026:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:12"
																		},
																		"nativeSrc": "5005:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:12",
														"nodeType": "YulTypedName",
														"src": "4782:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:12",
														"nodeType": "YulTypedName",
														"src": "4793:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:12",
														"nodeType": "YulTypedName",
														"src": "4805:6:12",
														"type": ""
													}
												],
												"src": "4746:329:12"
											},
											{
												"body": {
													"nativeSrc": "5146:53:12",
													"nodeType": "YulBlock",
													"src": "5146:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:12"
																		},
																		"nativeSrc": "5168:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:12"
																},
																"nativeSrc": "5156:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:12"
															},
															"nativeSrc": "5156:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:12",
														"nodeType": "YulTypedName",
														"src": "5134:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:12",
														"nodeType": "YulTypedName",
														"src": "5141:3:12",
														"type": ""
													}
												],
												"src": "5081:118:12"
											},
											{
												"body": {
													"nativeSrc": "5303:124:12",
													"nodeType": "YulBlock",
													"src": "5303:124:12",
													"statements": [
														{
															"nativeSrc": "5313:26:12",
															"nodeType": "YulAssignment",
															"src": "5313:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:12"
																},
																"nativeSrc": "5321:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:12"
																		},
																		"nativeSrc": "5402:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:12"
																},
																"nativeSrc": "5349:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:12"
															},
															"nativeSrc": "5349:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:12",
														"nodeType": "YulTypedName",
														"src": "5275:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:12",
														"nodeType": "YulTypedName",
														"src": "5287:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:12",
														"nodeType": "YulTypedName",
														"src": "5298:4:12",
														"type": ""
													}
												],
												"src": "5205:222:12"
											},
											{
												"body": {
													"nativeSrc": "5516:391:12",
													"nodeType": "YulBlock",
													"src": "5516:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:12",
																"nodeType": "YulBlock",
																"src": "5562:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:12"
																			},
																			"nativeSrc": "5564:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:12"
																		},
																		"nativeSrc": "5564:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:12"
																		},
																		"nativeSrc": "5533:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:12"
																},
																"nativeSrc": "5529:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:12"
															},
															"nativeSrc": "5526:119:12",
															"nodeType": "YulIf",
															"src": "5526:119:12"
														},
														{
															"nativeSrc": "5655:117:12",
															"nodeType": "YulBlock",
															"src": "5655:117:12",
															"statements": [
																{
																	"nativeSrc": "5670:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:12"
																				},
																				"nativeSrc": "5730:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:12"
																		},
																		"nativeSrc": "5709:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:12",
															"nodeType": "YulBlock",
															"src": "5782:118:12",
															"statements": [
																{
																	"nativeSrc": "5797:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:12"
																				},
																				"nativeSrc": "5858:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:12"
																		},
																		"nativeSrc": "5837:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:12",
														"nodeType": "YulTypedName",
														"src": "5478:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:12",
														"nodeType": "YulTypedName",
														"src": "5489:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:12",
														"nodeType": "YulTypedName",
														"src": "5501:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:12",
														"nodeType": "YulTypedName",
														"src": "5509:6:12",
														"type": ""
													}
												],
												"src": "5433:474:12"
											},
											{
												"body": {
													"nativeSrc": "6098:1164:12",
													"nodeType": "YulBlock",
													"src": "6098:1164:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6145:83:12",
																"nodeType": "YulBlock",
																"src": "6145:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6147:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6147:77:12"
																			},
																			"nativeSrc": "6147:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6147:79:12"
																		},
																		"nativeSrc": "6147:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6147:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6119:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6119:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6128:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6128:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6115:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6115:3:12"
																		},
																		"nativeSrc": "6115:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6140:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6140:3:12",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6111:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:12"
																},
																"nativeSrc": "6111:33:12",
																"nodeType": "YulFunctionCall",
																"src": "6111:33:12"
															},
															"nativeSrc": "6108:120:12",
															"nodeType": "YulIf",
															"src": "6108:120:12"
														},
														{
															"nativeSrc": "6238:117:12",
															"nodeType": "YulBlock",
															"src": "6238:117:12",
															"statements": [
																{
																	"nativeSrc": "6253:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6253:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6267:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6267:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6257:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6257:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6282:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6282:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6317:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6317:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6328:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6328:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6313:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6313:3:12"
																				},
																				"nativeSrc": "6313:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6313:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6337:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6337:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6292:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6292:20:12"
																		},
																		"nativeSrc": "6292:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6292:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6282:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6282:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6365:118:12",
															"nodeType": "YulBlock",
															"src": "6365:118:12",
															"statements": [
																{
																	"nativeSrc": "6380:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6380:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6394:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6394:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6384:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6384:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6410:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6410:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6445:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6445:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6456:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6456:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6441:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6441:3:12"
																				},
																				"nativeSrc": "6441:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6441:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6465:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6465:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6420:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6420:20:12"
																		},
																		"nativeSrc": "6420:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6410:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6410:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6493:118:12",
															"nodeType": "YulBlock",
															"src": "6493:118:12",
															"statements": [
																{
																	"nativeSrc": "6508:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6508:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6522:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6522:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6512:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6512:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6538:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6538:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6573:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6573:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6584:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6584:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6569:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6569:3:12"
																				},
																				"nativeSrc": "6569:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6569:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6593:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6548:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6548:20:12"
																		},
																		"nativeSrc": "6548:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6548:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6538:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6538:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6621:118:12",
															"nodeType": "YulBlock",
															"src": "6621:118:12",
															"statements": [
																{
																	"nativeSrc": "6636:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6636:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6650:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6650:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6640:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6640:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6666:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6666:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6701:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6701:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6712:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6712:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6697:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6697:3:12"
																				},
																				"nativeSrc": "6697:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6697:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6721:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6721:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6676:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6676:20:12"
																		},
																		"nativeSrc": "6676:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6676:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "6666:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6666:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6749:119:12",
															"nodeType": "YulBlock",
															"src": "6749:119:12",
															"statements": [
																{
																	"nativeSrc": "6764:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6764:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6778:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6778:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6768:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6768:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6795:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6795:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6830:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6830:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6841:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6841:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6826:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6826:3:12"
																				},
																				"nativeSrc": "6826:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6826:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6850:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6850:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6805:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6805:20:12"
																		},
																		"nativeSrc": "6805:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6805:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "6795:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6795:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6878:119:12",
															"nodeType": "YulBlock",
															"src": "6878:119:12",
															"statements": [
																{
																	"nativeSrc": "6893:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6893:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6907:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6907:3:12",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6897:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6897:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6924:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6924:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6959:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6959:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6970:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6970:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6955:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6955:3:12"
																				},
																				"nativeSrc": "6955:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6955:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6979:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6979:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6934:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6934:20:12"
																		},
																		"nativeSrc": "6934:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6934:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "6924:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6924:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7007:119:12",
															"nodeType": "YulBlock",
															"src": "7007:119:12",
															"statements": [
																{
																	"nativeSrc": "7022:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7022:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7036:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7036:3:12",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7026:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7026:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7053:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7053:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7088:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7088:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7099:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7099:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7084:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7084:3:12"
																				},
																				"nativeSrc": "7084:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7084:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7108:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7108:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7063:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7063:20:12"
																		},
																		"nativeSrc": "7063:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7063:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "7053:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7053:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7136:119:12",
															"nodeType": "YulBlock",
															"src": "7136:119:12",
															"statements": [
																{
																	"nativeSrc": "7151:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7151:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7165:3:12",
																		"nodeType": "YulLiteral",
																		"src": "7165:3:12",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7155:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7155:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7182:63:12",
																	"nodeType": "YulAssignment",
																	"src": "7182:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7217:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7217:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7228:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7228:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7213:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7213:3:12"
																				},
																				"nativeSrc": "7213:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7213:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7237:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7237:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7192:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "7192:20:12"
																		},
																		"nativeSrc": "7192:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7192:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "7182:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7182:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "5913:1349:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6012:9:12",
														"nodeType": "YulTypedName",
														"src": "6012:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6023:7:12",
														"nodeType": "YulTypedName",
														"src": "6023:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6035:6:12",
														"nodeType": "YulTypedName",
														"src": "6035:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6043:6:12",
														"nodeType": "YulTypedName",
														"src": "6043:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6051:6:12",
														"nodeType": "YulTypedName",
														"src": "6051:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6059:6:12",
														"nodeType": "YulTypedName",
														"src": "6059:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6067:6:12",
														"nodeType": "YulTypedName",
														"src": "6067:6:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "6075:6:12",
														"nodeType": "YulTypedName",
														"src": "6075:6:12",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "6083:6:12",
														"nodeType": "YulTypedName",
														"src": "6083:6:12",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "6091:6:12",
														"nodeType": "YulTypedName",
														"src": "6091:6:12",
														"type": ""
													}
												],
												"src": "5913:1349:12"
											},
											{
												"body": {
													"nativeSrc": "7422:288:12",
													"nodeType": "YulBlock",
													"src": "7422:288:12",
													"statements": [
														{
															"nativeSrc": "7432:26:12",
															"nodeType": "YulAssignment",
															"src": "7432:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7444:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7444:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7455:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7455:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:12"
																},
																"nativeSrc": "7440:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7440:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7432:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7432:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7512:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7512:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7525:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7525:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7536:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7536:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7521:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7521:3:12"
																		},
																		"nativeSrc": "7521:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7521:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7468:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7468:43:12"
																},
																"nativeSrc": "7468:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7468:71:12"
															},
															"nativeSrc": "7468:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7468:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7593:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7593:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7606:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7606:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7617:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7617:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7602:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7602:3:12"
																		},
																		"nativeSrc": "7602:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7602:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7549:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7549:43:12"
																},
																"nativeSrc": "7549:72:12",
																"nodeType": "YulFunctionCall",
																"src": "7549:72:12"
															},
															"nativeSrc": "7549:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "7549:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7675:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7675:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7688:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7688:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7699:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7699:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7684:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7684:3:12"
																		},
																		"nativeSrc": "7684:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7684:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7631:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7631:43:12"
																},
																"nativeSrc": "7631:72:12",
																"nodeType": "YulFunctionCall",
																"src": "7631:72:12"
															},
															"nativeSrc": "7631:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "7631:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7268:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7378:9:12",
														"nodeType": "YulTypedName",
														"src": "7378:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7390:6:12",
														"nodeType": "YulTypedName",
														"src": "7390:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7398:6:12",
														"nodeType": "YulTypedName",
														"src": "7398:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7406:6:12",
														"nodeType": "YulTypedName",
														"src": "7406:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7417:4:12",
														"nodeType": "YulTypedName",
														"src": "7417:4:12",
														"type": ""
													}
												],
												"src": "7268:442:12"
											},
											{
												"body": {
													"nativeSrc": "7744:152:12",
													"nodeType": "YulBlock",
													"src": "7744:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7761:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7761:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7764:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7764:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7754:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7754:6:12"
																},
																"nativeSrc": "7754:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7754:88:12"
															},
															"nativeSrc": "7754:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7754:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7858:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7858:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7861:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7861:4:12",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7851:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:12"
																},
																"nativeSrc": "7851:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7851:15:12"
															},
															"nativeSrc": "7851:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7851:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7882:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7882:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7885:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7885:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7875:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7875:6:12"
																},
																"nativeSrc": "7875:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7875:15:12"
															},
															"nativeSrc": "7875:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7875:15:12"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7716:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7716:180:12"
											},
											{
												"body": {
													"nativeSrc": "7953:269:12",
													"nodeType": "YulBlock",
													"src": "7953:269:12",
													"statements": [
														{
															"nativeSrc": "7963:22:12",
															"nodeType": "YulAssignment",
															"src": "7963:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7977:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7977:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:12",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7973:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:12"
																},
																"nativeSrc": "7973:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7973:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7963:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7963:6:12"
																}
															]
														},
														{
															"nativeSrc": "7994:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7994:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8024:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "8024:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8030:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8030:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8020:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8020:3:12"
																},
																"nativeSrc": "8020:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8020:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7998:18:12",
																	"nodeType": "YulTypedName",
																	"src": "7998:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8071:51:12",
																"nodeType": "YulBlock",
																"src": "8071:51:12",
																"statements": [
																	{
																		"nativeSrc": "8085:27:12",
																		"nodeType": "YulAssignment",
																		"src": "8085:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8099:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8099:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8107:4:12",
																					"nodeType": "YulLiteral",
																					"src": "8107:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8095:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "8095:3:12"
																			},
																			"nativeSrc": "8095:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8095:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8085:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8085:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8051:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8051:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8044:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:12"
																},
																"nativeSrc": "8044:26:12",
																"nodeType": "YulFunctionCall",
																"src": "8044:26:12"
															},
															"nativeSrc": "8041:81:12",
															"nodeType": "YulIf",
															"src": "8041:81:12"
														},
														{
															"body": {
																"nativeSrc": "8174:42:12",
																"nodeType": "YulBlock",
																"src": "8174:42:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8188:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8188:16:12"
																			},
																			"nativeSrc": "8188:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8188:18:12"
																		},
																		"nativeSrc": "8188:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8188:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8138:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "8138:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8161:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8161:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8169:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8169:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8158:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8158:2:12"
																		},
																		"nativeSrc": "8158:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8158:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8135:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8135:2:12"
																},
																"nativeSrc": "8135:38:12",
																"nodeType": "YulFunctionCall",
																"src": "8135:38:12"
															},
															"nativeSrc": "8132:84:12",
															"nodeType": "YulIf",
															"src": "8132:84:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7902:320:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7937:4:12",
														"nodeType": "YulTypedName",
														"src": "7937:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7946:6:12",
														"nodeType": "YulTypedName",
														"src": "7946:6:12",
														"type": ""
													}
												],
												"src": "7902:320:12"
											},
											{
												"body": {
													"nativeSrc": "8334:68:12",
													"nodeType": "YulBlock",
													"src": "8334:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8356:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8356:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8364:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8364:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:12"
																		},
																		"nativeSrc": "8352:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8352:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373657321",
																		"kind": "string",
																		"nativeSrc": "8368:26:12",
																		"nodeType": "YulLiteral",
																		"src": "8368:26:12",
																		"type": "",
																		"value": "Invalid token addresses!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:12"
																},
																"nativeSrc": "8345:50:12",
																"nodeType": "YulFunctionCall",
																"src": "8345:50:12"
															},
															"nativeSrc": "8345:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "8345:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2",
												"nativeSrc": "8228:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8326:6:12",
														"nodeType": "YulTypedName",
														"src": "8326:6:12",
														"type": ""
													}
												],
												"src": "8228:174:12"
											},
											{
												"body": {
													"nativeSrc": "8554:220:12",
													"nodeType": "YulBlock",
													"src": "8554:220:12",
													"statements": [
														{
															"nativeSrc": "8564:74:12",
															"nodeType": "YulAssignment",
															"src": "8564:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8630:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8630:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8635:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8635:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8571:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8571:58:12"
																},
																"nativeSrc": "8571:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8571:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8564:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8564:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8736:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8736:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2",
																	"nativeSrc": "8647:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8647:88:12"
																},
																"nativeSrc": "8647:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8647:93:12"
															},
															"nativeSrc": "8647:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8647:93:12"
														},
														{
															"nativeSrc": "8749:19:12",
															"nodeType": "YulAssignment",
															"src": "8749:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8760:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8760:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8765:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8765:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8756:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8756:3:12"
																},
																"nativeSrc": "8756:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8756:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8749:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8749:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8408:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8542:3:12",
														"nodeType": "YulTypedName",
														"src": "8542:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8550:3:12",
														"nodeType": "YulTypedName",
														"src": "8550:3:12",
														"type": ""
													}
												],
												"src": "8408:366:12"
											},
											{
												"body": {
													"nativeSrc": "8951:248:12",
													"nodeType": "YulBlock",
													"src": "8951:248:12",
													"statements": [
														{
															"nativeSrc": "8961:26:12",
															"nodeType": "YulAssignment",
															"src": "8961:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8973:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8973:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8984:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8984:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:12"
																},
																"nativeSrc": "8969:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8969:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8961:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8961:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9008:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9008:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9019:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9019:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9004:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9004:3:12"
																		},
																		"nativeSrc": "9004:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9004:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9027:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9027:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9033:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9033:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9023:3:12"
																		},
																		"nativeSrc": "9023:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9023:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8997:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8997:6:12"
																},
																"nativeSrc": "8997:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8997:47:12"
															},
															"nativeSrc": "8997:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8997:47:12"
														},
														{
															"nativeSrc": "9053:139:12",
															"nodeType": "YulAssignment",
															"src": "9053:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9187:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9187:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9061:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9061:124:12"
																},
																"nativeSrc": "9061:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9061:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9053:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9053:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8780:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8931:9:12",
														"nodeType": "YulTypedName",
														"src": "8931:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8946:4:12",
														"nodeType": "YulTypedName",
														"src": "8946:4:12",
														"type": ""
													}
												],
												"src": "8780:419:12"
											},
											{
												"body": {
													"nativeSrc": "9311:69:12",
													"nodeType": "YulBlock",
													"src": "9311:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9333:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9333:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9341:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9341:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9329:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9329:3:12"
																		},
																		"nativeSrc": "9329:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9329:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420726563697069656e742061646472657373",
																		"kind": "string",
																		"nativeSrc": "9345:27:12",
																		"nodeType": "YulLiteral",
																		"src": "9345:27:12",
																		"type": "",
																		"value": "Invalid recipient address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9322:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:12"
																},
																"nativeSrc": "9322:51:12",
																"nodeType": "YulFunctionCall",
																"src": "9322:51:12"
															},
															"nativeSrc": "9322:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "9322:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
												"nativeSrc": "9205:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9303:6:12",
														"nodeType": "YulTypedName",
														"src": "9303:6:12",
														"type": ""
													}
												],
												"src": "9205:175:12"
											},
											{
												"body": {
													"nativeSrc": "9532:220:12",
													"nodeType": "YulBlock",
													"src": "9532:220:12",
													"statements": [
														{
															"nativeSrc": "9542:74:12",
															"nodeType": "YulAssignment",
															"src": "9542:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9608:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9608:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9613:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9613:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9549:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9549:58:12"
																},
																"nativeSrc": "9549:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9549:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9542:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9542:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9714:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9714:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																	"nativeSrc": "9625:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9625:88:12"
																},
																"nativeSrc": "9625:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9625:93:12"
															},
															"nativeSrc": "9625:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9625:93:12"
														},
														{
															"nativeSrc": "9727:19:12",
															"nodeType": "YulAssignment",
															"src": "9727:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9738:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9738:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9743:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9743:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9734:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9734:3:12"
																},
																"nativeSrc": "9734:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9734:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9727:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9386:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9520:3:12",
														"nodeType": "YulTypedName",
														"src": "9520:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9528:3:12",
														"nodeType": "YulTypedName",
														"src": "9528:3:12",
														"type": ""
													}
												],
												"src": "9386:366:12"
											},
											{
												"body": {
													"nativeSrc": "9929:248:12",
													"nodeType": "YulBlock",
													"src": "9929:248:12",
													"statements": [
														{
															"nativeSrc": "9939:26:12",
															"nodeType": "YulAssignment",
															"src": "9939:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9951:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9951:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9962:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9962:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9947:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9947:3:12"
																},
																"nativeSrc": "9947:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9947:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9939:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9939:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9986:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9986:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9997:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9997:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9982:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9982:3:12"
																		},
																		"nativeSrc": "9982:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9982:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10005:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10005:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10011:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10011:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10001:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10001:3:12"
																		},
																		"nativeSrc": "10001:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10001:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9975:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9975:6:12"
																},
																"nativeSrc": "9975:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9975:47:12"
															},
															"nativeSrc": "9975:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9975:47:12"
														},
														{
															"nativeSrc": "10031:139:12",
															"nodeType": "YulAssignment",
															"src": "10031:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10165:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10165:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10039:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10039:124:12"
																},
																"nativeSrc": "10039:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10039:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10031:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10031:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9758:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9909:9:12",
														"nodeType": "YulTypedName",
														"src": "9909:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9924:4:12",
														"nodeType": "YulTypedName",
														"src": "9924:4:12",
														"type": ""
													}
												],
												"src": "9758:419:12"
											},
											{
												"body": {
													"nativeSrc": "10289:69:12",
													"nodeType": "YulBlock",
													"src": "10289:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10311:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10311:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10319:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10319:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10307:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10307:3:12"
																		},
																		"nativeSrc": "10307:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10307:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420696e70757420706172616d657465727321",
																		"kind": "string",
																		"nativeSrc": "10323:27:12",
																		"nodeType": "YulLiteral",
																		"src": "10323:27:12",
																		"type": "",
																		"value": "Invalid input parameters!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10300:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10300:6:12"
																},
																"nativeSrc": "10300:51:12",
																"nodeType": "YulFunctionCall",
																"src": "10300:51:12"
															},
															"nativeSrc": "10300:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "10300:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0",
												"nativeSrc": "10183:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10281:6:12",
														"nodeType": "YulTypedName",
														"src": "10281:6:12",
														"type": ""
													}
												],
												"src": "10183:175:12"
											},
											{
												"body": {
													"nativeSrc": "10510:220:12",
													"nodeType": "YulBlock",
													"src": "10510:220:12",
													"statements": [
														{
															"nativeSrc": "10520:74:12",
															"nodeType": "YulAssignment",
															"src": "10520:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10586:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10586:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10591:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10591:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10527:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10527:58:12"
																},
																"nativeSrc": "10527:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10527:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10520:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10692:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10692:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0",
																	"nativeSrc": "10603:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10603:88:12"
																},
																"nativeSrc": "10603:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10603:93:12"
															},
															"nativeSrc": "10603:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10603:93:12"
														},
														{
															"nativeSrc": "10705:19:12",
															"nodeType": "YulAssignment",
															"src": "10705:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10716:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10716:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10721:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10721:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10712:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10712:3:12"
																},
																"nativeSrc": "10712:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10712:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10705:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10705:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10364:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10498:3:12",
														"nodeType": "YulTypedName",
														"src": "10498:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10506:3:12",
														"nodeType": "YulTypedName",
														"src": "10506:3:12",
														"type": ""
													}
												],
												"src": "10364:366:12"
											},
											{
												"body": {
													"nativeSrc": "10907:248:12",
													"nodeType": "YulBlock",
													"src": "10907:248:12",
													"statements": [
														{
															"nativeSrc": "10917:26:12",
															"nodeType": "YulAssignment",
															"src": "10917:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10929:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10929:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10940:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10940:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10925:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10925:3:12"
																},
																"nativeSrc": "10925:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10925:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10917:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10917:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10964:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10964:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10975:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10975:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10960:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:12"
																		},
																		"nativeSrc": "10960:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10960:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10983:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10983:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10989:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10989:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10979:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10979:3:12"
																		},
																		"nativeSrc": "10979:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10979:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10953:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:12"
																},
																"nativeSrc": "10953:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10953:47:12"
															},
															"nativeSrc": "10953:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10953:47:12"
														},
														{
															"nativeSrc": "11009:139:12",
															"nodeType": "YulAssignment",
															"src": "11009:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11143:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11143:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11017:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11017:124:12"
																},
																"nativeSrc": "11017:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11017:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11009:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11009:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10736:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10887:9:12",
														"nodeType": "YulTypedName",
														"src": "10887:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10902:4:12",
														"nodeType": "YulTypedName",
														"src": "10902:4:12",
														"type": ""
													}
												],
												"src": "10736:419:12"
											},
											{
												"body": {
													"nativeSrc": "11267:76:12",
													"nodeType": "YulBlock",
													"src": "11267:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11289:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11289:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11297:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11297:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11285:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11285:3:12"
																		},
																		"nativeSrc": "11285:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11285:14:12"
																	},
																	{
																		"hexValue": "4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e4121",
																		"kind": "string",
																		"nativeSrc": "11301:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11301:34:12",
																		"type": "",
																		"value": "Not meet the minimum for TokenA!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11278:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11278:6:12"
																},
																"nativeSrc": "11278:58:12",
																"nodeType": "YulFunctionCall",
																"src": "11278:58:12"
															},
															"nativeSrc": "11278:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "11278:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b",
												"nativeSrc": "11161:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11259:6:12",
														"nodeType": "YulTypedName",
														"src": "11259:6:12",
														"type": ""
													}
												],
												"src": "11161:182:12"
											},
											{
												"body": {
													"nativeSrc": "11495:220:12",
													"nodeType": "YulBlock",
													"src": "11495:220:12",
													"statements": [
														{
															"nativeSrc": "11505:74:12",
															"nodeType": "YulAssignment",
															"src": "11505:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11571:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11571:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11576:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11576:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11512:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "11512:58:12"
																},
																"nativeSrc": "11512:67:12",
																"nodeType": "YulFunctionCall",
																"src": "11512:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11505:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11505:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11677:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11677:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b",
																	"nativeSrc": "11588:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "11588:88:12"
																},
																"nativeSrc": "11588:93:12",
																"nodeType": "YulFunctionCall",
																"src": "11588:93:12"
															},
															"nativeSrc": "11588:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "11588:93:12"
														},
														{
															"nativeSrc": "11690:19:12",
															"nodeType": "YulAssignment",
															"src": "11690:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11701:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11701:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11706:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11706:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11697:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11697:3:12"
																},
																"nativeSrc": "11697:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11697:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11690:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11690:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11349:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11483:3:12",
														"nodeType": "YulTypedName",
														"src": "11483:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11491:3:12",
														"nodeType": "YulTypedName",
														"src": "11491:3:12",
														"type": ""
													}
												],
												"src": "11349:366:12"
											},
											{
												"body": {
													"nativeSrc": "11892:248:12",
													"nodeType": "YulBlock",
													"src": "11892:248:12",
													"statements": [
														{
															"nativeSrc": "11902:26:12",
															"nodeType": "YulAssignment",
															"src": "11902:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11914:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11914:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11925:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11925:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11910:3:12"
																},
																"nativeSrc": "11910:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11910:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11902:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11902:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11949:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11949:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11960:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11960:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11945:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11945:3:12"
																		},
																		"nativeSrc": "11945:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11945:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11968:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11968:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11974:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11974:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11964:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11964:3:12"
																		},
																		"nativeSrc": "11964:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11964:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11938:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11938:6:12"
																},
																"nativeSrc": "11938:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11938:47:12"
															},
															"nativeSrc": "11938:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11938:47:12"
														},
														{
															"nativeSrc": "11994:139:12",
															"nodeType": "YulAssignment",
															"src": "11994:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12128:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12128:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12002:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12002:124:12"
																},
																"nativeSrc": "12002:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12002:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11994:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11994:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11721:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11872:9:12",
														"nodeType": "YulTypedName",
														"src": "11872:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11887:4:12",
														"nodeType": "YulTypedName",
														"src": "11887:4:12",
														"type": ""
													}
												],
												"src": "11721:419:12"
											},
											{
												"body": {
													"nativeSrc": "12252:76:12",
													"nodeType": "YulBlock",
													"src": "12252:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12274:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12274:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12282:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12282:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12270:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12270:3:12"
																		},
																		"nativeSrc": "12270:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12270:14:12"
																	},
																	{
																		"hexValue": "4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e4221",
																		"kind": "string",
																		"nativeSrc": "12286:34:12",
																		"nodeType": "YulLiteral",
																		"src": "12286:34:12",
																		"type": "",
																		"value": "Not meet the minimum for TokenB!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12263:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12263:6:12"
																},
																"nativeSrc": "12263:58:12",
																"nodeType": "YulFunctionCall",
																"src": "12263:58:12"
															},
															"nativeSrc": "12263:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "12263:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e",
												"nativeSrc": "12146:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12244:6:12",
														"nodeType": "YulTypedName",
														"src": "12244:6:12",
														"type": ""
													}
												],
												"src": "12146:182:12"
											},
											{
												"body": {
													"nativeSrc": "12480:220:12",
													"nodeType": "YulBlock",
													"src": "12480:220:12",
													"statements": [
														{
															"nativeSrc": "12490:74:12",
															"nodeType": "YulAssignment",
															"src": "12490:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12556:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12556:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12561:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12561:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12497:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12497:58:12"
																},
																"nativeSrc": "12497:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12497:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12490:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12490:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12662:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12662:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e",
																	"nativeSrc": "12573:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12573:88:12"
																},
																"nativeSrc": "12573:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12573:93:12"
															},
															"nativeSrc": "12573:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12573:93:12"
														},
														{
															"nativeSrc": "12675:19:12",
															"nodeType": "YulAssignment",
															"src": "12675:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12686:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12686:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12691:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12691:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12682:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12682:3:12"
																},
																"nativeSrc": "12682:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12682:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12675:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12675:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12334:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12468:3:12",
														"nodeType": "YulTypedName",
														"src": "12468:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12476:3:12",
														"nodeType": "YulTypedName",
														"src": "12476:3:12",
														"type": ""
													}
												],
												"src": "12334:366:12"
											},
											{
												"body": {
													"nativeSrc": "12877:248:12",
													"nodeType": "YulBlock",
													"src": "12877:248:12",
													"statements": [
														{
															"nativeSrc": "12887:26:12",
															"nodeType": "YulAssignment",
															"src": "12887:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12899:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12899:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12910:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12910:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12895:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12895:3:12"
																},
																"nativeSrc": "12895:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12895:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12887:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12887:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12934:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12934:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12945:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12945:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12930:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12930:3:12"
																		},
																		"nativeSrc": "12930:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12930:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12953:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12953:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12959:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12959:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12949:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12949:3:12"
																		},
																		"nativeSrc": "12949:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12949:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12923:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12923:6:12"
																},
																"nativeSrc": "12923:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12923:47:12"
															},
															"nativeSrc": "12923:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12923:47:12"
														},
														{
															"nativeSrc": "12979:139:12",
															"nodeType": "YulAssignment",
															"src": "12979:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13113:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13113:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12987:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12987:124:12"
																},
																"nativeSrc": "12987:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12987:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12979:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12979:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12706:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12857:9:12",
														"nodeType": "YulTypedName",
														"src": "12857:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12872:4:12",
														"nodeType": "YulTypedName",
														"src": "12872:4:12",
														"type": ""
													}
												],
												"src": "12706:419:12"
											},
											{
												"body": {
													"nativeSrc": "13194:80:12",
													"nodeType": "YulBlock",
													"src": "13194:80:12",
													"statements": [
														{
															"nativeSrc": "13204:22:12",
															"nodeType": "YulAssignment",
															"src": "13204:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13219:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13219:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13213:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13213:5:12"
																},
																"nativeSrc": "13213:13:12",
																"nodeType": "YulFunctionCall",
																"src": "13213:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13204:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13204:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13262:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13262:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13235:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "13235:26:12"
																},
																"nativeSrc": "13235:33:12",
																"nodeType": "YulFunctionCall",
																"src": "13235:33:12"
															},
															"nativeSrc": "13235:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "13235:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13131:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13172:6:12",
														"nodeType": "YulTypedName",
														"src": "13172:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13180:3:12",
														"nodeType": "YulTypedName",
														"src": "13180:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13188:5:12",
														"nodeType": "YulTypedName",
														"src": "13188:5:12",
														"type": ""
													}
												],
												"src": "13131:143:12"
											},
											{
												"body": {
													"nativeSrc": "13357:274:12",
													"nodeType": "YulBlock",
													"src": "13357:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "13403:83:12",
																"nodeType": "YulBlock",
																"src": "13403:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13405:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "13405:77:12"
																			},
																			"nativeSrc": "13405:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13405:79:12"
																		},
																		"nativeSrc": "13405:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13405:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13378:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13378:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13387:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13387:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13374:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13374:3:12"
																		},
																		"nativeSrc": "13374:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13374:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13399:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13399:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13370:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13370:3:12"
																},
																"nativeSrc": "13370:32:12",
																"nodeType": "YulFunctionCall",
																"src": "13370:32:12"
															},
															"nativeSrc": "13367:119:12",
															"nodeType": "YulIf",
															"src": "13367:119:12"
														},
														{
															"nativeSrc": "13496:128:12",
															"nodeType": "YulBlock",
															"src": "13496:128:12",
															"statements": [
																{
																	"nativeSrc": "13511:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13511:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13525:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13525:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13515:6:12",
																			"nodeType": "YulTypedName",
																			"src": "13515:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13540:74:12",
																	"nodeType": "YulAssignment",
																	"src": "13540:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13586:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13586:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13597:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13597:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13582:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13582:3:12"
																				},
																				"nativeSrc": "13582:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13582:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13606:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "13606:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13550:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "13550:31:12"
																		},
																		"nativeSrc": "13550:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13550:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13540:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "13540:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13280:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13327:9:12",
														"nodeType": "YulTypedName",
														"src": "13327:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13338:7:12",
														"nodeType": "YulTypedName",
														"src": "13338:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13350:6:12",
														"nodeType": "YulTypedName",
														"src": "13350:6:12",
														"type": ""
													}
												],
												"src": "13280:351:12"
											},
											{
												"body": {
													"nativeSrc": "13743:70:12",
													"nodeType": "YulBlock",
													"src": "13743:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13765:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13765:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13773:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13773:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13761:3:12"
																		},
																		"nativeSrc": "13761:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13761:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f6b656e412066756e647321",
																		"kind": "string",
																		"nativeSrc": "13777:28:12",
																		"nodeType": "YulLiteral",
																		"src": "13777:28:12",
																		"type": "",
																		"value": "Insufficient TokenA funds!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13754:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13754:6:12"
																},
																"nativeSrc": "13754:52:12",
																"nodeType": "YulFunctionCall",
																"src": "13754:52:12"
															},
															"nativeSrc": "13754:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "13754:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789",
												"nativeSrc": "13637:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13735:6:12",
														"nodeType": "YulTypedName",
														"src": "13735:6:12",
														"type": ""
													}
												],
												"src": "13637:176:12"
											},
											{
												"body": {
													"nativeSrc": "13965:220:12",
													"nodeType": "YulBlock",
													"src": "13965:220:12",
													"statements": [
														{
															"nativeSrc": "13975:74:12",
															"nodeType": "YulAssignment",
															"src": "13975:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14041:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14041:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14046:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14046:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13982:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13982:58:12"
																},
																"nativeSrc": "13982:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13982:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13975:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13975:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14147:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14147:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789",
																	"nativeSrc": "14058:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14058:88:12"
																},
																"nativeSrc": "14058:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14058:93:12"
															},
															"nativeSrc": "14058:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14058:93:12"
														},
														{
															"nativeSrc": "14160:19:12",
															"nodeType": "YulAssignment",
															"src": "14160:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14171:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14171:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14176:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14176:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14167:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14167:3:12"
																},
																"nativeSrc": "14167:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14167:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14160:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14160:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13819:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13953:3:12",
														"nodeType": "YulTypedName",
														"src": "13953:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13961:3:12",
														"nodeType": "YulTypedName",
														"src": "13961:3:12",
														"type": ""
													}
												],
												"src": "13819:366:12"
											},
											{
												"body": {
													"nativeSrc": "14362:248:12",
													"nodeType": "YulBlock",
													"src": "14362:248:12",
													"statements": [
														{
															"nativeSrc": "14372:26:12",
															"nodeType": "YulAssignment",
															"src": "14372:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14384:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14384:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14395:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14395:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14380:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14380:3:12"
																},
																"nativeSrc": "14380:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14380:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14372:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14372:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14419:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14419:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14430:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14430:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14415:3:12"
																		},
																		"nativeSrc": "14415:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14415:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14438:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14438:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14444:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14444:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14434:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14434:3:12"
																		},
																		"nativeSrc": "14434:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14434:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14408:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14408:6:12"
																},
																"nativeSrc": "14408:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14408:47:12"
															},
															"nativeSrc": "14408:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14408:47:12"
														},
														{
															"nativeSrc": "14464:139:12",
															"nodeType": "YulAssignment",
															"src": "14464:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14598:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14598:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14472:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14472:124:12"
																},
																"nativeSrc": "14472:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14472:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14464:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14464:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14191:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14342:9:12",
														"nodeType": "YulTypedName",
														"src": "14342:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14357:4:12",
														"nodeType": "YulTypedName",
														"src": "14357:4:12",
														"type": ""
													}
												],
												"src": "14191:419:12"
											},
											{
												"body": {
													"nativeSrc": "14722:70:12",
													"nodeType": "YulBlock",
													"src": "14722:70:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14744:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14744:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14752:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14752:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14740:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14740:3:12"
																		},
																		"nativeSrc": "14740:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14740:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420546f6b656e422066756e647321",
																		"kind": "string",
																		"nativeSrc": "14756:28:12",
																		"nodeType": "YulLiteral",
																		"src": "14756:28:12",
																		"type": "",
																		"value": "Insufficient TokenB funds!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14733:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14733:6:12"
																},
																"nativeSrc": "14733:52:12",
																"nodeType": "YulFunctionCall",
																"src": "14733:52:12"
															},
															"nativeSrc": "14733:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "14733:52:12"
														}
													]
												},
												"name": "store_literal_in_memory_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e",
												"nativeSrc": "14616:176:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14714:6:12",
														"nodeType": "YulTypedName",
														"src": "14714:6:12",
														"type": ""
													}
												],
												"src": "14616:176:12"
											},
											{
												"body": {
													"nativeSrc": "14944:220:12",
													"nodeType": "YulBlock",
													"src": "14944:220:12",
													"statements": [
														{
															"nativeSrc": "14954:74:12",
															"nodeType": "YulAssignment",
															"src": "14954:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15020:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15025:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15025:2:12",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14961:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14961:58:12"
																},
																"nativeSrc": "14961:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14961:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14954:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14954:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15126:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15126:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e",
																	"nativeSrc": "15037:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15037:88:12"
																},
																"nativeSrc": "15037:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15037:93:12"
															},
															"nativeSrc": "15037:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15037:93:12"
														},
														{
															"nativeSrc": "15139:19:12",
															"nodeType": "YulAssignment",
															"src": "15139:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15150:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15150:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15155:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15155:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15146:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15146:3:12"
																},
																"nativeSrc": "15146:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15146:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15139:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15139:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14798:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14932:3:12",
														"nodeType": "YulTypedName",
														"src": "14932:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14940:3:12",
														"nodeType": "YulTypedName",
														"src": "14940:3:12",
														"type": ""
													}
												],
												"src": "14798:366:12"
											},
											{
												"body": {
													"nativeSrc": "15341:248:12",
													"nodeType": "YulBlock",
													"src": "15341:248:12",
													"statements": [
														{
															"nativeSrc": "15351:26:12",
															"nodeType": "YulAssignment",
															"src": "15351:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15363:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15363:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15374:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15374:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15359:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15359:3:12"
																},
																"nativeSrc": "15359:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15359:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15351:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15351:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15398:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15398:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15409:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15409:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15394:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15394:3:12"
																		},
																		"nativeSrc": "15394:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15394:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15417:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15417:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15423:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15423:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15413:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15413:3:12"
																		},
																		"nativeSrc": "15413:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15413:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15387:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15387:6:12"
																},
																"nativeSrc": "15387:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15387:47:12"
															},
															"nativeSrc": "15387:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15387:47:12"
														},
														{
															"nativeSrc": "15443:139:12",
															"nodeType": "YulAssignment",
															"src": "15443:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15577:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15577:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15451:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15451:124:12"
																},
																"nativeSrc": "15451:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15451:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15443:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15443:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15170:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15321:9:12",
														"nodeType": "YulTypedName",
														"src": "15321:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15336:4:12",
														"nodeType": "YulTypedName",
														"src": "15336:4:12",
														"type": ""
													}
												],
												"src": "15170:419:12"
											},
											{
												"body": {
													"nativeSrc": "15623:152:12",
													"nodeType": "YulBlock",
													"src": "15623:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15640:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15640:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15643:77:12",
																		"nodeType": "YulLiteral",
																		"src": "15643:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15633:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15633:6:12"
																},
																"nativeSrc": "15633:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15633:88:12"
															},
															"nativeSrc": "15633:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "15633:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15737:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15737:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15740:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15740:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15730:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15730:6:12"
																},
																"nativeSrc": "15730:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15730:15:12"
															},
															"nativeSrc": "15730:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15730:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15761:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15761:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15764:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15764:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15754:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15754:6:12"
																},
																"nativeSrc": "15754:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15754:15:12"
															},
															"nativeSrc": "15754:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15754:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15595:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15595:180:12"
											},
											{
												"body": {
													"nativeSrc": "15825:147:12",
													"nodeType": "YulBlock",
													"src": "15825:147:12",
													"statements": [
														{
															"nativeSrc": "15835:25:12",
															"nodeType": "YulAssignment",
															"src": "15835:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15858:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15858:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15840:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15840:17:12"
																},
																"nativeSrc": "15840:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15840:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15835:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15835:1:12"
																}
															]
														},
														{
															"nativeSrc": "15869:25:12",
															"nodeType": "YulAssignment",
															"src": "15869:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15892:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15892:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15874:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15874:17:12"
																},
																"nativeSrc": "15874:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15874:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15869:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15869:1:12"
																}
															]
														},
														{
															"nativeSrc": "15903:16:12",
															"nodeType": "YulAssignment",
															"src": "15903:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15914:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15914:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15917:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15917:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15910:3:12"
																},
																"nativeSrc": "15910:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15910:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15903:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15903:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15943:22:12",
																"nodeType": "YulBlock",
																"src": "15943:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15945:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15945:16:12"
																			},
																			"nativeSrc": "15945:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15945:18:12"
																		},
																		"nativeSrc": "15945:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15945:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15935:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15935:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15938:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15938:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15932:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15932:2:12"
																},
																"nativeSrc": "15932:10:12",
																"nodeType": "YulFunctionCall",
																"src": "15932:10:12"
															},
															"nativeSrc": "15929:36:12",
															"nodeType": "YulIf",
															"src": "15929:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15781:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15812:1:12",
														"nodeType": "YulTypedName",
														"src": "15812:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15815:1:12",
														"nodeType": "YulTypedName",
														"src": "15815:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15821:3:12",
														"nodeType": "YulTypedName",
														"src": "15821:3:12",
														"type": ""
													}
												],
												"src": "15781:191:12"
											},
											{
												"body": {
													"nativeSrc": "16132:288:12",
													"nodeType": "YulBlock",
													"src": "16132:288:12",
													"statements": [
														{
															"nativeSrc": "16142:26:12",
															"nodeType": "YulAssignment",
															"src": "16142:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16154:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16154:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16165:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16165:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16150:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16150:3:12"
																},
																"nativeSrc": "16150:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16150:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16142:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16142:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16222:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16222:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16235:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16235:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16246:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16246:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16231:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16231:3:12"
																		},
																		"nativeSrc": "16231:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16231:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16178:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16178:43:12"
																},
																"nativeSrc": "16178:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16178:71:12"
															},
															"nativeSrc": "16178:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16178:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16303:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16303:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16316:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16316:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16327:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16327:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16312:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16312:3:12"
																		},
																		"nativeSrc": "16312:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16312:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16259:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16259:43:12"
																},
																"nativeSrc": "16259:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16259:72:12"
															},
															"nativeSrc": "16259:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16259:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16385:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16385:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16398:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16398:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16409:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16409:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16394:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16394:3:12"
																		},
																		"nativeSrc": "16394:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16394:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16341:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16341:43:12"
																},
																"nativeSrc": "16341:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16341:72:12"
															},
															"nativeSrc": "16341:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16341:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15978:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16088:9:12",
														"nodeType": "YulTypedName",
														"src": "16088:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16100:6:12",
														"nodeType": "YulTypedName",
														"src": "16100:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16108:6:12",
														"nodeType": "YulTypedName",
														"src": "16108:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16116:6:12",
														"nodeType": "YulTypedName",
														"src": "16116:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16127:4:12",
														"nodeType": "YulTypedName",
														"src": "16127:4:12",
														"type": ""
													}
												],
												"src": "15978:442:12"
											},
											{
												"body": {
													"nativeSrc": "16466:76:12",
													"nodeType": "YulBlock",
													"src": "16466:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16520:16:12",
																"nodeType": "YulBlock",
																"src": "16520:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16529:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16532:1:12",
																					"nodeType": "YulLiteral",
																					"src": "16532:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16522:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16522:6:12"
																			},
																			"nativeSrc": "16522:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16522:12:12"
																		},
																		"nativeSrc": "16522:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16522:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16489:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16489:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16511:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "16511:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "16496:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "16496:14:12"
																				},
																				"nativeSrc": "16496:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16496:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "16486:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "16486:2:12"
																		},
																		"nativeSrc": "16486:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16486:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16479:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16479:6:12"
																},
																"nativeSrc": "16479:40:12",
																"nodeType": "YulFunctionCall",
																"src": "16479:40:12"
															},
															"nativeSrc": "16476:60:12",
															"nodeType": "YulIf",
															"src": "16476:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "16426:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16459:5:12",
														"nodeType": "YulTypedName",
														"src": "16459:5:12",
														"type": ""
													}
												],
												"src": "16426:116:12"
											},
											{
												"body": {
													"nativeSrc": "16608:77:12",
													"nodeType": "YulBlock",
													"src": "16608:77:12",
													"statements": [
														{
															"nativeSrc": "16618:22:12",
															"nodeType": "YulAssignment",
															"src": "16618:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16633:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16633:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16627:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16627:5:12"
																},
																"nativeSrc": "16627:13:12",
																"nodeType": "YulFunctionCall",
																"src": "16627:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16618:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16618:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16673:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16673:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "16649:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "16649:23:12"
																},
																"nativeSrc": "16649:30:12",
																"nodeType": "YulFunctionCall",
																"src": "16649:30:12"
															},
															"nativeSrc": "16649:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "16649:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "16548:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16586:6:12",
														"nodeType": "YulTypedName",
														"src": "16586:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16594:3:12",
														"nodeType": "YulTypedName",
														"src": "16594:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16602:5:12",
														"nodeType": "YulTypedName",
														"src": "16602:5:12",
														"type": ""
													}
												],
												"src": "16548:137:12"
											},
											{
												"body": {
													"nativeSrc": "16765:271:12",
													"nodeType": "YulBlock",
													"src": "16765:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "16811:83:12",
																"nodeType": "YulBlock",
																"src": "16811:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16813:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "16813:77:12"
																			},
																			"nativeSrc": "16813:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16813:79:12"
																		},
																		"nativeSrc": "16813:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16813:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16786:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "16786:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16795:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16795:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16782:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16782:3:12"
																		},
																		"nativeSrc": "16782:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16782:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16807:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16807:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16778:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16778:3:12"
																},
																"nativeSrc": "16778:32:12",
																"nodeType": "YulFunctionCall",
																"src": "16778:32:12"
															},
															"nativeSrc": "16775:119:12",
															"nodeType": "YulIf",
															"src": "16775:119:12"
														},
														{
															"nativeSrc": "16904:125:12",
															"nodeType": "YulBlock",
															"src": "16904:125:12",
															"statements": [
																{
																	"nativeSrc": "16919:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16919:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16933:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16933:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16923:6:12",
																			"nodeType": "YulTypedName",
																			"src": "16923:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16948:71:12",
																	"nodeType": "YulAssignment",
																	"src": "16948:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16991:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "16991:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17002:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "17002:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16987:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "16987:3:12"
																				},
																				"nativeSrc": "16987:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "16987:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17011:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17011:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "16958:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "16958:28:12"
																		},
																		"nativeSrc": "16958:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16958:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16948:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "16948:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "16691:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16735:9:12",
														"nodeType": "YulTypedName",
														"src": "16735:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16746:7:12",
														"nodeType": "YulTypedName",
														"src": "16746:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16758:6:12",
														"nodeType": "YulTypedName",
														"src": "16758:6:12",
														"type": ""
													}
												],
												"src": "16691:345:12"
											},
											{
												"body": {
													"nativeSrc": "17168:206:12",
													"nodeType": "YulBlock",
													"src": "17168:206:12",
													"statements": [
														{
															"nativeSrc": "17178:26:12",
															"nodeType": "YulAssignment",
															"src": "17178:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17190:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17190:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17201:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17201:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17186:3:12"
																},
																"nativeSrc": "17186:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17186:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17178:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17178:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17258:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17258:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17271:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17271:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17282:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17282:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17267:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17267:3:12"
																		},
																		"nativeSrc": "17267:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17267:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17214:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17214:43:12"
																},
																"nativeSrc": "17214:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17214:71:12"
															},
															"nativeSrc": "17214:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17214:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17339:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17339:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17352:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17352:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17363:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17363:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17348:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17348:3:12"
																		},
																		"nativeSrc": "17348:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17348:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17295:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17295:43:12"
																},
																"nativeSrc": "17295:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17295:72:12"
															},
															"nativeSrc": "17295:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17295:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17042:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17132:9:12",
														"nodeType": "YulTypedName",
														"src": "17132:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17144:6:12",
														"nodeType": "YulTypedName",
														"src": "17144:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17152:6:12",
														"nodeType": "YulTypedName",
														"src": "17152:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17163:4:12",
														"nodeType": "YulTypedName",
														"src": "17163:4:12",
														"type": ""
													}
												],
												"src": "17042:332:12"
											},
											{
												"body": {
													"nativeSrc": "17486:61:12",
													"nodeType": "YulBlock",
													"src": "17486:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17508:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17508:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17516:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17516:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17504:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17504:3:12"
																		},
																		"nativeSrc": "17504:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17504:14:12"
																	},
																	{
																		"hexValue": "446561646c696e65207265616368656421",
																		"kind": "string",
																		"nativeSrc": "17520:19:12",
																		"nodeType": "YulLiteral",
																		"src": "17520:19:12",
																		"type": "",
																		"value": "Deadline reached!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17497:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17497:6:12"
																},
																"nativeSrc": "17497:43:12",
																"nodeType": "YulFunctionCall",
																"src": "17497:43:12"
															},
															"nativeSrc": "17497:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "17497:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0",
												"nativeSrc": "17380:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17478:6:12",
														"nodeType": "YulTypedName",
														"src": "17478:6:12",
														"type": ""
													}
												],
												"src": "17380:167:12"
											},
											{
												"body": {
													"nativeSrc": "17699:220:12",
													"nodeType": "YulBlock",
													"src": "17699:220:12",
													"statements": [
														{
															"nativeSrc": "17709:74:12",
															"nodeType": "YulAssignment",
															"src": "17709:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17775:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17775:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17780:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17780:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17716:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17716:58:12"
																},
																"nativeSrc": "17716:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17716:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17709:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17709:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17881:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17881:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0",
																	"nativeSrc": "17792:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17792:88:12"
																},
																"nativeSrc": "17792:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17792:93:12"
															},
															"nativeSrc": "17792:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17792:93:12"
														},
														{
															"nativeSrc": "17894:19:12",
															"nodeType": "YulAssignment",
															"src": "17894:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17905:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17905:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17910:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17910:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17901:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17901:3:12"
																},
																"nativeSrc": "17901:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17901:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17894:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17894:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17553:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17687:3:12",
														"nodeType": "YulTypedName",
														"src": "17687:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17695:3:12",
														"nodeType": "YulTypedName",
														"src": "17695:3:12",
														"type": ""
													}
												],
												"src": "17553:366:12"
											},
											{
												"body": {
													"nativeSrc": "18096:248:12",
													"nodeType": "YulBlock",
													"src": "18096:248:12",
													"statements": [
														{
															"nativeSrc": "18106:26:12",
															"nodeType": "YulAssignment",
															"src": "18106:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18118:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18118:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18129:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18129:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18114:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18114:3:12"
																},
																"nativeSrc": "18114:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18114:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18106:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18106:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18153:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18153:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18164:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18164:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18149:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18149:3:12"
																		},
																		"nativeSrc": "18149:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18149:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18172:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18172:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18178:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18178:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18168:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18168:3:12"
																		},
																		"nativeSrc": "18168:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18168:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18142:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18142:6:12"
																},
																"nativeSrc": "18142:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18142:47:12"
															},
															"nativeSrc": "18142:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18142:47:12"
														},
														{
															"nativeSrc": "18198:139:12",
															"nodeType": "YulAssignment",
															"src": "18198:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18332:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18332:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18206:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18206:124:12"
																},
																"nativeSrc": "18206:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18206:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18198:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18198:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17925:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18076:9:12",
														"nodeType": "YulTypedName",
														"src": "18076:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18091:4:12",
														"nodeType": "YulTypedName",
														"src": "18091:4:12",
														"type": ""
													}
												],
												"src": "17925:419:12"
											},
											{
												"body": {
													"nativeSrc": "18504:288:12",
													"nodeType": "YulBlock",
													"src": "18504:288:12",
													"statements": [
														{
															"nativeSrc": "18514:26:12",
															"nodeType": "YulAssignment",
															"src": "18514:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18526:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18526:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18537:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18537:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18522:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18522:3:12"
																},
																"nativeSrc": "18522:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18522:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18514:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18514:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18594:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18594:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18607:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18607:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18618:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18618:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18603:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18603:3:12"
																		},
																		"nativeSrc": "18603:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18603:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18550:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18550:43:12"
																},
																"nativeSrc": "18550:71:12",
																"nodeType": "YulFunctionCall",
																"src": "18550:71:12"
															},
															"nativeSrc": "18550:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "18550:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18675:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18675:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18688:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18688:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18699:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18699:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18684:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18684:3:12"
																		},
																		"nativeSrc": "18684:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18684:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18631:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18631:43:12"
																},
																"nativeSrc": "18631:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18631:72:12"
															},
															"nativeSrc": "18631:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18631:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18757:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18757:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18770:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18770:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18781:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18781:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18766:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18766:3:12"
																		},
																		"nativeSrc": "18766:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18766:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18713:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18713:43:12"
																},
																"nativeSrc": "18713:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18713:72:12"
															},
															"nativeSrc": "18713:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18713:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18350:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18460:9:12",
														"nodeType": "YulTypedName",
														"src": "18460:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18472:6:12",
														"nodeType": "YulTypedName",
														"src": "18472:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18480:6:12",
														"nodeType": "YulTypedName",
														"src": "18480:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18488:6:12",
														"nodeType": "YulTypedName",
														"src": "18488:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18499:4:12",
														"nodeType": "YulTypedName",
														"src": "18499:4:12",
														"type": ""
													}
												],
												"src": "18350:442:12"
											},
											{
												"body": {
													"nativeSrc": "18846:362:12",
													"nodeType": "YulBlock",
													"src": "18846:362:12",
													"statements": [
														{
															"nativeSrc": "18856:25:12",
															"nodeType": "YulAssignment",
															"src": "18856:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18879:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18879:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18861:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18861:17:12"
																},
																"nativeSrc": "18861:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18861:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18856:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18856:1:12"
																}
															]
														},
														{
															"nativeSrc": "18890:25:12",
															"nodeType": "YulAssignment",
															"src": "18890:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18913:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18913:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18895:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18895:17:12"
																},
																"nativeSrc": "18895:20:12",
																"nodeType": "YulFunctionCall",
																"src": "18895:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18890:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "18890:1:12"
																}
															]
														},
														{
															"nativeSrc": "18924:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18924:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18947:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18947:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18950:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "18950:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "18943:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18943:3:12"
																},
																"nativeSrc": "18943:9:12",
																"nodeType": "YulFunctionCall",
																"src": "18943:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "18928:11:12",
																	"nodeType": "YulTypedName",
																	"src": "18928:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18961:41:12",
															"nodeType": "YulAssignment",
															"src": "18961:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "18990:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "18990:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18972:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "18972:17:12"
																},
																"nativeSrc": "18972:30:12",
																"nodeType": "YulFunctionCall",
																"src": "18972:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "18961:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "18961:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19179:22:12",
																"nodeType": "YulBlock",
																"src": "19179:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19181:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19181:16:12"
																			},
																			"nativeSrc": "19181:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19181:18:12"
																		},
																		"nativeSrc": "19181:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19181:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "19112:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "19112:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "19105:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "19105:6:12"
																				},
																				"nativeSrc": "19105:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19105:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "19135:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "19135:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "19142:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "19142:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "19151:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "19151:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "19138:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "19138:3:12"
																						},
																						"nativeSrc": "19138:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "19138:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "19132:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "19132:2:12"
																				},
																				"nativeSrc": "19132:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "19132:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "19085:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "19085:2:12"
																		},
																		"nativeSrc": "19085:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19085:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19065:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19065:6:12"
																},
																"nativeSrc": "19065:113:12",
																"nodeType": "YulFunctionCall",
																"src": "19065:113:12"
															},
															"nativeSrc": "19062:139:12",
															"nodeType": "YulIf",
															"src": "19062:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "18798:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18829:1:12",
														"nodeType": "YulTypedName",
														"src": "18829:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18832:1:12",
														"nodeType": "YulTypedName",
														"src": "18832:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "18838:7:12",
														"nodeType": "YulTypedName",
														"src": "18838:7:12",
														"type": ""
													}
												],
												"src": "18798:410:12"
											},
											{
												"body": {
													"nativeSrc": "19242:152:12",
													"nodeType": "YulBlock",
													"src": "19242:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19259:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19259:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19262:77:12",
																		"nodeType": "YulLiteral",
																		"src": "19262:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19252:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19252:6:12"
																},
																"nativeSrc": "19252:88:12",
																"nodeType": "YulFunctionCall",
																"src": "19252:88:12"
															},
															"nativeSrc": "19252:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "19252:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19356:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19356:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19359:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19359:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19349:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19349:6:12"
																},
																"nativeSrc": "19349:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19349:15:12"
															},
															"nativeSrc": "19349:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19349:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19380:1:12",
																		"nodeType": "YulLiteral",
																		"src": "19380:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19383:4:12",
																		"nodeType": "YulLiteral",
																		"src": "19383:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19373:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19373:6:12"
																},
																"nativeSrc": "19373:15:12",
																"nodeType": "YulFunctionCall",
																"src": "19373:15:12"
															},
															"nativeSrc": "19373:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "19373:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "19214:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "19214:180:12"
											},
											{
												"body": {
													"nativeSrc": "19442:143:12",
													"nodeType": "YulBlock",
													"src": "19442:143:12",
													"statements": [
														{
															"nativeSrc": "19452:25:12",
															"nodeType": "YulAssignment",
															"src": "19452:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19475:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19475:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19457:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19457:17:12"
																},
																"nativeSrc": "19457:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19457:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19452:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19452:1:12"
																}
															]
														},
														{
															"nativeSrc": "19486:25:12",
															"nodeType": "YulAssignment",
															"src": "19486:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19509:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19509:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19491:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19491:17:12"
																},
																"nativeSrc": "19491:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19491:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19486:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19486:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19533:22:12",
																"nodeType": "YulBlock",
																"src": "19533:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "19535:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19535:16:12"
																			},
																			"nativeSrc": "19535:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19535:18:12"
																		},
																		"nativeSrc": "19535:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19535:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19530:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19530:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19523:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19523:6:12"
																},
																"nativeSrc": "19523:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19523:9:12"
															},
															"nativeSrc": "19520:35:12",
															"nodeType": "YulIf",
															"src": "19520:35:12"
														},
														{
															"nativeSrc": "19565:14:12",
															"nodeType": "YulAssignment",
															"src": "19565:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19574:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19574:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19577:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19577:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "19570:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19570:3:12"
																},
																"nativeSrc": "19570:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19570:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "19565:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19565:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "19400:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19431:1:12",
														"nodeType": "YulTypedName",
														"src": "19431:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19434:1:12",
														"nodeType": "YulTypedName",
														"src": "19434:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "19440:1:12",
														"nodeType": "YulTypedName",
														"src": "19440:1:12",
														"type": ""
													}
												],
												"src": "19400:185:12"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token addresses!\")\n\n    }\n\n    function abi_encode_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid recipient address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid input parameters!\")\n\n    }\n\n    function abi_encode_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not meet the minimum for TokenA!\")\n\n    }\n\n    function abi_encode_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not meet the minimum for TokenB!\")\n\n    }\n\n    function abi_encode_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient TokenA funds!\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient TokenB funds!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deadline reached!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c8063715018a611610095578063a9059cbb11610064578063a9059cbb14610264578063dd62ed3e14610294578063e8e33700146102c4578063f2fde38b146102f6576100fe565b8063715018a6146102145780638456cb591461021e5780638da5cb5b1461022857806395d89b4114610246576100fe565b8063313ce567116100d1578063313ce5671461019e5780633f4ba83a146101bc5780635c975abb146101c657806370a08231146101e4576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f5ffd5b61010a610312565b604051610117919061181f565b60405180910390f35b61013a600480360381019061013591906118d0565b6103a2565b6040516101479190611928565b60405180910390f35b6101586103c4565b6040516101659190611950565b60405180910390f35b61018860048036038101906101839190611969565b6103cd565b6040516101959190611928565b60405180910390f35b6101a66103fb565b6040516101b391906119d4565b60405180910390f35b6101c4610403565b005b6101ce610415565b6040516101db9190611928565b60405180910390f35b6101fe60048036038101906101f991906119ed565b61042a565b60405161020b9190611950565b60405180910390f35b61021c61046f565b005b610226610482565b005b610230610494565b60405161023d9190611a27565b60405180910390f35b61024e6104bd565b60405161025b919061181f565b60405180910390f35b61027e600480360381019061027991906118d0565b61054d565b60405161028b9190611928565b60405180910390f35b6102ae60048036038101906102a99190611a40565b61056f565b6040516102bb9190611950565b60405180910390f35b6102de60048036038101906102d99190611a7e565b6105f1565b6040516102ed93929190611b2f565b60405180910390f35b610310600480360381019061030b91906119ed565b610b65565b005b60606003805461032190611b91565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611b91565b80156103985780601f1061036f57610100808354040283529160200191610398565b820191905f5260205f20905b81548152906001019060200180831161037b57829003601f168201915b5050505050905090565b5f5f6103ac610be9565b90506103b9818585610bf0565b600191505092915050565b5f600254905090565b5f5f6103d7610be9565b90506103e4858285610c02565b6103ef858585610c95565b60019150509392505050565b5f6012905090565b61040b610d85565b610413610e0c565b565b5f60055f9054906101000a900460ff16905090565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610477610d85565b6104805f610e6d565b565b61048a610d85565b610492610f32565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104cc90611b91565b80601f01602080910402602001604051908101604052809291908181526020018280546104f890611b91565b80156105435780601f1061051a57610100808354040283529160200191610543565b820191905f5260205f20905b81548152906001019060200180831161052657829003601f168201915b5050505050905090565b5f5f610557610be9565b9050610564818585610c95565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f5f5f73ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff161415801561065c57505f73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614155b61069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069290611c0b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090611c73565b60405180910390fd5b5f8911158061071857505f8811155b610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e90611cdb565b60405180910390fd5b6107618989610f94565b80935081945050508683116107ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a290611d43565b60405180910390fd5b8582116107ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e490611dab565b60405180910390fd5b828b73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108279190611a27565b602060405180830381865afa158015610842573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108669190611ddd565b10156108a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089e90611e52565b60405180910390fd5b818a73ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016108e19190611a27565b602060405180830381865afa1580156108fc573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109209190611ddd565b1015610961576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095890611eba565b60405180910390fd5b8260065f8282546109729190611f05565b925050819055508160075f82825461098a9190611f05565b925050819055508a73ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016109ce93929190611f38565b6020604051808303815f875af11580156109ea573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a0e9190611f97565b508973ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610a4c93929190611f38565b6020604051808303815f875af1158015610a68573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a8c9190611f97565b50610a978383611017565b90503073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ad4929190611fc2565b6020604051808303815f875af1158015610af0573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b149190611f97565b50428411610b57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4e90612033565b60405180910390fd5b985098509895505050505050565b610b6d610d85565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bdd575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610bd49190611a27565b60405180910390fd5b610be681610e6d565b50565b5f33905090565b610bfd838383600161114a565b505050565b5f610c0d848461056f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610c8f5781811015610c80578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610c7793929190612051565b60405180910390fd5b610c8e84848484035f61114a565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d05575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610cfc9190611a27565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d75575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610d6c9190611a27565b60405180910390fd5b610d80838383611319565b505050565b610d8d610be9565b73ffffffffffffffffffffffffffffffffffffffff16610dab610494565b73ffffffffffffffffffffffffffffffffffffffff1614610e0a57610dce610be9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e019190611a27565b60405180910390fd5b565b610e14611329565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610e56610be9565b604051610e639190611a27565b60405180910390a1565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f3a611369565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f7d610be9565b604051610f8a9190611a27565b60405180910390a1565b5f5f5f600654148015610fa857505f600754145b15610fb857838391509150611010565b5f60065460075486610fca9190612086565b610fd491906120f4565b9050838111610fe95784819250925050611010565b5f60075460065486610ffb9190612086565b61100591906120f4565b905080859350935050505b9250929050565b5f5f3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611062573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906110869190611ddd565b036110a65761109f828461109a9190612086565b6113aa565b9050611144565b3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110ef573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111139190611ddd565b6111376006548561112491906120f4565b6007548561113291906120f4565b611544565b6111419190612086565b90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036111ba575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111b19190611a27565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361122a575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016112219190611a27565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611313578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161130a9190611950565b60405180910390a35b50505050565b61132483838361155a565b505050565b611331610415565b611367576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b611371610415565b156113a8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f600182116113bb5781905061153f565b5f8290505f6001905070010000000000000000000000000000000082106113eb57608082901c9150604081901b90505b68010000000000000000821061140a57604082901c9150602081901b90505b640100000000821061142557602082901c9150601081901b90505b62010000821061143e57601082901c9150600881901b90505b610100821061145657600882901c9150600481901b90505b6010821061146d57600482901c9150600281901b90505b6004821061147d57600181901b90505b600181600302901c90506001818581611499576114986120c7565b5b048201901c905060018185816114b2576114b16120c7565b5b048201901c905060018185816114cb576114ca6120c7565b5b048201901c905060018185816114e4576114e36120c7565b5b048201901c905060018185816114fd576114fc6120c7565b5b048201901c90506001818581611516576115156120c7565b5b048201901c90506115388185816115305761152f6120c7565b5b048211611572565b8103925050505b919050565b5f611552828410848461157d565b905092915050565b611562611369565b61156d838383611596565b505050565b5f8115159050919050565b5f61158784611572565b82841802821890509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115e6578060025f8282546115da9190611f05565b925050819055506116b4565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561166f578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161166693929190612051565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116fb578060025f8282540392505081905550611745565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117a29190611950565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6117f1826117af565b6117fb81856117b9565b935061180b8185602086016117c9565b611814816117d7565b840191505092915050565b5f6020820190508181035f83015261183781846117e7565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61186c82611843565b9050919050565b61187c81611862565b8114611886575f5ffd5b50565b5f8135905061189781611873565b92915050565b5f819050919050565b6118af8161189d565b81146118b9575f5ffd5b50565b5f813590506118ca816118a6565b92915050565b5f5f604083850312156118e6576118e561183f565b5b5f6118f385828601611889565b9250506020611904858286016118bc565b9150509250929050565b5f8115159050919050565b6119228161190e565b82525050565b5f60208201905061193b5f830184611919565b92915050565b61194a8161189d565b82525050565b5f6020820190506119635f830184611941565b92915050565b5f5f5f606084860312156119805761197f61183f565b5b5f61198d86828701611889565b935050602061199e86828701611889565b92505060406119af868287016118bc565b9150509250925092565b5f60ff82169050919050565b6119ce816119b9565b82525050565b5f6020820190506119e75f8301846119c5565b92915050565b5f60208284031215611a0257611a0161183f565b5b5f611a0f84828501611889565b91505092915050565b611a2181611862565b82525050565b5f602082019050611a3a5f830184611a18565b92915050565b5f5f60408385031215611a5657611a5561183f565b5b5f611a6385828601611889565b9250506020611a7485828601611889565b9150509250929050565b5f5f5f5f5f5f5f5f610100898b031215611a9b57611a9a61183f565b5b5f611aa88b828c01611889565b9850506020611ab98b828c01611889565b9750506040611aca8b828c016118bc565b9650506060611adb8b828c016118bc565b9550506080611aec8b828c016118bc565b94505060a0611afd8b828c016118bc565b93505060c0611b0e8b828c01611889565b92505060e0611b1f8b828c016118bc565b9150509295985092959890939650565b5f606082019050611b425f830186611941565b611b4f6020830185611941565b611b5c6040830184611941565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611ba857607f821691505b602082108103611bbb57611bba611b64565b5b50919050565b7f496e76616c696420746f6b656e206164647265737365732100000000000000005f82015250565b5f611bf56018836117b9565b9150611c0082611bc1565b602082019050919050565b5f6020820190508181035f830152611c2281611be9565b9050919050565b7f496e76616c696420726563697069656e742061646472657373000000000000005f82015250565b5f611c5d6019836117b9565b9150611c6882611c29565b602082019050919050565b5f6020820190508181035f830152611c8a81611c51565b9050919050565b7f496e76616c696420696e70757420706172616d657465727321000000000000005f82015250565b5f611cc56019836117b9565b9150611cd082611c91565b602082019050919050565b5f6020820190508181035f830152611cf281611cb9565b9050919050565b7f4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e41215f82015250565b5f611d2d6020836117b9565b9150611d3882611cf9565b602082019050919050565b5f6020820190508181035f830152611d5a81611d21565b9050919050565b7f4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e42215f82015250565b5f611d956020836117b9565b9150611da082611d61565b602082019050919050565b5f6020820190508181035f830152611dc281611d89565b9050919050565b5f81519050611dd7816118a6565b92915050565b5f60208284031215611df257611df161183f565b5b5f611dff84828501611dc9565b91505092915050565b7f496e73756666696369656e7420546f6b656e412066756e6473210000000000005f82015250565b5f611e3c601a836117b9565b9150611e4782611e08565b602082019050919050565b5f6020820190508181035f830152611e6981611e30565b9050919050565b7f496e73756666696369656e7420546f6b656e422066756e6473210000000000005f82015250565b5f611ea4601a836117b9565b9150611eaf82611e70565b602082019050919050565b5f6020820190508181035f830152611ed181611e98565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0f8261189d565b9150611f1a8361189d565b9250828201905080821115611f3257611f31611ed8565b5b92915050565b5f606082019050611f4b5f830186611a18565b611f586020830185611a18565b611f656040830184611941565b949350505050565b611f768161190e565b8114611f80575f5ffd5b50565b5f81519050611f9181611f6d565b92915050565b5f60208284031215611fac57611fab61183f565b5b5f611fb984828501611f83565b91505092915050565b5f604082019050611fd55f830185611a18565b611fe26020830184611941565b9392505050565b7f446561646c696e652072656163686564210000000000000000000000000000005f82015250565b5f61201d6011836117b9565b915061202882611fe9565b602082019050919050565b5f6020820190508181035f83015261204a81612011565b9050919050565b5f6060820190506120645f830186611a18565b6120716020830185611941565b61207e6040830184611941565b949350505050565b5f6120908261189d565b915061209b8361189d565b92508282026120a98161189d565b915082820484148315176120c0576120bf611ed8565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6120fe8261189d565b91506121098361189d565b925082612119576121186120c7565b5b82820490509291505056fea26469706673582212202e0ca18b788c89ee5df0d222059a4b25d8e1684c528d228ad27af9d15554cff764736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xE8E33700 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x246 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1969 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x3FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x403 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CE PUSH2 0x415 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21C PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH2 0x482 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x230 PUSH2 0x494 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0x4BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x181F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x18D0 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x1A7E JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x19ED JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x398 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x398 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3AC PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3B9 DUP2 DUP6 DUP6 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D7 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E4 DUP6 DUP3 DUP6 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x3EF DUP6 DUP6 DUP6 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x40B PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x413 PUSH2 0xE0C JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x477 PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x480 PUSH0 PUSH2 0xE6D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x48A PUSH2 0xD85 JUMP JUMPDEST PUSH2 0x492 PUSH2 0xF32 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4CC SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F8 SWAP1 PUSH2 0x1B91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x543 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x543 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x526 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x557 PUSH2 0xBE9 JUMP JUMPDEST SWAP1 POP PUSH2 0x564 DUP2 DUP6 DUP6 PUSH2 0xC95 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x69B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x692 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x1C73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP10 GT ISZERO DUP1 PUSH2 0x718 JUMPI POP PUSH0 DUP9 GT ISZERO JUMPDEST PUSH2 0x757 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74E SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x761 DUP10 DUP10 PUSH2 0xF94 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP POP POP DUP7 DUP4 GT PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A2 SWAP1 PUSH2 0x1D43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 DUP3 GT PUSH2 0x7ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E4 SWAP1 PUSH2 0x1DAB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x827 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x842 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x866 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP1 PUSH2 0x1E52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8FC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST LT ISZERO PUSH2 0x961 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x958 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x98A SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9EA JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0E SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST POP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA68 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST POP PUSH2 0xA97 DUP4 DUP4 PUSH2 0x1017 JUMP JUMPDEST SWAP1 POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB14 SWAP2 SWAP1 PUSH2 0x1F97 JUMP JUMPDEST POP TIMESTAMP DUP5 GT PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4E SWAP1 PUSH2 0x2033 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP9 POP SWAP9 POP SWAP9 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0xD85 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD4 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0xE6D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBFD DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x114A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC0D DUP5 DUP5 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xC8F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC80 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC77 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x114A JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD05 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFC SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD75 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD80 DUP4 DUP4 DUP4 PUSH2 0x1319 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD8D PUSH2 0xBE9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDAB PUSH2 0x494 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE0A JUMPI PUSH2 0xDCE PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE01 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1329 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xE56 PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF3A PUSH2 0x1369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF7D PUSH2 0xBE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF8A SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x6 SLOAD EQ DUP1 ISZERO PUSH2 0xFA8 JUMPI POP PUSH0 PUSH1 0x7 SLOAD EQ JUMPDEST ISZERO PUSH2 0xFB8 JUMPI DUP4 DUP4 SWAP2 POP SWAP2 POP PUSH2 0x1010 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP7 PUSH2 0xFCA SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0xFD4 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT PUSH2 0xFE9 JUMPI DUP5 DUP2 SWAP3 POP SWAP3 POP POP PUSH2 0x1010 JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0xFFB SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1062 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1086 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST SUB PUSH2 0x10A6 JUMPI PUSH2 0x109F DUP3 DUP5 PUSH2 0x109A SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP PUSH2 0x1144 JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10EF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1113 SWAP2 SWAP1 PUSH2 0x1DDD JUMP JUMPDEST PUSH2 0x1137 PUSH1 0x6 SLOAD DUP6 PUSH2 0x1124 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP6 PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x20F4 JUMP JUMPDEST PUSH2 0x1544 JUMP JUMPDEST PUSH2 0x1141 SWAP2 SWAP1 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x122A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1221 SWAP2 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1313 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x130A SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1324 DUP4 DUP4 DUP4 PUSH2 0x155A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1331 PUSH2 0x415 JUMP JUMPDEST PUSH2 0x1367 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1371 PUSH2 0x415 JUMP JUMPDEST ISZERO PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 GT PUSH2 0x13BB JUMPI DUP2 SWAP1 POP PUSH2 0x153F JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH17 0x100000000000000000000000000000000 DUP3 LT PUSH2 0x13EB JUMPI PUSH1 0x80 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x40 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH9 0x10000000000000000 DUP3 LT PUSH2 0x140A JUMPI PUSH1 0x40 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x20 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP3 LT PUSH2 0x1425 JUMPI PUSH1 0x20 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x10 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH3 0x10000 DUP3 LT PUSH2 0x143E JUMPI PUSH1 0x10 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x8 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH2 0x100 DUP3 LT PUSH2 0x1456 JUMPI PUSH1 0x8 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x4 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x10 DUP3 LT PUSH2 0x146D JUMPI PUSH1 0x4 DUP3 SWAP1 SHR SWAP2 POP PUSH1 0x2 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x4 DUP3 LT PUSH2 0x147D JUMPI PUSH1 0x1 DUP2 SWAP1 SHL SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x3 MUL SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1499 JUMPI PUSH2 0x1498 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14E4 JUMPI PUSH2 0x14E3 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x14FD JUMPI PUSH2 0x14FC PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH1 0x1 DUP2 DUP6 DUP2 PUSH2 0x1516 JUMPI PUSH2 0x1515 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 ADD SWAP1 SHR SWAP1 POP PUSH2 0x1538 DUP2 DUP6 DUP2 PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DIV DUP3 GT PUSH2 0x1572 JUMP JUMPDEST DUP2 SUB SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1552 DUP3 DUP5 LT DUP5 DUP5 PUSH2 0x157D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1562 PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x156D DUP4 DUP4 DUP4 PUSH2 0x1596 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1587 DUP5 PUSH2 0x1572 JUMP JUMPDEST DUP3 DUP5 XOR MUL DUP3 XOR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x15DA SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x16B4 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x166F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1666 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16FB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1745 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17A2 SWAP2 SWAP1 PUSH2 0x1950 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17F1 DUP3 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x17FB DUP2 DUP6 PUSH2 0x17B9 JUMP JUMPDEST SWAP4 POP PUSH2 0x180B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x17C9 JUMP JUMPDEST PUSH2 0x1814 DUP2 PUSH2 0x17D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1837 DUP2 DUP5 PUSH2 0x17E7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x186C DUP3 PUSH2 0x1843 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP2 EQ PUSH2 0x1886 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1897 DUP2 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18AF DUP2 PUSH2 0x189D JUMP JUMPDEST DUP2 EQ PUSH2 0x18B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18CA DUP2 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18E6 JUMPI PUSH2 0x18E5 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x18F3 DUP6 DUP3 DUP7 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1904 DUP6 DUP3 DUP7 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1922 DUP2 PUSH2 0x190E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x193B PUSH0 DUP4 ADD DUP5 PUSH2 0x1919 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0x189D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1963 PUSH0 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1980 JUMPI PUSH2 0x197F PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x198D DUP7 DUP3 DUP8 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x199E DUP7 DUP3 DUP8 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19AF DUP7 DUP3 DUP8 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CE DUP2 PUSH2 0x19B9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x19C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A02 JUMPI PUSH2 0x1A01 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A0F DUP5 DUP3 DUP6 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A21 DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A3A PUSH0 DUP4 ADD DUP5 PUSH2 0x1A18 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A56 JUMPI PUSH2 0x1A55 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A63 DUP6 DUP3 DUP7 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A74 DUP6 DUP3 DUP7 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1A9B JUMPI PUSH2 0x1A9A PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AA8 DUP12 DUP3 DUP13 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1AB9 DUP12 DUP3 DUP13 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1ACA DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1ADB DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x1AEC DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x1AFD DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x1B0E DUP12 DUP3 DUP13 ADD PUSH2 0x1889 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x1B1F DUP12 DUP3 DUP13 ADD PUSH2 0x18BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B42 PUSH0 DUP4 ADD DUP7 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x1B5C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1BA8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BBB JUMPI PUSH2 0x1BBA PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573736573210000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BF5 PUSH1 0x18 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C00 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C22 DUP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C5D PUSH1 0x19 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C68 DUP3 PUSH2 0x1C29 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C8A DUP2 PUSH2 0x1C51 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E70757420706172616D65746572732100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC5 PUSH1 0x19 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CD0 DUP3 PUSH2 0x1C91 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CF2 DUP2 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206D65657420746865206D696E696D756D20666F7220546F6B656E4121 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D2D PUSH1 0x20 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D38 DUP3 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D5A DUP2 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206D65657420746865206D696E696D756D20666F7220546F6B656E4221 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D95 PUSH1 0x20 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DA0 DUP3 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DC2 DUP2 PUSH2 0x1D89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DD7 DUP2 PUSH2 0x18A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DF2 JUMPI PUSH2 0x1DF1 PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1DFF DUP5 DUP3 DUP6 ADD PUSH2 0x1DC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E412066756E647321000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3C PUSH1 0x1A DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E47 DUP3 PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E69 DUP2 PUSH2 0x1E30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420546F6B656E422066756E647321000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1EA4 PUSH1 0x1A DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E70 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ED1 DUP2 PUSH2 0x1E98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1A DUP4 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F4B PUSH0 DUP4 ADD DUP7 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1F58 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1F65 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1F76 DUP2 PUSH2 0x190E JUMP JUMPDEST DUP2 EQ PUSH2 0x1F80 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F91 DUP2 PUSH2 0x1F6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAC JUMPI PUSH2 0x1FAB PUSH2 0x183F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB9 DUP5 DUP3 DUP6 ADD PUSH2 0x1F83 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FD5 PUSH0 DUP4 ADD DUP6 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x1FE2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x446561646C696E65207265616368656421000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x201D PUSH1 0x11 DUP4 PUSH2 0x17B9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2028 DUP3 PUSH2 0x1FE9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x204A DUP2 PUSH2 0x2011 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2064 PUSH0 DUP4 ADD DUP7 PUSH2 0x1A18 JUMP JUMPDEST PUSH2 0x2071 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1941 JUMP JUMPDEST PUSH2 0x207E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1941 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2090 DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x209B DUP4 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20A9 DUP2 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20C0 JUMPI PUSH2 0x20BF PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20FE DUP3 PUSH2 0x189D JUMP JUMPDEST SWAP2 POP PUSH2 0x2109 DUP4 PUSH2 0x189D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2119 JUMPI PUSH2 0x2118 PUSH2 0x20C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0xC LOG1 DUP12 PUSH25 0x8C89EE5DF0D222059A4B25D8E1684C528D228AD27AF9D15554 0xCF 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "396:3205:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4757:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2688:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;696:63:11;;;:::i;:::-;;1726:84:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2985:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;631:59:11;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1962:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3296:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3532:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1303:1392:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1760:89:2;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;4068:13;4084:12;:10;:12::i;:::-;4068:28;;4106:31;4115:5;4122:7;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;:::o;2830:97::-;2882:7;2908:12;;2901:19;;2830:97;:::o;4757:244::-;4844:4;4860:15;4878:12;:10;:12::i;:::-;4860:30;;4900:37;4916:4;4922:7;4931:5;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;4990:4;4983:11;;;4757:244;;;;;:::o;2688:82::-;2737:5;2761:2;2754:9;;2688:82;:::o;696:63:11:-;1531:13:0;:11;:13::i;:::-;742:10:11::1;:8;:10::i;:::-;696:63::o:0;1726:84:8:-;1773:4;1796:7;;;;;;;;;;;1789:14;;1726:84;:::o;2985:116:2:-;3050:7;3076:9;:18;3086:7;3076:18;;;;;;;;;;;;;;;;3069:25;;2985:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;631:59:11:-;1531:13:0;:11;:13::i;:::-;675:8:11::1;:6;:8::i;:::-;631:59::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1962:93:2:-;2009:13;2041:7;2034:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1962:93;:::o;3296:178::-;3365:4;3381:13;3397:12;:10;:12::i;:::-;3381:28;;3419:27;3429:5;3436:2;3440:5;3419:9;:27::i;:::-;3463:4;3456:11;;;3296:178;;;;:::o;3532:140::-;3612:7;3638:11;:18;3650:5;3638:18;;;;;;;;;;;;;;;:27;3657:7;3638:27;;;;;;;;;;;;;;;;3631:34;;3532:140;;;;:::o;1303:1392:11:-;1496:12;1510;1524:14;1611:1;1593:20;;:6;:20;;;;:44;;;;;1635:1;1617:20;;:6;:20;;;;1593:44;1585:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1698:1;1684:16;;:2;:16;;;1676:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:1;1749:14;:19;;:42;;;;1790:1;1772:14;:19;;1749:42;1740:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;1854:57;1880:14;1896;1854:25;:57::i;:::-;1833:78;;;;;;;;1940:10;1930:7;:20;1921:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2016:10;2006:7;:20;1997:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2168:7;2135:6;2129:23;;;2153:10;2129:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;2121:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2263:7;2230:6;2224:23;;;2248:10;2224:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;2216:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2332:7;2320:8;;:19;;;;;;;:::i;:::-;;;;;;;;2361:7;2349:8;;:19;;;;;;;:::i;:::-;;;;;;;;2385:6;2379:26;;;2406:10;2426:4;2433:7;2379:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2457:6;2451:26;;;2478:10;2498:4;2505:7;2451:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2536:41;2560:7;2569;2536:23;:41::i;:::-;2524:53;;2587:4;:13;;;2601:10;2613:9;2587:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2651:15;2640:8;:26;2632:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1303:1392;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8707:128:2:-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;10495:24;10522:25;10532:5;10539:7;10522:9;:25::i;:::-;10495:52;;10580:17;10561:16;:36;10557:309;;;10636:5;10617:16;:24;10613:130;;;10695:7;10704:16;10722:5;10668:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10557:309;10485:387;10396:476;;;:::o;5374:300::-;5473:1;5457:18;;:4;:18;;;5453:86;;5525:1;5498:30;;;;;;;;;;;:::i;:::-;;;;;;;;5453:86;5566:1;5552:16;;:2;:16;;;5548:86;;5620:1;5591:32;;;;;;;;;;;:::i;:::-;;;;;;;;5548:86;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;:::-;5374:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2586:117:8:-;1597:16;:14;:16::i;:::-;2654:5:::1;2644:7;;:15;;;;;;;;;;;;;;;;;;2674:22;2683:12;:10;:12::i;:::-;2674:22;;;;;;:::i;:::-;;;;;;;;2586:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2339:115:8:-;1350:19;:17;:19::i;:::-;2408:4:::1;2398:7;;:14;;;;;;;;;;;;;;;;;;2427:20;2434:12;:10;:12::i;:::-;2427:20;;;;;;:::i;:::-;;;;;;;;2339:115::o:0;2701:577:11:-;2809:12;2823;2863:1;2851:8;;:13;:30;;;;;2880:1;2868:8;;:13;2851:30;2847:100;;;2905:14;2921;2897:39;;;;;;2847:100;2956:19;3008:8;;2996;;2979:14;:25;;;;:::i;:::-;2978:38;;;;:::i;:::-;2956:60;;3048:14;3030;:32;3026:246;;3086:14;3102;3078:39;;;;;;;3026:246;3148:19;3200:8;;3188;;3171:14;:25;;;;:::i;:::-;3170:38;;;;:::i;:::-;3148:60;;3230:14;3246;3222:39;;;;;;2701:577;;;;;;:::o;3284:315::-;3374:7;3418:1;3396:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:23;3393:200;;3442:28;3462:7;3452;:17;;;;:::i;:::-;3442:9;:28::i;:::-;3435:35;;;;3393:200;3563:4;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3508:52;3528:8;;3518:7;:18;;;;:::i;:::-;3550:8;;3540:7;:18;;;;:::i;:::-;3508:8;:52::i;:::-;:73;;;;:::i;:::-;3500:82;;3284:315;;;;;:::o;9682:432:2:-;9811:1;9794:19;;:5;:19;;;9790:89;;9865:1;9836:32;;;;;;;;;;;:::i;:::-;;;;;;;;9790:89;9911:1;9892:21;;:7;:21;;;9888:90;;9964:1;9936:31;;;;;;;;;;;:::i;:::-;;;;;;;;9888:90;10017:5;9987:11;:18;9999:5;9987:18;;;;;;;;;;;;;;;:27;10006:7;9987:27;;;;;;;;;;;;;;;:35;;;;10036:9;10032:76;;;10082:7;10066:31;;10075:5;10066:31;;;10091:5;10066:31;;;;;;:::i;:::-;;;;;;;;10032:76;9682:432;;;;:::o;833:165:11:-;961:30;975:4;981:2;985:5;961:13;:30::i;:::-;833:165;;;:::o;2078:126:8:-;2141:8;:6;:8::i;:::-;2136:62;;2172:15;;;;;;;;;;;;;;2136:62;2078:126::o;1878:128::-;1943:8;:6;:8::i;:::-;1939:61;;;1974:15;;;;;;;;;;;;;;1939:61;1878:128::o;20567:5181:9:-;20615:7;20733:1;20728;:6;20724:53;;20761:1;20754:8;;;;20724:53;21704:10;21717:1;21704:14;;21732:10;21745:1;21732:14;;21772:8;21765:2;:16;21761:92;;21808:3;21801:10;;;;;21836:2;21829:9;;;;;21761:92;21877:7;21870:2;:15;21866:90;;21912:2;21905:9;;;;;21939:2;21932:9;;;;;21866:90;21980:7;21973:2;:15;21969:90;;22015:2;22008:9;;;;;22042:2;22035:9;;;;;21969:90;22083:7;22076:2;:15;22072:89;;22118:2;22111:9;;;;;22145:1;22138:8;;;;;22072:89;22185:6;22178:2;:14;22174:87;;22219:1;22212:8;;;;;22245:1;22238:8;;;;;22174:87;22285:6;22278:2;:14;22274:87;;22319:1;22312:8;;;;;22345:1;22338:8;;;;;22274:87;22385:6;22378:2;:14;22374:61;;22419:1;22412:8;;;;;22374:61;22872:1;22865:2;22861:1;:6;22860:13;;22855:18;;24782:1;24775:2;24771:1;:6;;;;;:::i;:::-;;;24766:2;:11;24765:18;;24760:23;;24891:1;24884:2;24880:1;:6;;;;;:::i;:::-;;;24875:2;:11;24874:18;;24869:23;;25002:1;24995:2;24991:1;:6;;;;;:::i;:::-;;;24986:2;:11;24985:18;;24980:23;;25111:1;25104:2;25100:1;:6;;;;;:::i;:::-;;;25095:2;:11;25094:18;;25089:23;;25221:1;25214:2;25210:1;:6;;;;;:::i;:::-;;;25205:2;:11;25204:18;;25199:23;;25331:1;25324:2;25320:1;:6;;;;;:::i;:::-;;;25315:2;:11;25314:18;;25309:23;;25703:28;25728:2;25724:1;:6;;;;;:::i;:::-;;;25719:2;:11;25703:15;:28::i;:::-;25698:2;:33;25691:40;;;;20567:5181;;;;:::o;5617:111::-;5675:7;5701:20;5713:1;5709;:5;5716:1;5719;5701:7;:20::i;:::-;5694:27;;5617:111;;;;:::o;1113:145:4:-;1350:19:8;:17;:19::i;:::-;1221:30:4::1;1235:4;1241:2;1245:5;1221:13;:30::i;:::-;1113:145:::0;;;:::o;34795::10:-;34842:9;34921:1;34914:9;34907:17;34902:22;;34795:145;;;:::o;5071:294:9:-;5149:7;5321:26;5337:9;5321:15;:26::i;:::-;5316:1;5312;:5;5311:36;5306:1;:42;5299:49;;5071:294;;;;;:::o;5989:1107:2:-;6094:1;6078:18;;:4;:18;;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;;;;;6074:540;;;6266:19;6288:9;:15;6298:4;6288:15;;;;;;;;;;;;;;;;6266:37;;6335:5;6321:11;:19;6317:115;;;6392:4;6398:11;6411:5;6367:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6317:115;6584:5;6570:11;:19;6552:9;:15;6562:4;6552:15;;;;;;;;;;;;;;;:37;;;;6252:362;6074:540;6642:1;6628:16;;:2;:16;;;6624:425;;6807:5;6791:12;;:21;;;;;;;;;;;6624:425;;;7019:5;7002:9;:13;7012:2;7002:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6624:425;7079:2;7064:25;;7073:4;7064:25;;;7083:5;7064:25;;;;;;:::i;:::-;;;;;;;;5989:1107;;;:::o;7:99:12:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:1349::-;6035:6;6043;6051;6059;6067;6075;6083;6091;6140:3;6128:9;6119:7;6115:23;6111:33;6108:120;;;6147:79;;:::i;:::-;6108:120;6267:1;6292:53;6337:7;6328:6;6317:9;6313:22;6292:53;:::i;:::-;6282:63;;6238:117;6394:2;6420:53;6465:7;6456:6;6445:9;6441:22;6420:53;:::i;:::-;6410:63;;6365:118;6522:2;6548:53;6593:7;6584:6;6573:9;6569:22;6548:53;:::i;:::-;6538:63;;6493:118;6650:2;6676:53;6721:7;6712:6;6701:9;6697:22;6676:53;:::i;:::-;6666:63;;6621:118;6778:3;6805:53;6850:7;6841:6;6830:9;6826:22;6805:53;:::i;:::-;6795:63;;6749:119;6907:3;6934:53;6979:7;6970:6;6959:9;6955:22;6934:53;:::i;:::-;6924:63;;6878:119;7036:3;7063:53;7108:7;7099:6;7088:9;7084:22;7063:53;:::i;:::-;7053:63;;7007:119;7165:3;7192:53;7237:7;7228:6;7217:9;7213:22;7192:53;:::i;:::-;7182:63;;7136:119;5913:1349;;;;;;;;;;;:::o;7268:442::-;7417:4;7455:2;7444:9;7440:18;7432:26;;7468:71;7536:1;7525:9;7521:17;7512:6;7468:71;:::i;:::-;7549:72;7617:2;7606:9;7602:18;7593:6;7549:72;:::i;:::-;7631;7699:2;7688:9;7684:18;7675:6;7631:72;:::i;:::-;7268:442;;;;;;:::o;7716:180::-;7764:77;7761:1;7754:88;7861:4;7858:1;7851:15;7885:4;7882:1;7875:15;7902:320;7946:6;7983:1;7977:4;7973:12;7963:22;;8030:1;8024:4;8020:12;8051:18;8041:81;;8107:4;8099:6;8095:17;8085:27;;8041:81;8169:2;8161:6;8158:14;8138:18;8135:38;8132:84;;8188:18;;:::i;:::-;8132:84;7953:269;7902:320;;;:::o;8228:174::-;8368:26;8364:1;8356:6;8352:14;8345:50;8228:174;:::o;8408:366::-;8550:3;8571:67;8635:2;8630:3;8571:67;:::i;:::-;8564:74;;8647:93;8736:3;8647:93;:::i;:::-;8765:2;8760:3;8756:12;8749:19;;8408:366;;;:::o;8780:419::-;8946:4;8984:2;8973:9;8969:18;8961:26;;9033:9;9027:4;9023:20;9019:1;9008:9;9004:17;8997:47;9061:131;9187:4;9061:131;:::i;:::-;9053:139;;8780:419;;;:::o;9205:175::-;9345:27;9341:1;9333:6;9329:14;9322:51;9205:175;:::o;9386:366::-;9528:3;9549:67;9613:2;9608:3;9549:67;:::i;:::-;9542:74;;9625:93;9714:3;9625:93;:::i;:::-;9743:2;9738:3;9734:12;9727:19;;9386:366;;;:::o;9758:419::-;9924:4;9962:2;9951:9;9947:18;9939:26;;10011:9;10005:4;10001:20;9997:1;9986:9;9982:17;9975:47;10039:131;10165:4;10039:131;:::i;:::-;10031:139;;9758:419;;;:::o;10183:175::-;10323:27;10319:1;10311:6;10307:14;10300:51;10183:175;:::o;10364:366::-;10506:3;10527:67;10591:2;10586:3;10527:67;:::i;:::-;10520:74;;10603:93;10692:3;10603:93;:::i;:::-;10721:2;10716:3;10712:12;10705:19;;10364:366;;;:::o;10736:419::-;10902:4;10940:2;10929:9;10925:18;10917:26;;10989:9;10983:4;10979:20;10975:1;10964:9;10960:17;10953:47;11017:131;11143:4;11017:131;:::i;:::-;11009:139;;10736:419;;;:::o;11161:182::-;11301:34;11297:1;11289:6;11285:14;11278:58;11161:182;:::o;11349:366::-;11491:3;11512:67;11576:2;11571:3;11512:67;:::i;:::-;11505:74;;11588:93;11677:3;11588:93;:::i;:::-;11706:2;11701:3;11697:12;11690:19;;11349:366;;;:::o;11721:419::-;11887:4;11925:2;11914:9;11910:18;11902:26;;11974:9;11968:4;11964:20;11960:1;11949:9;11945:17;11938:47;12002:131;12128:4;12002:131;:::i;:::-;11994:139;;11721:419;;;:::o;12146:182::-;12286:34;12282:1;12274:6;12270:14;12263:58;12146:182;:::o;12334:366::-;12476:3;12497:67;12561:2;12556:3;12497:67;:::i;:::-;12490:74;;12573:93;12662:3;12573:93;:::i;:::-;12691:2;12686:3;12682:12;12675:19;;12334:366;;;:::o;12706:419::-;12872:4;12910:2;12899:9;12895:18;12887:26;;12959:9;12953:4;12949:20;12945:1;12934:9;12930:17;12923:47;12987:131;13113:4;12987:131;:::i;:::-;12979:139;;12706:419;;;:::o;13131:143::-;13188:5;13219:6;13213:13;13204:22;;13235:33;13262:5;13235:33;:::i;:::-;13131:143;;;;:::o;13280:351::-;13350:6;13399:2;13387:9;13378:7;13374:23;13370:32;13367:119;;;13405:79;;:::i;:::-;13367:119;13525:1;13550:64;13606:7;13597:6;13586:9;13582:22;13550:64;:::i;:::-;13540:74;;13496:128;13280:351;;;;:::o;13637:176::-;13777:28;13773:1;13765:6;13761:14;13754:52;13637:176;:::o;13819:366::-;13961:3;13982:67;14046:2;14041:3;13982:67;:::i;:::-;13975:74;;14058:93;14147:3;14058:93;:::i;:::-;14176:2;14171:3;14167:12;14160:19;;13819:366;;;:::o;14191:419::-;14357:4;14395:2;14384:9;14380:18;14372:26;;14444:9;14438:4;14434:20;14430:1;14419:9;14415:17;14408:47;14472:131;14598:4;14472:131;:::i;:::-;14464:139;;14191:419;;;:::o;14616:176::-;14756:28;14752:1;14744:6;14740:14;14733:52;14616:176;:::o;14798:366::-;14940:3;14961:67;15025:2;15020:3;14961:67;:::i;:::-;14954:74;;15037:93;15126:3;15037:93;:::i;:::-;15155:2;15150:3;15146:12;15139:19;;14798:366;;;:::o;15170:419::-;15336:4;15374:2;15363:9;15359:18;15351:26;;15423:9;15417:4;15413:20;15409:1;15398:9;15394:17;15387:47;15451:131;15577:4;15451:131;:::i;:::-;15443:139;;15170:419;;;:::o;15595:180::-;15643:77;15640:1;15633:88;15740:4;15737:1;15730:15;15764:4;15761:1;15754:15;15781:191;15821:3;15840:20;15858:1;15840:20;:::i;:::-;15835:25;;15874:20;15892:1;15874:20;:::i;:::-;15869:25;;15917:1;15914;15910:9;15903:16;;15938:3;15935:1;15932:10;15929:36;;;15945:18;;:::i;:::-;15929:36;15781:191;;;;:::o;15978:442::-;16127:4;16165:2;16154:9;16150:18;16142:26;;16178:71;16246:1;16235:9;16231:17;16222:6;16178:71;:::i;:::-;16259:72;16327:2;16316:9;16312:18;16303:6;16259:72;:::i;:::-;16341;16409:2;16398:9;16394:18;16385:6;16341:72;:::i;:::-;15978:442;;;;;;:::o;16426:116::-;16496:21;16511:5;16496:21;:::i;:::-;16489:5;16486:32;16476:60;;16532:1;16529;16522:12;16476:60;16426:116;:::o;16548:137::-;16602:5;16633:6;16627:13;16618:22;;16649:30;16673:5;16649:30;:::i;:::-;16548:137;;;;:::o;16691:345::-;16758:6;16807:2;16795:9;16786:7;16782:23;16778:32;16775:119;;;16813:79;;:::i;:::-;16775:119;16933:1;16958:61;17011:7;17002:6;16991:9;16987:22;16958:61;:::i;:::-;16948:71;;16904:125;16691:345;;;;:::o;17042:332::-;17163:4;17201:2;17190:9;17186:18;17178:26;;17214:71;17282:1;17271:9;17267:17;17258:6;17214:71;:::i;:::-;17295:72;17363:2;17352:9;17348:18;17339:6;17295:72;:::i;:::-;17042:332;;;;;:::o;17380:167::-;17520:19;17516:1;17508:6;17504:14;17497:43;17380:167;:::o;17553:366::-;17695:3;17716:67;17780:2;17775:3;17716:67;:::i;:::-;17709:74;;17792:93;17881:3;17792:93;:::i;:::-;17910:2;17905:3;17901:12;17894:19;;17553:366;;;:::o;17925:419::-;18091:4;18129:2;18118:9;18114:18;18106:26;;18178:9;18172:4;18168:20;18164:1;18153:9;18149:17;18142:47;18206:131;18332:4;18206:131;:::i;:::-;18198:139;;17925:419;;;:::o;18350:442::-;18499:4;18537:2;18526:9;18522:18;18514:26;;18550:71;18618:1;18607:9;18603:17;18594:6;18550:71;:::i;:::-;18631:72;18699:2;18688:9;18684:18;18675:6;18631:72;:::i;:::-;18713;18781:2;18770:9;18766:18;18757:6;18713:72;:::i;:::-;18350:442;;;;;;:::o;18798:410::-;18838:7;18861:20;18879:1;18861:20;:::i;:::-;18856:25;;18895:20;18913:1;18895:20;:::i;:::-;18890:25;;18950:1;18947;18943:9;18972:30;18990:11;18972:30;:::i;:::-;18961:41;;19151:1;19142:7;19138:15;19135:1;19132:22;19112:1;19105:9;19085:83;19062:139;;19181:18;;:::i;:::-;19062:139;18846:362;18798:410;;;;:::o;19214:180::-;19262:77;19259:1;19252:88;19359:4;19356:1;19349:15;19383:4;19380:1;19373:15;19400:185;19440:1;19457:20;19475:1;19457:20;:::i;:::-;19452:25;;19491:20;19509:1;19491:20;:::i;:::-;19486:25;;19530:1;19520:35;;19535:18;;:::i;:::-;19520:35;19577:1;19574;19570:9;19565:14;;19400:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1707600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2917",
								"decimals()": "361",
								"name()": "infinite",
								"owner()": "2633",
								"pause()": "infinite",
								"paused()": "2540",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_update(address,address,uint256)": "infinite",
								"calculateLiquidityAmounts(uint256,uint256)": "infinite",
								"calculateLiquidityToken(uint256,uint256)": "infinite",
								"quote(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 455,
									"end": 564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 455,
									"end": 564,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 455,
									"end": 564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 544,
									"end": 556,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "E"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4C6971756964697479546F6B656E000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 2,
									"value": "4C544B0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 455,
									"end": 564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 12,
									"value": "85"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 12,
									"value": "86"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3483,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3475,
									"end": 3483,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 12,
									"value": "90"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "93"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 12,
									"value": "99"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 12,
									"value": "103"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 12,
									"value": "108"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 12,
									"value": "110"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 12,
									"value": "112"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 12,
									"value": "111"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 12,
									"value": "113"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 12,
									"value": "114"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 12,
									"value": "117"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 12,
									"value": "118"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 12,
									"value": "116"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 12,
									"value": "119"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "120"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 12,
									"value": "122"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 12,
									"value": "124"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 12,
									"value": "123"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 12,
									"value": "115"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 12,
									"value": "128"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 396,
									"end": 3601,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e0ca18b788c89ee5df0d222059a4b25d8e1684c528d228ad27af9d15554cff764736f6c634300081b0033",
									".code": [
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "E8E33700"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 3601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 696,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 696,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 696,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 696,
											"end": 759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 696,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 759,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 631,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 631,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 631,
											"end": 690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 631,
											"end": 690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 631,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 631,
											"end": 690,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1303,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1303,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1303,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4068,
											"end": 4081,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4084,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4084,
											"end": 4096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4084,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4115,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 2889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4860,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4878,
											"end": 4888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4878,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4878,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4860,
											"end": 4890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4922,
											"end": 4929,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4994,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2737,
											"end": 2742,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2754,
											"end": 2763,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 759,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 696,
											"end": 759,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 742,
											"end": 750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 742,
											"end": 752,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 742,
											"end": 752,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1789,
											"end": 1803,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1726,
											"end": 1810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 631,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 631,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 675,
											"end": 683,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 675,
											"end": 681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 675,
											"end": 683,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 675,
											"end": 683,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 675,
											"end": 683,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 631,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3394,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3397,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3397,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 3397,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3381,
											"end": 3409,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3429,
											"end": 3434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3655,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3664,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1496,
											"end": 1508,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1510,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1599,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1617,
											"end": 1637,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 1593,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 1585,
											"end": 1666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1585,
											"end": 1666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1699,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1700,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1684,
											"end": 1700,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1686,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1700,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1684,
											"end": 1700,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1700,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1676,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1676,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1768,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1763,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1768,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1790,
											"end": 1791,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1791,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1791,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1749,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1740,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1740,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1880,
											"end": 1894,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1896,
											"end": 1910,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1854,
											"end": 1911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1854,
											"end": 1911,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1854,
											"end": 1911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1833,
											"end": 1911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1940,
											"end": 1950,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1930,
											"end": 1937,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1930,
											"end": 1950,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1921,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1921,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2006,
											"end": 2013,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2006,
											"end": 2026,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1997,
											"end": 2063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1997,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2135,
											"end": 2141,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2152,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2129,
											"end": 2152,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2152,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 2153,
											"end": 2163,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2129,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2129,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2129,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2175,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 2121,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 2121,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2230,
											"end": 2236,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 2248,
											"end": 2258,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2224,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2224,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 2224,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2216,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 2216,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2332,
											"end": 2339,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2328,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2320,
											"end": 2328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2320,
											"end": 2339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2339,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2361,
											"end": 2368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2357,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2349,
											"end": 2357,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2349,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2385,
											"end": 2391,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2405,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2405,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2405,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 2406,
											"end": 2416,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2440,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2379,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2379,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2441,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2477,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 2478,
											"end": 2488,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2498,
											"end": 2502,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2512,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2451,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2451,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2451,
											"end": 2513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2560,
											"end": 2567,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 2536,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2524,
											"end": 2577,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2524,
											"end": 2577,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2591,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2600,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2600,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2600,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 2601,
											"end": 2611,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2622,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 2587,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2587,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2587,
											"end": 2623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2651,
											"end": 2666,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2648,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2640,
											"end": 2666,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 2632,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 2632,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1303,
											"end": 2695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10532,
											"end": 10537,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10546,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 10522,
											"end": 10547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 10522,
											"end": 10547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10495,
											"end": 10547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10597,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10561,
											"end": 10577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10695,
											"end": 10702,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10704,
											"end": 10720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10722,
											"end": 10727,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 10668,
											"end": 10728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5498,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5566,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5591,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5374,
											"end": 5674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2683,
											"end": 2693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2683,
											"end": 2695,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2674,
											"end": 2696,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "226"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2398,
											"end": 2405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2434,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2434,
											"end": 2446,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2427,
											"end": 2447,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2339,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2864,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 2851,
											"end": 2859,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2868,
											"end": 2876,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2868,
											"end": 2876,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2868,
											"end": 2881,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 2851,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2905,
											"end": 2919,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 2935,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2936,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2936,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2897,
											"end": 2936,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 2847,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 2975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3016,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3008,
											"end": 3016,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3004,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 2996,
											"end": 3004,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 2979,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 2979,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 2978,
											"end": 3016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 2978,
											"end": 3016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 3016,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2956,
											"end": 3016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3048,
											"end": 3062,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3030,
											"end": 3062,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3272,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 3026,
											"end": 3272,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3100,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3102,
											"end": 3116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 3078,
											"end": 3117,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3272,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 3026,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3208,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3200,
											"end": 3208,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3188,
											"end": 3196,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3171,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 3171,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3170,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3170,
											"end": 3208,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3170,
											"end": 3208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3170,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3170,
											"end": 3208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3170,
											"end": 3208,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 3170,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3208,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3148,
											"end": 3208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3230,
											"end": 3244,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3260,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3222,
											"end": 3261,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2701,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3381,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3400,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3412,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3396,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 3396,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3419,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 3393,
											"end": 3593,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3462,
											"end": 3469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3459,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3452,
											"end": 3469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 3442,
											"end": 3470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3442,
											"end": 3470,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 3442,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3435,
											"end": 3470,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3435,
											"end": 3470,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3435,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 3435,
											"end": 3470,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3393,
											"end": 3593,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 3393,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3567,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3579,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3563,
											"end": 3579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3579,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 3563,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3563,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3528,
											"end": 3536,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 3528,
											"end": 3536,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3525,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3518,
											"end": 3536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3518,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3558,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 3550,
											"end": 3558,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3547,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 3540,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3540,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3508,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3560,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 3508,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3508,
											"end": 3581,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3581,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3581,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 3508,
											"end": 3581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3508,
											"end": 3581,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 3508,
											"end": 3581,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3582,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3582,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3284,
											"end": 3599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9811,
											"end": 9812,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 9836,
											"end": 9868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9899,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 9936,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10017,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10004,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10013,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10045,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 10066,
											"end": 10097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 833,
											"end": 998,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 833,
											"end": 998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 961,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 975,
											"end": 979,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 981,
											"end": 983,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 961,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 961,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 961,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 961,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 833,
											"end": 998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 833,
											"end": 998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 833,
											"end": 998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2141,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2141,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2141,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1943,
											"end": 1951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1943,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1878,
											"end": 2006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20615,
											"end": 20622,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20733,
											"end": 20734,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 20728,
											"end": 20729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20728,
											"end": 20734,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 20761,
											"end": 20762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 20754,
											"end": 20762,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 20724,
											"end": 20777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21704,
											"end": 21714,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21717,
											"end": 21718,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21704,
											"end": 21718,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21704,
											"end": 21718,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21732,
											"end": 21742,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21745,
											"end": 21746,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 21732,
											"end": 21746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21732,
											"end": 21746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21772,
											"end": 21780,
											"name": "PUSH",
											"source": 9,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 21765,
											"end": 21767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21765,
											"end": 21781,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21808,
											"end": 21811,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21801,
											"end": 21811,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21836,
											"end": 21838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21829,
											"end": 21838,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 21761,
											"end": 21853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21877,
											"end": 21884,
											"name": "PUSH",
											"source": 9,
											"value": "10000000000000000"
										},
										{
											"begin": 21870,
											"end": 21872,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21870,
											"end": 21885,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21912,
											"end": 21914,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21939,
											"end": 21941,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21932,
											"end": 21941,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 21866,
											"end": 21956,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21980,
											"end": 21987,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 21973,
											"end": 21975,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21973,
											"end": 21988,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22015,
											"end": 22017,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22008,
											"end": 22017,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22042,
											"end": 22044,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22035,
											"end": 22044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 21969,
											"end": 22059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22083,
											"end": 22090,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 22076,
											"end": 22078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22076,
											"end": 22091,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22118,
											"end": 22120,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22111,
											"end": 22120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22145,
											"end": 22146,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22138,
											"end": 22146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 22072,
											"end": 22161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22185,
											"end": 22191,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 22178,
											"end": 22180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22178,
											"end": 22192,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22219,
											"end": 22220,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22212,
											"end": 22220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22245,
											"end": 22246,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22238,
											"end": 22246,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 22174,
											"end": 22261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22285,
											"end": 22291,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 22278,
											"end": 22280,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22278,
											"end": 22292,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22319,
											"end": 22320,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 22312,
											"end": 22320,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22345,
											"end": 22346,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22338,
											"end": 22346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 22274,
											"end": 22361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22385,
											"end": 22391,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 22378,
											"end": 22380,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22378,
											"end": 22392,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 22419,
											"end": 22420,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22412,
											"end": 22420,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 22374,
											"end": 22435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22872,
											"end": 22873,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 22865,
											"end": 22867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22861,
											"end": 22862,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 22861,
											"end": 22867,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 22860,
											"end": 22873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22860,
											"end": 22873,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 22855,
											"end": 22873,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22855,
											"end": 22873,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24782,
											"end": 24783,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 24775,
											"end": 24777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24772,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 24771,
											"end": 24777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24771,
											"end": 24777,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24768,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24766,
											"end": 24777,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24765,
											"end": 24783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24765,
											"end": 24783,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 24760,
											"end": 24783,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24760,
											"end": 24783,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 24891,
											"end": 24892,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 24884,
											"end": 24886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24881,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 24880,
											"end": 24886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24880,
											"end": 24886,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 24875,
											"end": 24877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24875,
											"end": 24886,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24874,
											"end": 24892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24874,
											"end": 24892,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 24869,
											"end": 24892,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24869,
											"end": 24892,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25002,
											"end": 25003,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 24995,
											"end": 24997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24992,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 24991,
											"end": 24997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 24991,
											"end": 24997,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 24986,
											"end": 24988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 24986,
											"end": 24997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 24985,
											"end": 25003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24985,
											"end": 25003,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 24980,
											"end": 25003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 24980,
											"end": 25003,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25111,
											"end": 25112,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 25104,
											"end": 25106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25101,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 25100,
											"end": 25106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25100,
											"end": 25106,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 25095,
											"end": 25097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25095,
											"end": 25106,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25094,
											"end": 25112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25094,
											"end": 25112,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 25089,
											"end": 25112,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25089,
											"end": 25112,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25221,
											"end": 25222,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 25214,
											"end": 25216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25211,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 25210,
											"end": 25216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 25205,
											"end": 25207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25205,
											"end": 25216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25204,
											"end": 25222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25204,
											"end": 25222,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 25199,
											"end": 25222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25199,
											"end": 25222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25331,
											"end": 25332,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 25324,
											"end": 25326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25321,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 25320,
											"end": 25326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25320,
											"end": 25326,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 25315,
											"end": 25317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25315,
											"end": 25326,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 25314,
											"end": 25332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25314,
											"end": 25332,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 25309,
											"end": 25332,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 25309,
											"end": 25332,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25703,
											"end": 25731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 25728,
											"end": 25730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25725,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 25724,
											"end": 25730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25724,
											"end": 25730,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 25719,
											"end": 25721,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 25719,
											"end": 25730,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 25703,
											"end": 25718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 25703,
											"end": 25731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 25703,
											"end": 25731,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 25703,
											"end": 25731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 25698,
											"end": 25700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 25698,
											"end": 25731,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 25691,
											"end": 25731,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20567,
											"end": 25748,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20567,
											"end": 25748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5675,
											"end": 5682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5713,
											"end": 5714,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5710,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5714,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5717,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5719,
											"end": 5720,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5701,
											"end": 5721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5701,
											"end": 5721,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5728,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5617,
											"end": 5728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1235,
											"end": 1239,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1241,
											"end": 1243,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1250,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 1221,
											"end": 1251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 1221,
											"end": 1251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1113,
											"end": 1258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 34842,
											"end": 34851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 34921,
											"end": 34922,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 34914,
											"end": 34923,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 34907,
											"end": 34924,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34902,
											"end": 34924,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 34795,
											"end": 34940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 34795,
											"end": 34940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5321,
											"end": 5347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5321,
											"end": 5347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5313,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5317,
											"name": "XOR",
											"source": 9
										},
										{
											"begin": 5311,
											"end": 5347,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5306,
											"end": 5307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5306,
											"end": 5348,
											"name": "XOR",
											"source": 9
										},
										{
											"begin": 5299,
											"end": 5348,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5299,
											"end": 5348,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5365,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5071,
											"end": 5365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6266,
											"end": 6303,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6409,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6416,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6367,
											"end": 6417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6584,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6566,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6630,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6807,
											"end": 6812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7019,
											"end": 7024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 7064,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6035,
											"end": 6041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6075,
											"end": 6081,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6089,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6097,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6140,
											"end": 6143,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 6119,
											"end": 6126,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6138,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6111,
											"end": 6144,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6228,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6228,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6108,
											"end": 6228,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 6147,
											"end": 6226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6147,
											"end": 6226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6108,
											"end": 6228,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 6108,
											"end": 6228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6337,
											"end": 6344,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 6313,
											"end": 6335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6292,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6292,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 6282,
											"end": 6345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6394,
											"end": 6396,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6420,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6465,
											"end": 6472,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6456,
											"end": 6462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6445,
											"end": 6454,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 6441,
											"end": 6463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6420,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 6420,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6420,
											"end": 6473,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6420,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6410,
											"end": 6473,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 6410,
											"end": 6473,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6365,
											"end": 6483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6522,
											"end": 6524,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 6569,
											"end": 6591,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6548,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6548,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6601,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 6538,
											"end": 6601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6493,
											"end": 6611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6650,
											"end": 6652,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6676,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6712,
											"end": 6718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 6697,
											"end": 6719,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6676,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6676,
											"end": 6729,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6676,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6729,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6666,
											"end": 6729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6621,
											"end": 6739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6778,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6841,
											"end": 6847,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6805,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6858,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6749,
											"end": 6868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6907,
											"end": 6910,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 6934,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6979,
											"end": 6986,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6959,
											"end": 6968,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 6955,
											"end": 6977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 6934,
											"end": 6987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6934,
											"end": 6987,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 6934,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6924,
											"end": 6987,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6924,
											"end": 6987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7036,
											"end": 7039,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 7063,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7108,
											"end": 7115,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 7099,
											"end": 7105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7088,
											"end": 7097,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7106,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 7063,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7116,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 7063,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7116,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7053,
											"end": 7116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7007,
											"end": 7126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7165,
											"end": 7168,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7192,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7237,
											"end": 7244,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7217,
											"end": 7226,
											"name": "DUP13",
											"source": 12
										},
										{
											"begin": 7213,
											"end": 7235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 7192,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7192,
											"end": 7245,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7192,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7182,
											"end": 7245,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7182,
											"end": 7245,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7136,
											"end": 7255,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5913,
											"end": 7262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7417,
											"end": 7421,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7444,
											"end": 7453,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7432,
											"end": 7458,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7432,
											"end": 7458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7536,
											"end": 7537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7525,
											"end": 7534,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7518,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7468,
											"end": 7539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7539,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7468,
											"end": 7539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7602,
											"end": 7620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7593,
											"end": 7599,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7549,
											"end": 7621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7549,
											"end": 7621,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 7549,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7699,
											"end": 7701,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7688,
											"end": 7697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7684,
											"end": 7702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7675,
											"end": 7681,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 7631,
											"end": 7703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7703,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 7631,
											"end": 7703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7268,
											"end": 7710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7896,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 7716,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7764,
											"end": 7841,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7754,
											"end": 7842,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7861,
											"end": 7865,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 7858,
											"end": 7859,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7866,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7889,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7882,
											"end": 7883,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7875,
											"end": 7890,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7902,
											"end": 8222,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 7902,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7946,
											"end": 7952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7977,
											"end": 7981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7973,
											"end": 7985,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7963,
											"end": 7985,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8030,
											"end": 8031,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8024,
											"end": 8028,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8020,
											"end": 8032,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8051,
											"end": 8069,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8041,
											"end": 8122,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8107,
											"end": 8111,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 8099,
											"end": 8105,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8095,
											"end": 8112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8041,
											"end": 8122,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 8041,
											"end": 8122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8169,
											"end": 8171,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8167,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8158,
											"end": 8172,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8138,
											"end": 8156,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8135,
											"end": 8173,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8132,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 8132,
											"end": 8216,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 8188,
											"end": 8206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 8188,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8132,
											"end": 8216,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 8132,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7953,
											"end": 8222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7902,
											"end": 8222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7902,
											"end": 8222,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7902,
											"end": 8222,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7902,
											"end": 8222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8402,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8228,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8368,
											"end": 8394,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420746F6B656E20616464726573736573210000000000000000"
										},
										{
											"begin": 8364,
											"end": 8365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8352,
											"end": 8366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8345,
											"end": 8395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8402,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8228,
											"end": 8402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8774,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 8408,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8571,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8635,
											"end": 8637,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 8630,
											"end": 8633,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8571,
											"end": 8638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 8571,
											"end": 8638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8571,
											"end": 8638,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 8571,
											"end": 8638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8564,
											"end": 8638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8564,
											"end": 8638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8647,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8736,
											"end": 8739,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8647,
											"end": 8740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 8647,
											"end": 8740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8647,
											"end": 8740,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 8647,
											"end": 8740,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8760,
											"end": 8763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8756,
											"end": 8768,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8768,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8768,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8774,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8774,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8408,
											"end": 8774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 9199,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 8780,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8973,
											"end": 8982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8969,
											"end": 8987,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8987,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8987,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9033,
											"end": 9042,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9027,
											"end": 9031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9023,
											"end": 9043,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9020,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9017,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9004,
											"end": 9021,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8997,
											"end": 9044,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9187,
											"end": 9191,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9061,
											"end": 9192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9061,
											"end": 9192,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 9061,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9053,
											"end": 9192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9053,
											"end": 9192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 9199,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 9199,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 9199,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8780,
											"end": 9199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9380,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9205,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9345,
											"end": 9372,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420726563697069656E74206164647265737300000000000000"
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9329,
											"end": 9343,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9322,
											"end": 9373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9205,
											"end": 9380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9752,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 9386,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9528,
											"end": 9531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 9613,
											"end": 9615,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 9608,
											"end": 9611,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 9549,
											"end": 9616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9616,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 9549,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9542,
											"end": 9616,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9542,
											"end": 9616,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 9714,
											"end": 9717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 9625,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9625,
											"end": 9718,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 9625,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9743,
											"end": 9745,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9734,
											"end": 9746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9746,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9746,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9758,
											"end": 10177,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 9758,
											"end": 10177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9928,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9947,
											"end": 9965,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9939,
											"end": 9965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9939,
											"end": 9965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10011,
											"end": 10020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10005,
											"end": 10009,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10021,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9997,
											"end": 9998,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9995,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9982,
											"end": 9999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9975,
											"end": 10022,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10039,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 10165,
											"end": 10169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10039,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 10039,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10039,
											"end": 10170,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 10039,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10031,
											"end": 10170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10031,
											"end": 10170,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9758,
											"end": 10177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9758,
											"end": 10177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9758,
											"end": 10177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9758,
											"end": 10177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10183,
											"end": 10358,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10183,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10323,
											"end": 10350,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420696E70757420706172616D65746572732100000000000000"
										},
										{
											"begin": 10319,
											"end": 10320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10307,
											"end": 10321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10351,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10183,
											"end": 10358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10183,
											"end": 10358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10506,
											"end": 10509,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10591,
											"end": 10593,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 10586,
											"end": 10589,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 10527,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 10527,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10594,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10520,
											"end": 10594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 10692,
											"end": 10695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10603,
											"end": 10696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 10603,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10723,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10716,
											"end": 10719,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10712,
											"end": 10724,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10705,
											"end": 10724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10705,
											"end": 10724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10902,
											"end": 10906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10942,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 10943,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10917,
											"end": 10943,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10917,
											"end": 10943,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10989,
											"end": 10998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 10987,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10979,
											"end": 10999,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10975,
											"end": 10976,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 10973,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10960,
											"end": 10977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10953,
											"end": 11000,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 11143,
											"end": 11147,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 11017,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 11017,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11009,
											"end": 11148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11009,
											"end": 11148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 11155,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 11155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11343,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11161,
											"end": 11343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11301,
											"end": 11335,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F74206D65657420746865206D696E696D756D20666F7220546F6B656E4121"
										},
										{
											"begin": 11297,
											"end": 11298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11285,
											"end": 11299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11336,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11343,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11161,
											"end": 11343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11349,
											"end": 11715,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 11349,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11491,
											"end": 11494,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11512,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 11576,
											"end": 11578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11571,
											"end": 11574,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11512,
											"end": 11579,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 11512,
											"end": 11579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11512,
											"end": 11579,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 11512,
											"end": 11579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11505,
											"end": 11579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11588,
											"end": 11681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 11677,
											"end": 11680,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11588,
											"end": 11681,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 11588,
											"end": 11681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11588,
											"end": 11681,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 11588,
											"end": 11681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11706,
											"end": 11708,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11701,
											"end": 11704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11697,
											"end": 11709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11690,
											"end": 11709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11690,
											"end": 11709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11349,
											"end": 11715,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11349,
											"end": 11715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11349,
											"end": 11715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11349,
											"end": 11715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12140,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 11721,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11887,
											"end": 11891,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11925,
											"end": 11927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11923,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11902,
											"end": 11928,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11902,
											"end": 11928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 11983,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11968,
											"end": 11972,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11964,
											"end": 11984,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11960,
											"end": 11961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11949,
											"end": 11958,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11945,
											"end": 11962,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12002,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 12128,
											"end": 12132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12002,
											"end": 12133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 12002,
											"end": 12133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12002,
											"end": 12133,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 12002,
											"end": 12133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11994,
											"end": 12133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11994,
											"end": 12133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11721,
											"end": 12140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12328,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12146,
											"end": 12328,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12320,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F74206D65657420746865206D696E696D756D20666F7220546F6B656E4221"
										},
										{
											"begin": 12282,
											"end": 12283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12270,
											"end": 12284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12263,
											"end": 12321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12328,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12146,
											"end": 12328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12700,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12334,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12476,
											"end": 12479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12497,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 12561,
											"end": 12563,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12556,
											"end": 12559,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12497,
											"end": 12564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 12497,
											"end": 12564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12497,
											"end": 12564,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 12497,
											"end": 12564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12573,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 12662,
											"end": 12665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12573,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 12573,
											"end": 12666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12573,
											"end": 12666,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 12573,
											"end": 12666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12691,
											"end": 12693,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12686,
											"end": 12689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12682,
											"end": 12694,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 12694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12675,
											"end": 12694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12700,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12700,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12334,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13125,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 12706,
											"end": 13125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12872,
											"end": 12876,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12910,
											"end": 12912,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12899,
											"end": 12908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12895,
											"end": 12913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 12913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 12913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 12968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12953,
											"end": 12957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12949,
											"end": 12969,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12945,
											"end": 12946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12943,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12930,
											"end": 12947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12923,
											"end": 12970,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 13113,
											"end": 13117,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12987,
											"end": 13118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13118,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 12987,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12979,
											"end": 13118,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12979,
											"end": 13118,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13125,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12706,
											"end": 13125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13274,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 13131,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13188,
											"end": 13193,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13219,
											"end": 13225,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13213,
											"end": 13226,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13204,
											"end": 13226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13235,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 13262,
											"end": 13267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13235,
											"end": 13268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 13235,
											"end": 13268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13235,
											"end": 13268,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 13235,
											"end": 13268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13274,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13131,
											"end": 13274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13631,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 13280,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13350,
											"end": 13356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13399,
											"end": 13401,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13387,
											"end": 13396,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13378,
											"end": 13385,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13374,
											"end": 13397,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13370,
											"end": 13402,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 13367,
											"end": 13486,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13367,
											"end": 13486,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 13367,
											"end": 13486,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13405,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 13405,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 13405,
											"end": 13484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13405,
											"end": 13484,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 13405,
											"end": 13484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13367,
											"end": 13486,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 13367,
											"end": 13486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13525,
											"end": 13526,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13550,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 13606,
											"end": 13613,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13597,
											"end": 13603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13586,
											"end": 13595,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13550,
											"end": 13614,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 13550,
											"end": 13614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13550,
											"end": 13614,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 13550,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13614,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13540,
											"end": 13614,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13496,
											"end": 13624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13631,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13280,
											"end": 13631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 13813,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 13637,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13777,
											"end": 13805,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E7420546F6B656E412066756E647321000000000000"
										},
										{
											"begin": 13773,
											"end": 13774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13765,
											"end": 13771,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13761,
											"end": 13775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13754,
											"end": 13806,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 13813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 13813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13819,
											"end": 14185,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 13819,
											"end": 14185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13961,
											"end": 13964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 14046,
											"end": 14048,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 14041,
											"end": 14044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13982,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 13982,
											"end": 14049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13982,
											"end": 14049,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 13982,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13975,
											"end": 14049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13975,
											"end": 14049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 14147,
											"end": 14150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14151,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 14058,
											"end": 14151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14058,
											"end": 14151,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 14058,
											"end": 14151,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14176,
											"end": 14178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14171,
											"end": 14174,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14167,
											"end": 14179,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14179,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14160,
											"end": 14179,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13819,
											"end": 14185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13819,
											"end": 14185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13819,
											"end": 14185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13819,
											"end": 14185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14191,
											"end": 14610,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 14191,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14357,
											"end": 14361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14397,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14384,
											"end": 14393,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14380,
											"end": 14398,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14372,
											"end": 14398,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14372,
											"end": 14398,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14444,
											"end": 14453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14438,
											"end": 14442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14434,
											"end": 14454,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14430,
											"end": 14431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14419,
											"end": 14428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14415,
											"end": 14432,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14408,
											"end": 14455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14472,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 14598,
											"end": 14602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14472,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 14472,
											"end": 14603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14472,
											"end": 14603,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 14472,
											"end": 14603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14464,
											"end": 14603,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14464,
											"end": 14603,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14191,
											"end": 14610,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14191,
											"end": 14610,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14191,
											"end": 14610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14191,
											"end": 14610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14616,
											"end": 14792,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 14616,
											"end": 14792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14756,
											"end": 14784,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E7420546F6B656E422066756E647321000000000000"
										},
										{
											"begin": 14752,
											"end": 14753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14744,
											"end": 14750,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14733,
											"end": 14785,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14616,
											"end": 14792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14616,
											"end": 14792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 15164,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 14798,
											"end": 15164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14940,
											"end": 14943,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14961,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 15025,
											"end": 15027,
											"name": "PUSH",
											"source": 12,
											"value": "1A"
										},
										{
											"begin": 15020,
											"end": 15023,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14961,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 14961,
											"end": 15028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14961,
											"end": 15028,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 14961,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14954,
											"end": 15028,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14954,
											"end": 15028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 15126,
											"end": 15129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 15037,
											"end": 15130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15037,
											"end": 15130,
											"name": "tag",
											"source": 12,
											"value": "498"
										},
										{
											"begin": 15037,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15155,
											"end": 15157,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15150,
											"end": 15153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15146,
											"end": 15158,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15139,
											"end": 15158,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15139,
											"end": 15158,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 15164,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 15164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 15164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14798,
											"end": 15164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15589,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 15170,
											"end": 15589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15336,
											"end": 15340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15374,
											"end": 15376,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15363,
											"end": 15372,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15359,
											"end": 15377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15351,
											"end": 15377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15423,
											"end": 15432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15417,
											"end": 15421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15413,
											"end": 15433,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15409,
											"end": 15410,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15398,
											"end": 15407,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15394,
											"end": 15411,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15387,
											"end": 15434,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15451,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 15577,
											"end": 15581,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15451,
											"end": 15582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 15451,
											"end": 15582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15451,
											"end": 15582,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 15451,
											"end": 15582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15443,
											"end": 15582,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15443,
											"end": 15582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15595,
											"end": 15775,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 15595,
											"end": 15775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15643,
											"end": 15720,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15640,
											"end": 15641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15633,
											"end": 15721,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15737,
											"end": 15738,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15730,
											"end": 15745,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15764,
											"end": 15768,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15761,
											"end": 15762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15754,
											"end": 15769,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15972,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 15781,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15821,
											"end": 15824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15840,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 15858,
											"end": 15859,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15840,
											"end": 15860,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 15840,
											"end": 15860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15840,
											"end": 15860,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 15840,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15835,
											"end": 15860,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15835,
											"end": 15860,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 15892,
											"end": 15893,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 15874,
											"end": 15894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15874,
											"end": 15894,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 15874,
											"end": 15894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15869,
											"end": 15894,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15869,
											"end": 15894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15917,
											"end": 15918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15910,
											"end": 15919,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15903,
											"end": 15919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15903,
											"end": 15919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15938,
											"end": 15941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15935,
											"end": 15936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15932,
											"end": 15942,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15929,
											"end": 15965,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15929,
											"end": 15965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 15929,
											"end": 15965,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15945,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 15945,
											"end": 15963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 15945,
											"end": 15963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15945,
											"end": 15963,
											"name": "tag",
											"source": 12,
											"value": "506"
										},
										{
											"begin": 15945,
											"end": 15963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15929,
											"end": 15965,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 15929,
											"end": 15965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15972,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15972,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15972,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15781,
											"end": 15972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16127,
											"end": 16131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16165,
											"end": 16167,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16154,
											"end": 16163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16150,
											"end": 16168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16142,
											"end": 16168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 16246,
											"end": 16247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16235,
											"end": 16244,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16231,
											"end": 16248,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16222,
											"end": 16228,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 16178,
											"end": 16249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 16178,
											"end": 16249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 16327,
											"end": 16329,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16316,
											"end": 16325,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16312,
											"end": 16330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16303,
											"end": 16309,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 16259,
											"end": 16331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 16259,
											"end": 16331,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16341,
											"end": 16413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 16409,
											"end": 16411,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16398,
											"end": 16407,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16394,
											"end": 16412,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16385,
											"end": 16391,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16341,
											"end": 16413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 16341,
											"end": 16413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16341,
											"end": 16413,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 16341,
											"end": 16413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15978,
											"end": 16420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16426,
											"end": 16542,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 16426,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 16511,
											"end": 16516,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 16496,
											"end": 16517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16496,
											"end": 16517,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 16496,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16489,
											"end": 16494,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16486,
											"end": 16518,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 16476,
											"end": 16536,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 16476,
											"end": 16536,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16532,
											"end": 16533,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16529,
											"end": 16530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16522,
											"end": 16534,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16476,
											"end": 16536,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 16476,
											"end": 16536,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16426,
											"end": 16542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16426,
											"end": 16542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16685,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 16548,
											"end": 16685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16602,
											"end": 16607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16633,
											"end": 16639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16627,
											"end": 16640,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16618,
											"end": 16640,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16618,
											"end": 16640,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16649,
											"end": 16679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 16673,
											"end": 16678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16649,
											"end": 16679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 16649,
											"end": 16679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16649,
											"end": 16679,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 16649,
											"end": 16679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16685,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16548,
											"end": 16685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 17036,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 16691,
											"end": 17036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16758,
											"end": 16764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16807,
											"end": 16809,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16795,
											"end": 16804,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16786,
											"end": 16793,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16782,
											"end": 16805,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16778,
											"end": 16810,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 16775,
											"end": 16894,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16775,
											"end": 16894,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 16775,
											"end": 16894,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 16813,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 16813,
											"end": 16892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16813,
											"end": 16892,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 16813,
											"end": 16892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16775,
											"end": 16894,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 16775,
											"end": 16894,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16933,
											"end": 16934,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16958,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 17011,
											"end": 17018,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17002,
											"end": 17008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16991,
											"end": 17000,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16987,
											"end": 17009,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16958,
											"end": 17019,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 16958,
											"end": 17019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16958,
											"end": 17019,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 16958,
											"end": 17019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16948,
											"end": 17019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16904,
											"end": 17029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 17036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 17036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 17036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 17036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16691,
											"end": 17036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17163,
											"end": 17167,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17201,
											"end": 17203,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17190,
											"end": 17199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17186,
											"end": 17204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17204,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17178,
											"end": 17204,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 17282,
											"end": 17283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17271,
											"end": 17280,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17267,
											"end": 17284,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17258,
											"end": 17264,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 17214,
											"end": 17285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17214,
											"end": 17285,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 17214,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 17363,
											"end": 17365,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17352,
											"end": 17361,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17348,
											"end": 17366,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17339,
											"end": 17345,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 17295,
											"end": 17367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17367,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 17295,
											"end": 17367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17042,
											"end": 17374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17380,
											"end": 17547,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 17380,
											"end": 17547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17520,
											"end": 17539,
											"name": "PUSH",
											"source": 12,
											"value": "446561646C696E65207265616368656421000000000000000000000000000000"
										},
										{
											"begin": 17516,
											"end": 17517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17508,
											"end": 17514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17504,
											"end": 17518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17497,
											"end": 17540,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17380,
											"end": 17547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17380,
											"end": 17547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17553,
											"end": 17919,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 17553,
											"end": 17919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17695,
											"end": 17698,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17716,
											"end": 17783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 17780,
											"end": 17782,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 17775,
											"end": 17778,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 17783,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 17716,
											"end": 17783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17716,
											"end": 17783,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 17716,
											"end": 17783,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17709,
											"end": 17783,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17709,
											"end": 17783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17792,
											"end": 17885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 17881,
											"end": 17884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17792,
											"end": 17885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 17792,
											"end": 17885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17792,
											"end": 17885,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 17792,
											"end": 17885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17910,
											"end": 17912,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17905,
											"end": 17908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17901,
											"end": 17913,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 17913,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17894,
											"end": 17913,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17553,
											"end": 17919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17553,
											"end": 17919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17553,
											"end": 17919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17553,
											"end": 17919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18344,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 17925,
											"end": 18344,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18091,
											"end": 18095,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18129,
											"end": 18131,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18118,
											"end": 18127,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18114,
											"end": 18132,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18106,
											"end": 18132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18106,
											"end": 18132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18178,
											"end": 18187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18172,
											"end": 18176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18168,
											"end": 18188,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18164,
											"end": 18165,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18153,
											"end": 18162,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18149,
											"end": 18166,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18142,
											"end": 18189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18332,
											"end": 18336,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 18206,
											"end": 18337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18206,
											"end": 18337,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 18206,
											"end": 18337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18344,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18344,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18344,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17925,
											"end": 18344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18499,
											"end": 18503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18537,
											"end": 18539,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18526,
											"end": 18535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18522,
											"end": 18540,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18514,
											"end": 18540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18514,
											"end": 18540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18550,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 18618,
											"end": 18619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18607,
											"end": 18616,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18603,
											"end": 18620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18594,
											"end": 18600,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18550,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 18550,
											"end": 18621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18550,
											"end": 18621,
											"name": "tag",
											"source": 12,
											"value": "530"
										},
										{
											"begin": 18550,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18631,
											"end": 18703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 18699,
											"end": 18701,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18688,
											"end": 18697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18684,
											"end": 18702,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18675,
											"end": 18681,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18631,
											"end": 18703,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 18631,
											"end": 18703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18631,
											"end": 18703,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 18631,
											"end": 18703,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18713,
											"end": 18785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 18781,
											"end": 18783,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18770,
											"end": 18779,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18766,
											"end": 18784,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18757,
											"end": 18763,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18713,
											"end": 18785,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 18713,
											"end": 18785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18713,
											"end": 18785,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 18713,
											"end": 18785,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18350,
											"end": 18792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18798,
											"end": 19208,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 18798,
											"end": 19208,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18838,
											"end": 18845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18861,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 18879,
											"end": 18880,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 18861,
											"end": 18881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18861,
											"end": 18881,
											"name": "tag",
											"source": 12,
											"value": "534"
										},
										{
											"begin": 18861,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18856,
											"end": 18881,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18856,
											"end": 18881,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18895,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 18913,
											"end": 18914,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18895,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 18895,
											"end": 18915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18895,
											"end": 18915,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 18895,
											"end": 18915,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18890,
											"end": 18915,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18890,
											"end": 18915,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18950,
											"end": 18951,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18947,
											"end": 18948,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18943,
											"end": 18952,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 18972,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 18990,
											"end": 19001,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18972,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 18972,
											"end": 19002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18972,
											"end": 19002,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 18972,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18961,
											"end": 19002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18961,
											"end": 19002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19151,
											"end": 19152,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19142,
											"end": 19149,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19138,
											"end": 19153,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19135,
											"end": 19136,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19132,
											"end": 19154,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 19112,
											"end": 19113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19105,
											"end": 19114,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19085,
											"end": 19168,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 19062,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19062,
											"end": 19201,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19181,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19181,
											"end": 19199,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 19181,
											"end": 19199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19181,
											"end": 19199,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 19181,
											"end": 19199,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19062,
											"end": 19201,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 19062,
											"end": 19201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18846,
											"end": 19208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18798,
											"end": 19208,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18798,
											"end": 19208,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18798,
											"end": 19208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18798,
											"end": 19208,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18798,
											"end": 19208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19214,
											"end": 19394,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 19214,
											"end": 19394,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19262,
											"end": 19339,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19259,
											"end": 19260,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19340,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19363,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 19356,
											"end": 19357,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 19349,
											"end": 19364,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19383,
											"end": 19387,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 19380,
											"end": 19381,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19373,
											"end": 19388,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19585,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 19400,
											"end": 19585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19440,
											"end": 19441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19457,
											"end": 19477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 19475,
											"end": 19476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19457,
											"end": 19477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 19457,
											"end": 19477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19457,
											"end": 19477,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 19457,
											"end": 19477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19452,
											"end": 19477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19452,
											"end": 19477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19491,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 19509,
											"end": 19510,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19491,
											"end": 19511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 19491,
											"end": 19511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19491,
											"end": 19511,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 19491,
											"end": 19511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19486,
											"end": 19511,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19486,
											"end": 19511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19530,
											"end": 19531,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19520,
											"end": 19555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 19520,
											"end": 19555,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 19535,
											"end": 19553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19520,
											"end": 19555,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 19520,
											"end": 19555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19577,
											"end": 19578,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19574,
											"end": 19575,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19570,
											"end": 19579,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 19565,
											"end": 19579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19565,
											"end": 19579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19585,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19400,
											"end": 19585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Panic.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SafeCast.sol",
								"contracts/tp3/SimpleSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tp3/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0x756aee61d83960d324973de3a64920a02b480efe662b611fb05ea506d844aa55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb71ab2f5fcc530226a25bba4d808f4d22a7f383cae4a3be3629ec057b276c\",\"dweb:/ipfs/QmRzyetUjbr9Gx1pcXYSsE5rz4XypfEbZgmBvZKUNUJQLR\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/tp3/SimpleSwap.sol\":{\"keccak256\":\"0x5da34d9e749eae67285dda09febc3fea1abe4f061380aa08e8ec1647536b1bc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9da4bcde0a376ca1f4370adb1896d21f44911d357c4c96f4277673f81a30152\",\"dweb:/ipfs/QmfFL5m9j4wiwh3KDg7C3oj2QS2d5qfEoQBNPDrudNup3J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1028,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 4543,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "reserveA",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 4545,
								"contract": "contracts/tp3/SimpleSwap.sol:SimpleSwap",
								"label": "reserveB",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/tp3/SimpleSwap.sol:40:34:\n   |\n40 |     function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB){\n   |                                  ^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/tp3/SimpleSwap.sol:17:5:\n   |\n17 |     uint256 private reserveA;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 594,
						"file": "contracts/tp3/SimpleSwap.sol",
						"message": "The shadowed declaration is here:",
						"start": 570
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1174,
					"file": "contracts/tp3/SimpleSwap.sol",
					"start": 1161
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> contracts/tp3/SimpleSwap.sol:40:49:\n   |\n40 |     function quote(uint amountA, uint reserveA, uint reserveB) internal pure returns (uint amountB){\n   |                                                 ^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> contracts/tp3/SimpleSwap.sol:18:5:\n   |\n18 |     uint256 private reserveB;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 624,
						"file": "contracts/tp3/SimpleSwap.sol",
						"message": "The shadowed declaration is here:",
						"start": 600
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1189,
					"file": "contracts/tp3/SimpleSwap.sol",
					"start": 1176
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 968,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								967
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 949,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							937
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 938,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 937,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 968,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 937,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								937,
								877,
								967
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1638:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1648:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1656:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1671:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1681:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1594:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1615:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:2"
									},
									"scope": 799,
									"src": "1582:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1820:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1837:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1830:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1805:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:2"
									},
									"scope": 799,
									"src": "1760:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										930
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2024:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2041:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2034:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2009:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:2"
									},
									"scope": 799,
									"src": "1962:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										936
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2744:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2754:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2737:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:2"
									},
									"scope": 799,
									"src": "2688:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2891:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2908:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2901:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2882:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:2"
									},
									"scope": 799,
									"src": "2830:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3059:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3076:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3086:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3069:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3004:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3050:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:2"
									},
									"scope": 799,
									"src": "2985:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3371:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3381:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "3397:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3436:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3419:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3456:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3314:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3326:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3365:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:2"
									},
									"scope": 799,
									"src": "3296:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3621:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3638:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3650:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3657:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3631:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3566:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:2"
									},
									"scope": 799,
									"src": "3532:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4058:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4068:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4084:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4131:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4147:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3996:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4013:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4052:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:2"
									},
									"scope": 799,
									"src": "3979:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4850:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4860:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4878:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4931:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4900:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4957:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4963:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4947:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "4983:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4779:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4793:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4805:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4844:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:2"
									},
									"scope": 799,
									"src": "4757:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5443:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5457:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5453:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5477:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5498:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5491:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5552:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5548:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5570:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5591:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5584:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5651:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5657:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5661:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5643:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5393:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5407:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5419:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:2"
									},
									"scope": 799,
									"src": "5374:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6064:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6078:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6252:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6266:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6288:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6298:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6321:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6335:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6317:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6342:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6392:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6398:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6411:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6367:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6552:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6562:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6570:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6584:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6074:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6098:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6214:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6230:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6628:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6843:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7002:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7012:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7019:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6624:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6646:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6791:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6807:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7073:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7079:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7083:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7064:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7059:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6006:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6020:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:2"
									},
									"scope": 799,
									"src": "5989:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7495:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7505:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7532:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7553:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7546:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7634:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7454:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:2"
									},
									"scope": 799,
									"src": "7439:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8021:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8035:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8031:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8058:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8079:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8072:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8158:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8129:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7980:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7997:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:2"
									},
									"scope": 799,
									"src": "7965:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8781:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8800:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8816:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8791:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8725:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8740:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8757:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:2"
									},
									"scope": 799,
									"src": "8707:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9780:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9794:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9790:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9815:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9836:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9829:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9892:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9888:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9915:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9936:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9929:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "9987:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "9999:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10006:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10017:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10036:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10032:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10047:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10075:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10082:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10091:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10066:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10061:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9700:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9715:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9732:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9747:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:2"
									},
									"scope": 799,
									"src": "9682:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10485:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10495:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10532:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10522:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10561:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10557:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10599:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10617:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10636:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10613:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10643:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10695:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10704:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10722:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10668:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10793:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10800:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10809:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10828:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10784:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10436:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10453:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:2"
									},
									"scope": 799,
									"src": "10396:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9768:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10770:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							911
						],
						"Pausable": [
							1127
						]
					},
					"id": 912,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 912,
							"sourceUnit": 800,
							"src": "150:35:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "158:5:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../../utils/Pausable.sol",
							"id": 883,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 912,
							"sourceUnit": 1128,
							"src": "186:53:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 882,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1127,
										"src": "194:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 885,
										"name": "ERC20",
										"nameLocations": [
											"965:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "965:5:4"
									},
									"id": 886,
									"nodeType": "InheritanceSpecifier",
									"src": "965:5:4"
								},
								{
									"baseName": {
										"id": 887,
										"name": "Pausable",
										"nameLocations": [
											"972:8:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "972:8:4"
									},
									"id": 888,
									"nodeType": "InheritanceSpecifier",
									"src": "972:8:4"
								}
							],
							"canonicalName": "ERC20Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "241:688:4",
								"text": " @dev ERC-20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug.\n IMPORTANT: This contract does not include public pause and unpause functions. In\n addition to inheriting this contract, you must define both functions, invoking the\n {Pausable-_pause} and {Pausable-_unpause} internal functions, with appropriate\n access control, e.g. using {AccessControl} or {Ownable}. Not doing so will\n make the contract pause mechanism of the contract unreachable, and thus unusable."
							},
							"fullyImplemented": true,
							"id": 911,
							"linearizedBaseContracts": [
								911,
								1127,
								799,
								189,
								937,
								877,
								967
							],
							"name": "ERC20Pausable",
							"nameLocation": "948:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										606
									],
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "1211:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "1235:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 905,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "1241:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "1245:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 901,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1221:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20Pausable_$911_$",
																"typeString": "type(contract super ERC20Pausable)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1227:7:4",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "1221:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "1221:30:4"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "987:121:4",
										"text": " @dev See {ERC20-_update}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 910,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 899,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 898,
												"name": "whenNotPaused",
												"nameLocations": [
													"1197:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1052,
												"src": "1197:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1197:13:4"
										}
									],
									"name": "_update",
									"nameLocation": "1122:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 897,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1188:8:4"
									},
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1138:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1130:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1152:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1144:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1164:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "1156:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1129:41:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1211:0:4"
									},
									"scope": 911,
									"src": "1113:145:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 912,
							"src": "930:330:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188,
								1041,
								1044
							],
							"usedEvents": [
								811,
								820,
								1033,
								1038
							]
						}
					],
					"src": "124:1137:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							937
						]
					},
					"id": 938,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 913,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 915,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 938,
							"sourceUnit": 878,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 914,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 917,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:5"
									},
									"id": 918,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 916,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 937,
							"linearizedBaseContracts": [
								937,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 921,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 937,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 927,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 937,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 936,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 933,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 937,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 938,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 939,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 940,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 945,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 944,
												"id": 947,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 967,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 954,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 953,
												"id": 956,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 967,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 962,
												"id": 964,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 967,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 968,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Panic.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
					"exportedSymbols": {
						"Panic": [
							1019
						]
					},
					"id": 1020,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Panic",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 970,
								"nodeType": "StructuredDocumentation",
								"src": "125:489:7",
								"text": " @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1019,
							"linearizedBaseContracts": [
								1019
							],
							"name": "Panic",
							"nameLocation": "665:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "677:36:7",
										"text": "@dev generic / unspecified error"
									},
									"id": 974,
									"mutability": "constant",
									"name": "GENERIC",
									"nameLocation": "744:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "718:40:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 972,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 973,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "764:37:7",
										"text": "@dev used by the assert() builtin"
									},
									"id": 978,
									"mutability": "constant",
									"name": "ASSERT",
									"nameLocation": "832:6:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "806:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 976,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "806:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783031",
										"id": 977,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "841:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "0x01"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "851:41:7",
										"text": "@dev arithmetic underflow or overflow"
									},
									"id": 982,
									"mutability": "constant",
									"name": "UNDER_OVERFLOW",
									"nameLocation": "923:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "897:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 980,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "897:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783131",
										"id": 981,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "940:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_17_by_1",
											"typeString": "int_const 17"
										},
										"value": "0x11"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "950:35:7",
										"text": "@dev division or modulo by zero"
									},
									"id": 986,
									"mutability": "constant",
									"name": "DIVISION_BY_ZERO",
									"nameLocation": "1016:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "990:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "990:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783132",
										"id": 985,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1035:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "0x12"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "1045:30:7",
										"text": "@dev enum conversion error"
									},
									"id": 990,
									"mutability": "constant",
									"name": "ENUM_CONVERSION_ERROR",
									"nameLocation": "1106:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "1080:54:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 988,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1080:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783231",
										"id": 989,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1130:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33_by_1",
											"typeString": "int_const 33"
										},
										"value": "0x21"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "1140:36:7",
										"text": "@dev invalid encoding in storage"
									},
									"id": 994,
									"mutability": "constant",
									"name": "STORAGE_ENCODING_ERROR",
									"nameLocation": "1207:22:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "1181:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 992,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1181:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783232",
										"id": 993,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1232:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_34_by_1",
											"typeString": "int_const 34"
										},
										"value": "0x22"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 995,
										"nodeType": "StructuredDocumentation",
										"src": "1242:24:7",
										"text": "@dev empty array pop"
									},
									"id": 998,
									"mutability": "constant",
									"name": "EMPTY_ARRAY_POP",
									"nameLocation": "1297:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "1271:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 996,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783331",
										"id": 997,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1315:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49_by_1",
											"typeString": "int_const 49"
										},
										"value": "0x31"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "1325:35:7",
										"text": "@dev array out of bounds access"
									},
									"id": 1002,
									"mutability": "constant",
									"name": "ARRAY_OUT_OF_BOUNDS",
									"nameLocation": "1391:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "1365:52:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1000,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1365:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783332",
										"id": 1001,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1413:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "0x32"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "1423:65:7",
										"text": "@dev resource error (too large allocation or too large array)"
									},
									"id": 1006,
									"mutability": "constant",
									"name": "RESOURCE_ERROR",
									"nameLocation": "1519:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "1493:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1004,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1493:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783431",
										"id": 1005,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1536:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65_by_1",
											"typeString": "int_const 65"
										},
										"value": "0x41"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "1546:42:7",
										"text": "@dev calling invalid internal function"
									},
									"id": 1010,
									"mutability": "constant",
									"name": "INVALID_INTERNAL_FUNCTION",
									"nameLocation": "1619:25:7",
									"nodeType": "VariableDeclaration",
									"scope": 1019,
									"src": "1593:58:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1008,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1593:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30783531",
										"id": 1009,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1647:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81_by_1",
											"typeString": "int_const 81"
										},
										"value": "0x51"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "1819:151:7",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1854:110:7",
													"nodeType": "YulBlock",
													"src": "1854:110:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1875:4:7",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1881:10:7",
																		"nodeType": "YulLiteral",
																		"src": "1881:10:7",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1868:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:7"
																},
																"nativeSrc": "1868:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1868:24:7"
															},
															"nativeSrc": "1868:24:7",
															"nodeType": "YulExpressionStatement",
															"src": "1868:24:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1912:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1912:4:7",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "code",
																		"nativeSrc": "1918:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1918:4:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1905:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1905:6:7"
																},
																"nativeSrc": "1905:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1905:18:7"
															},
															"nativeSrc": "1905:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1905:18:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1943:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:7",
																		"type": "",
																		"value": "0x1c"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1949:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1949:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:7"
																},
																"nativeSrc": "1936:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1936:18:7"
															},
															"nativeSrc": "1936:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "1936:18:7"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1013,
														"isOffset": false,
														"isSlot": false,
														"src": "1918:4:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1016,
												"nodeType": "InlineAssembly",
												"src": "1829:135:7"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "1658:113:7",
										"text": "@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "panic",
									"nameLocation": "1785:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "code",
												"nameLocation": "1799:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "1791:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1791:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1790:14:7"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1819:0:7"
									},
									"scope": 1019,
									"src": "1776:194:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1020,
							"src": "657:1315:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1874:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							967
						],
						"Pausable": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1021,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1023,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1128,
							"sourceUnit": 968,
							"src": "128:45:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1022,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "136:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1025,
										"name": "Context",
										"nameLocations": [
											"645:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "645:7:8"
									},
									"id": 1026,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:8"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1024,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127,
								967
							],
							"name": "Pausable",
							"nameLocation": "633:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1028,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1127,
									"src": "659:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1027,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1033,
									"name": "Paused",
									"nameLocation": "770:6:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "777:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:8"
									},
									"src": "764:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1038,
									"name": "Unpaused",
									"nameLocation": "881:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "890:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:8"
									},
									"src": "875:32:8"
								},
								{
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:8",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1041,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:8"
									},
									"src": "994:22:8"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:8",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1044,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:8"
									},
									"src": "1107:22:8"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1340:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1047,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "1350:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:8"
											},
											{
												"id": 1050,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:8"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1052,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:8"
									},
									"src": "1315:72:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "1587:44:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1055,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "1597:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:8"
											},
											{
												"id": 1058,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:8"
											}
										]
									},
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1060,
									"name": "whenPaused",
									"nameLocation": "1574:10:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:8"
									},
									"src": "1565:66:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "1779:31:8",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1028,
													"src": "1796:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1067,
												"nodeType": "Return",
												"src": "1789:14:8"
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:8"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1773:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:8"
									},
									"scope": 1127,
									"src": "1726:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "1929:77:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1073,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "1943:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "1939:61:8",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "1953:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1075,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "1974:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1077,
															"nodeType": "RevertStatement",
															"src": "1967:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:8",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:8"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:8"
									},
									"scope": 1127,
									"src": "1878:128:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1093,
										"nodeType": "Block",
										"src": "2126:78:8",
										"statements": [
											{
												"condition": {
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:8",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1085,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2141:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "IfStatement",
												"src": "2136:62:8",
												"trueBody": {
													"id": 1091,
													"nodeType": "Block",
													"src": "2151:47:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1088,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2172:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1090,
															"nodeType": "RevertStatement",
															"src": "2165:22:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:8",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1094,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:8"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:8"
									},
									"scope": 1127,
									"src": "2078:126:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "2388:66:8",
										"statements": [
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1100,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2398:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1105,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2434:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1104,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "2427:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "EmitStatement",
												"src": "2422:25:8"
											}
										]
									},
									"documentation": {
										"id": 1095,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1097,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1052,
												"src": "2374:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:8"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:8"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:8"
									},
									"scope": 1127,
									"src": "2339:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "2634:69:8",
										"statements": [
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1116,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "2644:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1121,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2683:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1120,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "2674:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "EmitStatement",
												"src": "2669:27:8"
											}
										]
									},
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1113,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1060,
												"src": "2623:10:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:8"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:8"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:8"
									},
									"scope": 1127,
									"src": "2586:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "615:2090:8",
							"usedErrors": [
								1041,
								1044
							],
							"usedEvents": [
								1033,
								1038
							]
						}
					],
					"src": "102:2604:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2748
						],
						"Panic": [
							1019
						],
						"SafeCast": [
							4513
						]
					},
					"id": 2749,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Panic.sol",
							"file": "../Panic.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2749,
							"sourceUnit": 1020,
							"src": "129:35:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1130,
										"name": "Panic",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1019,
										"src": "137:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
							"file": "./SafeCast.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2749,
							"sourceUnit": 4514,
							"src": "165:40:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1132,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4513,
										"src": "173:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1134,
								"nodeType": "StructuredDocumentation",
								"src": "207:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2748,
							"linearizedBaseContracts": [
								2748
							],
							"name": "Math",
							"nameLocation": "289:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1139,
									"members": [
										{
											"id": 1135,
											"name": "Floor",
											"nameLocation": "324:5:9",
											"nodeType": "EnumValue",
											"src": "324:5:9"
										},
										{
											"id": 1136,
											"name": "Ceil",
											"nameLocation": "367:4:9",
											"nodeType": "EnumValue",
											"src": "367:4:9"
										},
										{
											"id": 1137,
											"name": "Trunc",
											"nameLocation": "409:5:9",
											"nodeType": "EnumValue",
											"src": "409:5:9"
										},
										{
											"id": 1138,
											"name": "Expand",
											"nameLocation": "439:6:9",
											"nodeType": "EnumValue",
											"src": "439:6:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "305:8:9",
									"nodeType": "EnumDefinition",
									"src": "300:169:9"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "731:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "766:71:9",
													"nodeType": "YulBlock",
													"src": "766:71:9",
													"statements": [
														{
															"nativeSrc": "780:16:9",
															"nodeType": "YulAssignment",
															"src": "780:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "791:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "791:1:9"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "794:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "794:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "787:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "787:3:9"
																},
																"nativeSrc": "787:9:9",
																"nodeType": "YulFunctionCall",
																"src": "787:9:9"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "780:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "780:3:9"
																}
															]
														},
														{
															"nativeSrc": "809:18:9",
															"nodeType": "YulAssignment",
															"src": "809:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "low",
																		"nativeSrc": "820:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "820:3:9"
																	},
																	{
																		"name": "a",
																		"nativeSrc": "825:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "825:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "817:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "817:2:9"
																},
																"nativeSrc": "817:10:9",
																"nodeType": "YulFunctionCall",
																"src": "817:10:9"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "809:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1142,
														"isOffset": false,
														"isSlot": false,
														"src": "791:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1142,
														"isOffset": false,
														"isSlot": false,
														"src": "825:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1144,
														"isOffset": false,
														"isSlot": false,
														"src": "794:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "809:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1149,
														"isOffset": false,
														"isSlot": false,
														"src": "780:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1149,
														"isOffset": false,
														"isSlot": false,
														"src": "820:3:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1151,
												"nodeType": "InlineAssembly",
												"src": "741:96:9"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "475:163:9",
										"text": " @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add512",
									"nameLocation": "652:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "667:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "659:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "678:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "670:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:22:9"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "712:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "704:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "726:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "718:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "718:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "703:27:9"
									},
									"scope": 2748,
									"src": "643:200:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "1115:462:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1437:134:9",
													"nodeType": "YulBlock",
													"src": "1437:134:9",
													"statements": [
														{
															"nativeSrc": "1451:30:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1451:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1468:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1468:1:9"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1471:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1471:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1478:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1478:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1474:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1474:3:9"
																		},
																		"nativeSrc": "1474:6:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1474:6:9"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nativeSrc": "1461:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1461:6:9"
																},
																"nativeSrc": "1461:20:9",
																"nodeType": "YulFunctionCall",
																"src": "1461:20:9"
															},
															"variables": [
																{
																	"name": "mm",
																	"nativeSrc": "1455:2:9",
																	"nodeType": "YulTypedName",
																	"src": "1455:2:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1494:16:9",
															"nodeType": "YulAssignment",
															"src": "1494:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nativeSrc": "1505:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1505:1:9"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "1508:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1501:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1501:3:9"
																},
																"nativeSrc": "1501:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1501:9:9"
															},
															"variableNames": [
																{
																	"name": "low",
																	"nativeSrc": "1494:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:9"
																}
															]
														},
														{
															"nativeSrc": "1523:38:9",
															"nodeType": "YulAssignment",
															"src": "1523:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1539:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1539:2:9"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1543:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1543:3:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1535:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:9"
																		},
																		"nativeSrc": "1535:12:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nativeSrc": "1552:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "1552:2:9"
																			},
																			{
																				"name": "low",
																				"nativeSrc": "1556:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1556:3:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1549:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1549:2:9"
																		},
																		"nativeSrc": "1549:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1549:11:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1531:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:3:9"
																},
																"nativeSrc": "1531:30:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:30:9"
															},
															"variableNames": [
																{
																	"name": "high",
																	"nativeSrc": "1523:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1523:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "1468:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "1505:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1158,
														"isOffset": false,
														"isSlot": false,
														"src": "1471:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1158,
														"isOffset": false,
														"isSlot": false,
														"src": "1508:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1161,
														"isOffset": false,
														"isSlot": false,
														"src": "1523:4:9",
														"valueSize": 1
													},
													{
														"declaration": 1163,
														"isOffset": false,
														"isSlot": false,
														"src": "1494:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1163,
														"isOffset": false,
														"isSlot": false,
														"src": "1543:3:9",
														"valueSize": 1
													},
													{
														"declaration": 1163,
														"isOffset": false,
														"isSlot": false,
														"src": "1556:3:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1165,
												"nodeType": "InlineAssembly",
												"src": "1412:159:9"
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "849:173:9",
										"text": " @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."
									},
									"id": 1167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul512",
									"nameLocation": "1036:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1051:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1043:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1062:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1054:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:22:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "high",
												"nameLocation": "1096:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1088:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "low",
												"nameLocation": "1110:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1102:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:27:9"
									},
									"scope": 2748,
									"src": "1027:550:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1784:149:9",
										"statements": [
											{
												"id": 1200,
												"nodeType": "UncheckedBlock",
												"src": "1794:133:9",
												"statements": [
													{
														"assignments": [
															1180
														],
														"declarations": [
															{
																"constant": false,
																"id": 1180,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1826:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1200,
																"src": "1818:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1179,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1818:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1184,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "1830:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1182,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "1834:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1830:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1818:17:9"
													},
													{
														"expression": {
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1185,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "1849:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1186,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "1859:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1187,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "1864:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1859:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1849:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1190,
														"nodeType": "ExpressionStatement",
														"src": "1849:16:9"
													},
													{
														"expression": {
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1177,
																"src": "1879:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "1888:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1195,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "1908:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1193,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4513,
																			"src": "1892:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1901:6:9",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4512,
																		"src": "1892:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1892:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1888:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1879:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1199,
														"nodeType": "ExpressionStatement",
														"src": "1879:37:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1583:105:9",
										"text": " @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "1702:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1717:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1709:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1728:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1720:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:22:9"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1759:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1754:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1754:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1776:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1768:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:30:9"
									},
									"scope": 2748,
									"src": "1693:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "2143:149:9",
										"statements": [
											{
												"id": 1235,
												"nodeType": "UncheckedBlock",
												"src": "2153:133:9",
												"statements": [
													{
														"assignments": [
															1215
														],
														"declarations": [
															{
																"constant": false,
																"id": 1215,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2185:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1235,
																"src": "2177:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1214,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2177:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1219,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "2189:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1217,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "2193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2189:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2177:17:9"
													},
													{
														"expression": {
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1220,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1210,
																"src": "2208:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1221,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "2218:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1222,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "2223:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2218:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2208:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1225,
														"nodeType": "ExpressionStatement",
														"src": "2208:16:9"
													},
													{
														"expression": {
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1226,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2238:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1227,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1215,
																	"src": "2247:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1230,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1210,
																			"src": "2267:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1228,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4513,
																			"src": "2251:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2260:6:9",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4512,
																		"src": "2251:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2251:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2247:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2238:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1234,
														"nodeType": "ExpressionStatement",
														"src": "2238:37:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "1939:108:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "2061:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2076:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2068:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2068:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2087:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2079:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2079:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2067:22:9"
									},
									"returnParameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2118:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2113:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2113:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2135:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "2127:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:30:9"
									},
									"scope": 2748,
									"src": "2052:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "2505:391:9",
										"statements": [
											{
												"id": 1265,
												"nodeType": "UncheckedBlock",
												"src": "2515:375:9",
												"statements": [
													{
														"assignments": [
															1250
														],
														"declarations": [
															{
																"constant": false,
																"id": 1250,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "2547:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1265,
																"src": "2539:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1249,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2539:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1254,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "2551:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1252,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1242,
																"src": "2555:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2551:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2539:17:9"
													},
													{
														"AST": {
															"nativeSrc": "2595:188:9",
															"nodeType": "YulBlock",
															"src": "2595:188:9",
															"statements": [
																{
																	"nativeSrc": "2727:42:9",
																	"nodeType": "YulAssignment",
																	"src": "2727:42:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "c",
																								"nativeSrc": "2748:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "2748:1:9"
																							},
																							{
																								"name": "a",
																								"nativeSrc": "2751:1:9",
																								"nodeType": "YulIdentifier",
																								"src": "2751:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2744:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "2744:3:9"
																						},
																						"nativeSrc": "2744:9:9",
																						"nodeType": "YulFunctionCall",
																						"src": "2744:9:9"
																					},
																					{
																						"name": "b",
																						"nativeSrc": "2755:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "2755:1:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2741:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "2741:2:9"
																				},
																				"nativeSrc": "2741:16:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2741:16:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "a",
																						"nativeSrc": "2766:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "2766:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2759:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "2759:6:9"
																				},
																				"nativeSrc": "2759:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2759:9:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2738:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2738:2:9"
																		},
																		"nativeSrc": "2738:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2738:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "success",
																			"nativeSrc": "2727:7:9",
																			"nodeType": "YulIdentifier",
																			"src": "2727:7:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1240,
																"isOffset": false,
																"isSlot": false,
																"src": "2751:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1240,
																"isOffset": false,
																"isSlot": false,
																"src": "2766:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1242,
																"isOffset": false,
																"isSlot": false,
																"src": "2755:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1250,
																"isOffset": false,
																"isSlot": false,
																"src": "2748:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1245,
																"isOffset": false,
																"isSlot": false,
																"src": "2727:7:9",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1255,
														"nodeType": "InlineAssembly",
														"src": "2570:213:9"
													},
													{
														"expression": {
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1256,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "2842:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1257,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1250,
																	"src": "2851:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 1260,
																			"name": "success",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1245,
																			"src": "2871:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"expression": {
																			"id": 1258,
																			"name": "SafeCast",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4513,
																			"src": "2855:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																				"typeString": "type(library SafeCast)"
																			}
																		},
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2864:6:9",
																		"memberName": "toUint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 4512,
																		"src": "2855:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																			"typeString": "function (bool) pure returns (uint256)"
																		}
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2855:24:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2851:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2842:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1264,
														"nodeType": "ExpressionStatement",
														"src": "2842:37:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "2298:111:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "2423:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2438:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2430:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2430:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2449:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2441:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2429:22:9"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "2480:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2475:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2475:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "2497:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "2489:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2474:30:9"
									},
									"scope": 2748,
									"src": "2414:482:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "3111:231:9",
										"statements": [
											{
												"id": 1286,
												"nodeType": "UncheckedBlock",
												"src": "3121:215:9",
												"statements": [
													{
														"expression": {
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1279,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "3145:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1280,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "3155:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3159:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3155:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3145:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1284,
														"nodeType": "ExpressionStatement",
														"src": "3145:15:9"
													},
													{
														"AST": {
															"nativeSrc": "3199:127:9",
															"nodeType": "YulBlock",
															"src": "3199:127:9",
															"statements": [
																{
																	"nativeSrc": "3293:19:9",
																	"nodeType": "YulAssignment",
																	"src": "3293:19:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3307:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3307:1:9"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3310:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3310:1:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3303:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3303:3:9"
																		},
																		"nativeSrc": "3303:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3293:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3293:6:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1270,
																"isOffset": false,
																"isSlot": false,
																"src": "3307:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1272,
																"isOffset": false,
																"isSlot": false,
																"src": "3310:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1277,
																"isOffset": false,
																"isSlot": false,
																"src": "3293:6:9",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1285,
														"nodeType": "InlineAssembly",
														"src": "3174:152:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "2902:113:9",
										"text": " @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "3029:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3044:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3036:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3036:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3055:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3047:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3035:22:9"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3086:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3081:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3081:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3103:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3095:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:30:9"
									},
									"scope": 2748,
									"src": "3020:322:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "3567:231:9",
										"statements": [
											{
												"id": 1307,
												"nodeType": "UncheckedBlock",
												"src": "3577:215:9",
												"statements": [
													{
														"expression": {
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1300,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "3601:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1301,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "3611:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3611:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3601:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1305,
														"nodeType": "ExpressionStatement",
														"src": "3601:15:9"
													},
													{
														"AST": {
															"nativeSrc": "3655:127:9",
															"nodeType": "YulBlock",
															"src": "3655:127:9",
															"statements": [
																{
																	"nativeSrc": "3749:19:9",
																	"nodeType": "YulAssignment",
																	"src": "3749:19:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "a",
																				"nativeSrc": "3763:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3763:1:9"
																			},
																			{
																				"name": "b",
																				"nativeSrc": "3766:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "3766:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mod",
																			"nativeSrc": "3759:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3759:3:9"
																		},
																		"nativeSrc": "3759:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3759:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "result",
																			"nativeSrc": "3749:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3749:6:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1291,
																"isOffset": false,
																"isSlot": false,
																"src": "3763:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1293,
																"isOffset": false,
																"isSlot": false,
																"src": "3766:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1298,
																"isOffset": false,
																"isSlot": false,
																"src": "3749:6:9",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1306,
														"nodeType": "InlineAssembly",
														"src": "3630:152:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "3348:123:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "3485:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3500:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3492:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3503:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:22:9"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "3542:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3537:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1295,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3537:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3559:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "3551:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3536:30:9"
									},
									"scope": 2748,
									"src": "3476:322:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "3989:122:9",
										"statements": [
											{
												"assignments": [
													1320,
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1320,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4005:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "4000:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1319,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4000:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4022:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1338,
														"src": "4014:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4014:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1327,
												"initialValue": {
													"arguments": [
														{
															"id": 1324,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "4039:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1325,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "4042:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1323,
														"name": "tryAdd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1202,
														"src": "4032:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3999:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "4069:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1330,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1322,
															"src": "4078:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4091:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1332,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4091:7:9",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1331,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4086:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4086:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4100:3:9",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4086:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1328,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "4061:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4061:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1337,
												"nodeType": "Return",
												"src": "4054:50:9"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "3804:103:9",
										"text": " @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingAdd",
									"nameLocation": "3921:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3935:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3954:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3946:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3934:22:9"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "3980:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3980:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3979:9:9"
									},
									"scope": 2748,
									"src": "3912:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "4294:73:9",
										"statements": [
											{
												"assignments": [
													null,
													1350
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4315:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1358,
														"src": "4307:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4307:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"arguments": [
														{
															"id": 1352,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "4332:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1353,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "4335:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1351,
														"name": "trySub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "4325:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4304:33:9"
											},
											{
												"expression": {
													"id": 1356,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1350,
													"src": "4354:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1357,
												"nodeType": "Return",
												"src": "4347:13:9"
											}
										]
									},
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "4117:95:9",
										"text": " @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingSub",
									"nameLocation": "4226:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4248:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4240:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4240:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4259:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4251:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4251:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4239:22:9"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "4285:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4285:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:9:9"
									},
									"scope": 2748,
									"src": "4217:150:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "4564:122:9",
										"statements": [
											{
												"assignments": [
													1370,
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1370,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4580:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1388,
														"src": "4575:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1369,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4575:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "4597:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1388,
														"src": "4589:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4589:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1377,
												"initialValue": {
													"arguments": [
														{
															"id": 1374,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "4614:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1375,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "4617:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1373,
														"name": "tryMul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "4607:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (bool,uint256)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4607:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4574:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1379,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "4644:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1380,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "4653:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4666:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1382,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4666:7:9",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1381,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "4661:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4661:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "4675:3:9",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "4661:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1378,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "4636:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4636:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1368,
												"id": 1387,
												"nodeType": "Return",
												"src": "4629:50:9"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "4373:109:9",
										"text": " @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saturatingMul",
									"nameLocation": "4496:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4518:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4510:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4529:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4521:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4521:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:22:9"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "4555:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4555:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:9:9"
									},
									"scope": 2748,
									"src": "4487:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "5158:207:9",
										"statements": [
											{
												"id": 1414,
												"nodeType": "UncheckedBlock",
												"src": "5168:191:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1401,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1396,
																"src": "5306:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1404,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1402,
																						"name": "a",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1394,
																						"src": "5312:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "^",
																					"rightExpression": {
																						"id": 1403,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1396,
																						"src": "5316:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "5312:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1405,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "5311:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1408,
																					"name": "condition",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1392,
																					"src": "5337:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"expression": {
																					"id": 1406,
																					"name": "SafeCast",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4513,
																					"src": "5321:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																						"typeString": "type(library SafeCast)"
																					}
																				},
																				"id": 1407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5330:6:9",
																				"memberName": "toUint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 4512,
																				"src": "5321:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																					"typeString": "function (bool) pure returns (uint256)"
																				}
																			},
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5321:26:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5311:36:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1411,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5310:38:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5306:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1400,
														"id": 1413,
														"nodeType": "Return",
														"src": "5299:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "4692:374:9",
										"text": " @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ternary",
									"nameLocation": "5080:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "condition",
												"nameLocation": "5093:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5088:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1391,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5088:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5112:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5104:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5104:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5123:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5115:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5115:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:38:9"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "5149:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:9:9"
									},
									"scope": 2748,
									"src": "5071:294:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "5502:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1427,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1419,
																"src": "5527:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1428,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "5531:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5527:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1430,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "5534:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1431,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "5537:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1426,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "5519:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5519:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1425,
												"id": 1433,
												"nodeType": "Return",
												"src": "5512:27:9"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "5371:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5444:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5456:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "5448:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5448:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5467:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "5459:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5459:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5447:22:9"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "5493:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5492:9:9"
									},
									"scope": 2748,
									"src": "5435:111:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "5684:44:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1438,
																"src": "5709:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1447,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "5713:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5709:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1449,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1438,
															"src": "5716:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1450,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "5719:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1445,
														"name": "ternary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1416,
														"src": "5701:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5701:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1444,
												"id": 1452,
												"nodeType": "Return",
												"src": "5694:27:9"
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "5552:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "5626:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5638:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "5630:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5649:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "5641:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:22:9"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "5675:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:9:9"
									},
									"scope": 2748,
									"src": "5617:111:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "5912:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1464,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "5967:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1465,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1459,
																	"src": "5971:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5967:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1467,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5966:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1468,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "5977:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1469,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "5981:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5977:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1471,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5976:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5986:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "5976:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5966:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1463,
												"id": 1475,
												"nodeType": "Return",
												"src": "5959:28:9"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "5734:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "5850:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5866:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "5858:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5877:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "5869:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5857:22:9"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "5903:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5903:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5902:9:9"
									},
									"scope": 2748,
									"src": "5841:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "6286:633:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1487,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "6300:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6305:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6300:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1498,
												"nodeType": "IfStatement",
												"src": "6296:150:9",
												"trueBody": {
													"id": 1497,
													"nodeType": "Block",
													"src": "6308:138:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1493,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "6412:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6418:16:9",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 986,
																		"src": "6412:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1490,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "6400:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6406:5:9",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1018,
																	"src": "6400:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6400:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1496,
															"nodeType": "ExpressionStatement",
															"src": "6400:35:9"
														}
													]
												}
											},
											{
												"id": 1516,
												"nodeType": "UncheckedBlock",
												"src": "6829:84:9",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1501,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "6876:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6880:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6876:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 1499,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "6860:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6869:6:9",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4512,
																	"src": "6860:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6860:22:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1507,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1505,
																							"name": "a",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1480,
																							"src": "6887:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1506,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6891:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "6887:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1508,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6886:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1509,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1482,
																				"src": "6896:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6886:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6900:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6886:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6885:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6860:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1486,
														"id": 1515,
														"nodeType": "Return",
														"src": "6853:49:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "6000:210:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "6224:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6240:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6232:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6232:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6251:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6243:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6243:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:22:9"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "6277:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6277:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6276:9:9"
									},
									"scope": 2748,
									"src": "6215:704:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "7340:3585:9",
										"statements": [
											{
												"id": 1652,
												"nodeType": "UncheckedBlock",
												"src": "7350:3569:9",
												"statements": [
													{
														"assignments": [
															1531,
															1533
														],
														"declarations": [
															{
																"constant": false,
																"id": 1531,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "7383:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "7375:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1530,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7375:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1533,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "7397:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "7389:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1532,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1538,
														"initialValue": {
															"arguments": [
																{
																	"id": 1535,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "7411:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1536,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "7414:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1534,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "7404:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7404:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7374:42:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1539,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "7498:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7506:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7498:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1547,
														"nodeType": "IfStatement",
														"src": "7494:365:9",
														"trueBody": {
															"id": 1546,
															"nodeType": "Block",
															"src": "7509:350:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1542,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "7827:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1543,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "7833:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7827:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1529,
																	"id": 1545,
																	"nodeType": "Return",
																	"src": "7820:24:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1548,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "7969:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1549,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "7984:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7969:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1566,
														"nodeType": "IfStatement",
														"src": "7965:142:9",
														"trueBody": {
															"id": 1565,
															"nodeType": "Block",
															"src": "7990:117:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1557,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1555,
																							"name": "denominator",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1525,
																							"src": "8028:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 1556,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8043:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "8028:16:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					{
																						"expression": {
																							"id": 1558,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1019,
																							"src": "8046:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8052:16:9",
																						"memberName": "DIVISION_BY_ZERO",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 986,
																						"src": "8046:22:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1560,
																							"name": "Panic",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1019,
																							"src": "8070:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																								"typeString": "type(library Panic)"
																							}
																						},
																						"id": 1561,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "8076:14:9",
																						"memberName": "UNDER_OVERFLOW",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 982,
																						"src": "8070:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 1554,
																					"name": "ternary",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1416,
																					"src": "8020:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																						"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8020:71:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1551,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "8008:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8014:5:9",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1018,
																			"src": "8008:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8008:84:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1564,
																	"nodeType": "ExpressionStatement",
																	"src": "8008:84:9"
																}
															]
														}
													},
													{
														"assignments": [
															1568
														],
														"declarations": [
															{
																"constant": false,
																"id": 1568,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "8367:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "8359:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8359:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1569,
														"nodeType": "VariableDeclarationStatement",
														"src": "8359:17:9"
													},
													{
														"AST": {
															"nativeSrc": "8415:283:9",
															"nodeType": "YulBlock",
															"src": "8415:283:9",
															"statements": [
																{
																	"nativeSrc": "8484:38:9",
																	"nodeType": "YulAssignment",
																	"src": "8484:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "8504:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "8504:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "8507:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "8507:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "8510:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "8510:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "8497:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "8497:6:9"
																		},
																		"nativeSrc": "8497:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8497:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "8484:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "8484:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "8604:37:9",
																	"nodeType": "YulAssignment",
																	"src": "8604:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "high",
																				"nativeSrc": "8616:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8616:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "8625:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "8625:9:9"
																					},
																					{
																						"name": "low",
																						"nativeSrc": "8636:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "8636:3:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "8622:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "8622:2:9"
																				},
																				"nativeSrc": "8622:18:9",
																				"nodeType": "YulFunctionCall",
																				"src": "8622:18:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8612:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8612:3:9"
																		},
																		"nativeSrc": "8612:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8612:29:9"
																	},
																	"variableNames": [
																		{
																			"name": "high",
																			"nativeSrc": "8604:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "8604:4:9"
																		}
																	]
																},
																{
																	"nativeSrc": "8658:26:9",
																	"nodeType": "YulAssignment",
																	"src": "8658:26:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "8669:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "8669:3:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "8674:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8674:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8665:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8665:3:9"
																		},
																		"nativeSrc": "8665:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8665:19:9"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "8658:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8658:3:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "8510:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1531,
																"isOffset": false,
																"isSlot": false,
																"src": "8604:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1531,
																"isOffset": false,
																"isSlot": false,
																"src": "8616:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "8636:3:9",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "8658:3:9",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "8669:3:9",
																"valueSize": 1
															},
															{
																"declaration": 1568,
																"isOffset": false,
																"isSlot": false,
																"src": "8484:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1568,
																"isOffset": false,
																"isSlot": false,
																"src": "8625:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1568,
																"isOffset": false,
																"isSlot": false,
																"src": "8674:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1521,
																"isOffset": false,
																"isSlot": false,
																"src": "8504:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1523,
																"isOffset": false,
																"isSlot": false,
																"src": "8507:1:9",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1570,
														"nodeType": "InlineAssembly",
														"src": "8390:308:9"
													},
													{
														"assignments": [
															1572
														],
														"declarations": [
															{
																"constant": false,
																"id": 1572,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "8910:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "8902:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1571,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8902:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1579,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1573,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "8917:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8932:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1575,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "8936:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8932:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1577,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8931:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8917:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8902:46:9"
													},
													{
														"AST": {
															"nativeSrc": "8987:359:9",
															"nodeType": "YulBlock",
															"src": "8987:359:9",
															"statements": [
																{
																	"nativeSrc": "9052:37:9",
																	"nodeType": "YulAssignment",
																	"src": "9052:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "9071:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "9071:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9084:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9084:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9067:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9067:3:9"
																		},
																		"nativeSrc": "9067:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9067:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "9052:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "9052:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "9153:21:9",
																	"nodeType": "YulAssignment",
																	"src": "9153:21:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "low",
																				"nativeSrc": "9164:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "9164:3:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "9169:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "9169:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9160:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:9"
																		},
																		"nativeSrc": "9160:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9160:14:9"
																	},
																	"variableNames": [
																		{
																			"name": "low",
																			"nativeSrc": "9153:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9153:3:9"
																		}
																	]
																},
																{
																	"nativeSrc": "9293:39:9",
																	"nodeType": "YulAssignment",
																	"src": "9293:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9313:1:9",
																								"nodeType": "YulLiteral",
																								"src": "9313:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "9316:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "9316:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "9309:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "9309:3:9"
																						},
																						"nativeSrc": "9309:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "9309:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "9323:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "9323:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "9305:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "9305:3:9"
																				},
																				"nativeSrc": "9305:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "9305:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9330:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9330:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9301:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9301:3:9"
																		},
																		"nativeSrc": "9301:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9301:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "9293:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "9293:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "9052:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "9071:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "9153:3:9",
																"valueSize": 1
															},
															{
																"declaration": 1533,
																"isOffset": false,
																"isSlot": false,
																"src": "9164:3:9",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "9084:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "9169:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "9293:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "9316:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1572,
																"isOffset": false,
																"isSlot": false,
																"src": "9323:4:9",
																"valueSize": 1
															}
														],
														"flags": [
															"memory-safe"
														],
														"id": 1580,
														"nodeType": "InlineAssembly",
														"src": "8962:384:9"
													},
													{
														"expression": {
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1581,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1533,
																"src": "9409:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1582,
																	"name": "high",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "9416:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1583,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "9423:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9416:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9409:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1586,
														"nodeType": "ExpressionStatement",
														"src": "9409:18:9"
													},
													{
														"assignments": [
															1588
														],
														"declarations": [
															{
																"constant": false,
																"id": 1588,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "9770:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1652,
																"src": "9762:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1587,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9762:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1595,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9781:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1590,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1525,
																			"src": "9785:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9781:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9780:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9800:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "9780:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9762:39:9"
													},
													{
														"expression": {
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1596,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "10018:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10029:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1598,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "10033:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1599,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "10047:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10033:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10029:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10018:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1603,
														"nodeType": "ExpressionStatement",
														"src": "10018:36:9"
													},
													{
														"expression": {
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1604,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "10088:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10099:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1606,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "10103:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1607,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "10117:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10103:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10099:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10088:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1611,
														"nodeType": "ExpressionStatement",
														"src": "10088:36:9"
													},
													{
														"expression": {
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1612,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "10160:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10171:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1614,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "10175:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1615,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "10189:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10175:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10171:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10160:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1619,
														"nodeType": "ExpressionStatement",
														"src": "10160:36:9"
													},
													{
														"expression": {
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1620,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "10231:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10242:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1622,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "10246:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1623,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "10260:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10246:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10242:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10231:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1627,
														"nodeType": "ExpressionStatement",
														"src": "10231:36:9"
													},
													{
														"expression": {
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1628,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "10304:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10315:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1630,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "10319:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1631,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "10333:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10319:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10315:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10304:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1635,
														"nodeType": "ExpressionStatement",
														"src": "10304:36:9"
													},
													{
														"expression": {
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1636,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "10378:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10389:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1638,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1525,
																		"src": "10393:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1639,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "10407:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10393:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10389:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10378:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1643,
														"nodeType": "ExpressionStatement",
														"src": "10378:36:9"
													},
													{
														"expression": {
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1644,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "10859:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1645,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "10868:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1646,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "10874:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10868:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10859:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1649,
														"nodeType": "ExpressionStatement",
														"src": "10859:22:9"
													},
													{
														"expression": {
															"id": 1650,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "10902:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1529,
														"id": 1651,
														"nodeType": "Return",
														"src": "10895:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "6925:312:9",
										"text": " @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "7251:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "7266:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "7258:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7258:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "7277:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "7269:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7269:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "7288:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "7280:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7257:43:9"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "7332:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "7324:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7323:16:9"
									},
									"scope": 2748,
									"src": "7242:3683:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "11164:128:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1670,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "11188:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1671,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "11191:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1672,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "11194:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1669,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1654,
																1691
															],
															"referencedDeclaration": 1654,
															"src": "11181:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11181:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1677,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1664,
																			"src": "11242:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$1139",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$1139",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1676,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2747,
																		"src": "11225:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1139_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11225:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1680,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1657,
																				"src": "11262:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1681,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1659,
																				"src": "11265:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1682,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "11268:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1679,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "11255:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11255:25:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11283:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "11255:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "11225:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1674,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4513,
																"src": "11209:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11218:6:9",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4512,
															"src": "11209:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11209:76:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11181:104:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1668,
												"id": 1689,
												"nodeType": "Return",
												"src": "11174:111:9"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "10931:118:9",
										"text": " @dev Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "11063:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11078:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "11070:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11070:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11089:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "11081:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11081:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "11100:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "11092:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11092:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11122:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "11113:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "Rounding",
														"nameLocations": [
															"11113:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "11113:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "11113:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11069:62:9"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "11155:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11154:9:9"
									},
									"scope": 2748,
									"src": "11054:238:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "11500:245:9",
										"statements": [
											{
												"id": 1739,
												"nodeType": "UncheckedBlock",
												"src": "11510:229:9",
												"statements": [
													{
														"assignments": [
															1704,
															1706
														],
														"declarations": [
															{
																"constant": false,
																"id": 1704,
																"mutability": "mutable",
																"name": "high",
																"nameLocation": "11543:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1739,
																"src": "11535:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1703,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11535:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 1706,
																"mutability": "mutable",
																"name": "low",
																"nameLocation": "11557:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1739,
																"src": "11549:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1705,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11549:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1711,
														"initialValue": {
															"arguments": [
																{
																	"id": 1708,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "11571:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1709,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "11574:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1707,
																"name": "mul512",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "11564:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256,uint256)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11564:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																"typeString": "tuple(uint256,uint256)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11534:42:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1712,
																"name": "high",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "11594:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 1713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11602:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "<<",
																"rightExpression": {
																	"id": 1714,
																	"name": "n",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1698,
																	"src": "11607:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "11602:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11594:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1725,
														"nodeType": "IfStatement",
														"src": "11590:86:9",
														"trueBody": {
															"id": 1724,
															"nodeType": "Block",
															"src": "11610:66:9",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1720,
																					"name": "Panic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1019,
																					"src": "11640:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																						"typeString": "type(library Panic)"
																					}
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "11646:14:9",
																				"memberName": "UNDER_OVERFLOW",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 982,
																				"src": "11640:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1717,
																				"name": "Panic",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "11628:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																					"typeString": "type(library Panic)"
																				}
																			},
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11634:5:9",
																			"memberName": "panic",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1018,
																			"src": "11628:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11628:33:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1723,
																	"nodeType": "ExpressionStatement",
																	"src": "11628:33:9"
																}
															]
														}
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1726,
																			"name": "high",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "11697:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					},
																					"id": 1729,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "323536",
																						"id": 1727,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11706:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_256_by_1",
																							"typeString": "int_const 256"
																						},
																						"value": "256"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1728,
																						"name": "n",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1698,
																						"src": "11712:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "11706:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint16",
																						"typeString": "uint16"
																					}
																				}
																			],
																			"id": 1730,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "11705:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint16",
																				"typeString": "uint16"
																			}
																		},
																		"src": "11697:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1732,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11696:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "|",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1733,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1706,
																			"src": "11719:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"id": 1734,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "11726:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "11719:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1736,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11718:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11696:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1702,
														"id": 1738,
														"nodeType": "Return",
														"src": "11689:39:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1692,
										"nodeType": "StructuredDocumentation",
										"src": "11298:111:9",
										"text": " @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11423:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1694,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11438:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "11430:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11430:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11449:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "11441:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11458:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "11452:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1697,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11452:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11429:31:9"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "11492:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "11484:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:16:9"
									},
									"scope": 2748,
									"src": "11414:331:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1779,
										"nodeType": "Block",
										"src": "11963:113:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1757,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "11987:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1758,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "11990:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1759,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "11993:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1756,
															"name": "mulShr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																1741,
																1780
															],
															"referencedDeclaration": 1741,
															"src": "11980:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint8) pure returns (uint256)"
															}
														},
														"id": 1760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11980:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1764,
																			"name": "rounding",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1751,
																			"src": "12031:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_Rounding_$1139",
																				"typeString": "enum Math.Rounding"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_enum$_Rounding_$1139",
																				"typeString": "enum Math.Rounding"
																			}
																		],
																		"id": 1763,
																		"name": "unsignedRoundsUp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2747,
																		"src": "12014:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1139_$returns$_t_bool_$",
																			"typeString": "function (enum Math.Rounding) pure returns (bool)"
																		}
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12014:26:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1767,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1744,
																				"src": "12051:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1768,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1746,
																				"src": "12054:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1771,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1769,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "12057:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1770,
																					"name": "n",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1748,
																					"src": "12062:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "12057:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1766,
																			"name": "mulmod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967280,
																			"src": "12044:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12044:20:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12067:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12044:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "12014:54:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 1761,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4513,
																"src": "11998:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12007:6:9",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4512,
															"src": "11998:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11998:71:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11980:89:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1755,
												"id": 1778,
												"nodeType": "Return",
												"src": "11973:96:9"
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "11751:109:9",
										"text": " @dev Calculates x * y >> n with full precision, following the selected rounding direction."
									},
									"id": 1780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulShr",
									"nameLocation": "11874:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "11889:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "11881:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11881:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "11900:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "11892:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "11909:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "11903:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1747,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11903:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11921:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "11912:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1749,
														"name": "Rounding",
														"nameLocations": [
															"11912:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "11912:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "11912:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11880:50:9"
									},
									"returnParameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "11954:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11954:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11953:9:9"
									},
									"scope": 2748,
									"src": "11865:211:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1876,
										"nodeType": "Block",
										"src": "12710:1849:9",
										"statements": [
											{
												"id": 1875,
												"nodeType": "UncheckedBlock",
												"src": "12720:1833:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1790,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "12748:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1791,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12753:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12748:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1795,
														"nodeType": "IfStatement",
														"src": "12744:20:9",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12763:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1789,
															"id": 1794,
															"nodeType": "Return",
															"src": "12756:8:9"
														}
													},
													{
														"assignments": [
															1797
														],
														"declarations": [
															{
																"constant": false,
																"id": 1797,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "13243:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1875,
																"src": "13235:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1796,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13235:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1801,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1783,
																"src": "13255:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1799,
																"name": "n",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1785,
																"src": "13259:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13255:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13235:25:9"
													},
													{
														"assignments": [
															1803
														],
														"declarations": [
															{
																"constant": false,
																"id": 1803,
																"mutability": "mutable",
																"name": "gcd",
																"nameLocation": "13282:3:9",
																"nodeType": "VariableDeclaration",
																"scope": 1875,
																"src": "13274:11:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1802,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13274:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1805,
														"initialValue": {
															"id": 1804,
															"name": "n",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "13288:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13274:15:9"
													},
													{
														"assignments": [
															1807
														],
														"declarations": [
															{
																"constant": false,
																"id": 1807,
																"mutability": "mutable",
																"name": "x",
																"nameLocation": "13432:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1875,
																"src": "13425:8:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1806,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13425:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1809,
														"initialValue": {
															"hexValue": "30",
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13436:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13425:12:9"
													},
													{
														"assignments": [
															1811
														],
														"declarations": [
															{
																"constant": false,
																"id": 1811,
																"mutability": "mutable",
																"name": "y",
																"nameLocation": "13458:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1875,
																"src": "13451:8:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"typeName": {
																	"id": 1810,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13451:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1813,
														"initialValue": {
															"hexValue": "31",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13462:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13451:12:9"
													},
													{
														"body": {
															"id": 1850,
															"nodeType": "Block",
															"src": "13501:882:9",
															"statements": [
																{
																	"assignments": [
																		1818
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1818,
																			"mutability": "mutable",
																			"name": "quotient",
																			"nameLocation": "13527:8:9",
																			"nodeType": "VariableDeclaration",
																			"scope": 1850,
																			"src": "13519:16:9",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1817,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "13519:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1822,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1819,
																			"name": "gcd",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1803,
																			"src": "13538:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1820,
																			"name": "remainder",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "13544:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13538:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "13519:34:9"
																},
																{
																	"expression": {
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1823,
																					"name": "gcd",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1803,
																					"src": "13573:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1824,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1797,
																					"src": "13578:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1825,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13572:16:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1826,
																					"name": "remainder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1797,
																					"src": "13678:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1831,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1827,
																						"name": "gcd",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1803,
																						"src": "13923:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1830,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1828,
																							"name": "remainder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1797,
																							"src": "13929:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1829,
																							"name": "quotient",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1818,
																							"src": "13941:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "13929:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13923:26:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1832,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13591:376:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint256)"
																			}
																		},
																		"src": "13572:395:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1834,
																	"nodeType": "ExpressionStatement",
																	"src": "13572:395:9"
																},
																{
																	"expression": {
																		"id": 1848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"components": [
																				{
																					"id": 1835,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1807,
																					"src": "13987:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"id": 1836,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1811,
																					"src": "13990:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1837,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "TupleExpression",
																			"src": "13986:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"components": [
																				{
																					"id": 1838,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1811,
																					"src": "14072:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 1846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1839,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1807,
																						"src": "14326:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						},
																						"id": 1845,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1840,
																							"name": "y",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1811,
																							"src": "14330:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [
																								{
																									"id": 1843,
																									"name": "quotient",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1818,
																									"src": "14341:8:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 1842,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"nodeType": "ElementaryTypeNameExpression",
																								"src": "14334:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_int256_$",
																									"typeString": "type(int256)"
																								},
																								"typeName": {
																									"id": 1841,
																									"name": "int256",
																									"nodeType": "ElementaryTypeName",
																									"src": "14334:6:9",
																									"typeDescriptions": {}
																								}
																							},
																							"id": 1844,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "14334:16:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "14330:20:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"src": "14326:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"id": 1847,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "13995:373:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
																				"typeString": "tuple(int256,int256)"
																			}
																		},
																		"src": "13986:382:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1849,
																	"nodeType": "ExpressionStatement",
																	"src": "13986:382:9"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1814,
																"name": "remainder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1797,
																"src": "13485:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13498:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13485:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1851,
														"nodeType": "WhileStatement",
														"src": "13478:905:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "gcd",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "14401:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "31",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14408:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "14401:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1857,
														"nodeType": "IfStatement",
														"src": "14397:22:9",
														"trueBody": {
															"expression": {
																"hexValue": "30",
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14418:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1789,
															"id": 1856,
															"nodeType": "Return",
															"src": "14411:8:9"
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 1861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1859,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "14470:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14474:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "14470:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1862,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1785,
																		"src": "14477:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "-",
																				"prefix": true,
																				"src": "14489:2:9",
																				"subExpression": {
																					"id": 1865,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1807,
																					"src": "14490:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 1864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "14481:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1863,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "14481:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14481:11:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14477:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1871,
																			"name": "x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1807,
																			"src": "14502:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14494:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1869,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14494:7:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14494:10:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1858,
																"name": "ternary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "14462:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (bool,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14462:43:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1789,
														"id": 1874,
														"nodeType": "Return",
														"src": "14455:50:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "12082:553:9",
										"text": " @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."
									},
									"id": 1877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invMod",
									"nameLocation": "12649:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12664:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "12656:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12656:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "12675:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "12667:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12667:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12655:22:9"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "12701:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12701:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12700:9:9"
									},
									"scope": 2748,
									"src": "12640:1919:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1897,
										"nodeType": "Block",
										"src": "15159:82:9",
										"statements": [
											{
												"id": 1896,
												"nodeType": "UncheckedBlock",
												"src": "15169:66:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1889,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1880,
																	"src": "15212:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1890,
																		"name": "p",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1882,
																		"src": "15215:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15219:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "15215:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1893,
																	"name": "p",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1882,
																	"src": "15222:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1887,
																	"name": "Math",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2748,
																	"src": "15200:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Math_$2748_$",
																		"typeString": "type(library Math)"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15205:6:9",
																"memberName": "modExp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1934,
																"src": "15200:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																}
															},
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15200:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1886,
														"id": 1895,
														"nodeType": "Return",
														"src": "15193:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1878,
										"nodeType": "StructuredDocumentation",
										"src": "14565:514:9",
										"text": " @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."
									},
									"id": 1898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "invModPrime",
									"nameLocation": "15093:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15113:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "15105:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "p",
												"nameLocation": "15124:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "15116:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15116:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15104:22:9"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1898,
												"src": "15150:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15150:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15149:9:9"
									},
									"scope": 2748,
									"src": "15084:157:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "16011:174:9",
										"statements": [
											{
												"assignments": [
													1911,
													1913
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16027:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "16022:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1910,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16022:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1913,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "16044:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1933,
														"src": "16036:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1912,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16036:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1919,
												"initialValue": {
													"arguments": [
														{
															"id": 1915,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "16064:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1916,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "16067:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1917,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "16070:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1914,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1958,
															2040
														],
														"referencedDeclaration": 1958,
														"src": "16054:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) view returns (bool,uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16054:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16021:51:9"
											},
											{
												"condition": {
													"id": 1921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16086:8:9",
													"subExpression": {
														"id": 1920,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "16087:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1930,
												"nodeType": "IfStatement",
												"src": "16082:74:9",
												"trueBody": {
													"id": 1929,
													"nodeType": "Block",
													"src": "16096:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1925,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "16122:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "16128:16:9",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 986,
																		"src": "16122:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1922,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "16110:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16116:5:9",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1018,
																	"src": "16110:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16110:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1928,
															"nodeType": "ExpressionStatement",
															"src": "16110:35:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1931,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1913,
													"src": "16172:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1909,
												"id": 1932,
												"nodeType": "Return",
												"src": "16165:13:9"
											}
										]
									},
									"documentation": {
										"id": 1899,
										"nodeType": "StructuredDocumentation",
										"src": "15247:678:9",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."
									},
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "15939:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "15954:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "15946:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15946:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "15965:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "15957:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15957:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "15976:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "15968:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15968:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15945:33:9"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "16002:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16002:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16001:9:9"
									},
									"scope": 2748,
									"src": "15930:255:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "17039:1493:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1948,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1941,
														"src": "17053:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17058:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1955,
												"nodeType": "IfStatement",
												"src": "17049:29:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17069:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17076:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 1953,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "17068:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 1947,
													"id": 1954,
													"nodeType": "Return",
													"src": "17061:17:9"
												}
											},
											{
												"AST": {
													"nativeSrc": "17113:1413:9",
													"nodeType": "YulBlock",
													"src": "17113:1413:9",
													"statements": [
														{
															"nativeSrc": "17127:22:9",
															"nodeType": "YulVariableDeclaration",
															"src": "17127:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17144:4:9",
																		"nodeType": "YulLiteral",
																		"src": "17144:4:9",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17138:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "17138:5:9"
																},
																"nativeSrc": "17138:11:9",
																"nodeType": "YulFunctionCall",
																"src": "17138:11:9"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nativeSrc": "17131:3:9",
																	"nodeType": "YulTypedName",
																	"src": "17131:3:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "18057:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18057:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18062:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18062:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18050:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18050:6:9"
																},
																"nativeSrc": "18050:17:9",
																"nodeType": "YulFunctionCall",
																"src": "18050:17:9"
															},
															"nativeSrc": "18050:17:9",
															"nodeType": "YulExpressionStatement",
															"src": "18050:17:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18091:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18091:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18096:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18096:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18087:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18087:3:9"
																		},
																		"nativeSrc": "18087:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18087:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18103:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18103:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:9"
																},
																"nativeSrc": "18080:28:9",
																"nodeType": "YulFunctionCall",
																"src": "18080:28:9"
															},
															"nativeSrc": "18080:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "18080:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18132:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18132:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18137:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18137:4:9",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18128:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18128:3:9"
																		},
																		"nativeSrc": "18128:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18128:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18144:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18144:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18121:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18121:6:9"
																},
																"nativeSrc": "18121:28:9",
																"nodeType": "YulFunctionCall",
																"src": "18121:28:9"
															},
															"nativeSrc": "18121:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "18121:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18173:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18173:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18178:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18178:4:9",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:9"
																		},
																		"nativeSrc": "18169:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:14:9"
																	},
																	{
																		"name": "b",
																		"nativeSrc": "18185:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18185:1:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18162:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18162:6:9"
																},
																"nativeSrc": "18162:25:9",
																"nodeType": "YulFunctionCall",
																"src": "18162:25:9"
															},
															"nativeSrc": "18162:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "18162:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18211:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18211:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18216:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18216:4:9",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18207:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18207:3:9"
																		},
																		"nativeSrc": "18207:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18207:14:9"
																	},
																	{
																		"name": "e",
																		"nativeSrc": "18223:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18223:1:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18200:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18200:6:9"
																},
																"nativeSrc": "18200:25:9",
																"nodeType": "YulFunctionCall",
																"src": "18200:25:9"
															},
															"nativeSrc": "18200:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "18200:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "ptr",
																				"nativeSrc": "18249:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "18249:3:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18254:4:9",
																				"nodeType": "YulLiteral",
																				"src": "18254:4:9",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18245:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18245:3:9"
																		},
																		"nativeSrc": "18245:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18245:14:9"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "18261:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "18261:1:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18238:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18238:6:9"
																},
																"nativeSrc": "18238:25:9",
																"nodeType": "YulFunctionCall",
																"src": "18238:25:9"
															},
															"nativeSrc": "18238:25:9",
															"nodeType": "YulExpressionStatement",
															"src": "18238:25:9"
														},
														{
															"nativeSrc": "18425:57:9",
															"nodeType": "YulAssignment",
															"src": "18425:57:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "18447:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "18447:3:9"
																		},
																		"nativeSrc": "18447:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "18447:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18454:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18454:4:9",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "18460:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "18460:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18465:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18465:4:9",
																		"type": "",
																		"value": "0xc0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18471:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18471:4:9",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18477:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18477:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "18436:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "18436:10:9"
																},
																"nativeSrc": "18436:46:9",
																"nodeType": "YulFunctionCall",
																"src": "18436:46:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "18425:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "18425:7:9"
																}
															]
														},
														{
															"nativeSrc": "18495:21:9",
															"nodeType": "YulAssignment",
															"src": "18495:21:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18511:4:9",
																		"nodeType": "YulLiteral",
																		"src": "18511:4:9",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18505:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "18505:5:9"
																},
																"nativeSrc": "18505:11:9",
																"nodeType": "YulFunctionCall",
																"src": "18505:11:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18495:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "18495:6:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1937,
														"isOffset": false,
														"isSlot": false,
														"src": "18185:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1939,
														"isOffset": false,
														"isSlot": false,
														"src": "18223:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1941,
														"isOffset": false,
														"isSlot": false,
														"src": "18261:1:9",
														"valueSize": 1
													},
													{
														"declaration": 1946,
														"isOffset": false,
														"isSlot": false,
														"src": "18495:6:9",
														"valueSize": 1
													},
													{
														"declaration": 1944,
														"isOffset": false,
														"isSlot": false,
														"src": "18425:7:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1956,
												"nodeType": "InlineAssembly",
												"src": "17088:1438:9"
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "16191:738:9",
										"text": " @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "16943:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "16961:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16953:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16953:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "16972:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16964:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1938,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "16983:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "16975:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16952:33:9"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "17014:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "17009:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17009:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17031:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "17023:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17023:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17008:30:9"
									},
									"scope": 2748,
									"src": "16934:1598:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "18729:179:9",
										"statements": [
											{
												"assignments": [
													1971,
													1973
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18745:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "18740:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1970,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18740:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1973,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18767:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "18754:19:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1972,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18754:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1979,
												"initialValue": {
													"arguments": [
														{
															"id": 1975,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "18787:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1976,
															"name": "e",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "18790:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1977,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "18793:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1974,
														"name": "tryModExp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1958,
															2040
														],
														"referencedDeclaration": 2040,
														"src": "18777:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18777:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18739:56:9"
											},
											{
												"condition": {
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18809:8:9",
													"subExpression": {
														"id": 1980,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "18810:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1990,
												"nodeType": "IfStatement",
												"src": "18805:74:9",
												"trueBody": {
													"id": 1989,
													"nodeType": "Block",
													"src": "18819:60:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1985,
																			"name": "Panic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1019,
																			"src": "18845:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																				"typeString": "type(library Panic)"
																			}
																		},
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "18851:16:9",
																		"memberName": "DIVISION_BY_ZERO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 986,
																		"src": "18845:22:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1982,
																		"name": "Panic",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "18833:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Panic_$1019_$",
																			"typeString": "type(library Panic)"
																		}
																	},
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18839:5:9",
																	"memberName": "panic",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1018,
																	"src": "18833:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18833:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1988,
															"nodeType": "ExpressionStatement",
															"src": "18833:35:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1991,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1973,
													"src": "18895:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1969,
												"id": 1992,
												"nodeType": "Return",
												"src": "18888:13:9"
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "18538:85:9",
										"text": " @dev Variant of {modExp} that supports inputs of arbitrary length."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modExp",
									"nameLocation": "18637:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "18657:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "18644:14:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18644:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "18673:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "18660:14:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18660:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "18689:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "18676:14:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1964,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18676:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18643:48:9"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "18715:12:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1967,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18715:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18714:14:9"
									},
									"scope": 2748,
									"src": "18628:280:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2039,
										"nodeType": "Block",
										"src": "19162:771:9",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 2009,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "19187:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2008,
														"name": "_zeroBytes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "19176:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (bytes memory) pure returns (bool)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19176:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2018,
												"nodeType": "IfStatement",
												"src": "19172:47:9",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19199:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19216:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "19206:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (bytes memory)"
																	},
																	"typeName": {
																		"id": 2012,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "19210:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	}
																},
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19206:12:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"id": 2016,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "19198:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "tuple(bool,bytes memory)"
														}
													},
													"functionReturnParameters": 2007,
													"id": 2017,
													"nodeType": "Return",
													"src": "19191:28:9"
												}
											},
											{
												"assignments": [
													2020
												],
												"declarations": [
													{
														"constant": false,
														"id": 2020,
														"mutability": "mutable",
														"name": "mLen",
														"nameLocation": "19238:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 2039,
														"src": "19230:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2019,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19230:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2023,
												"initialValue": {
													"expression": {
														"id": 2021,
														"name": "m",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "19245:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19247:6:9",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19245:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19230:23:9"
											},
											{
												"expression": {
													"id": 2036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2024,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "19335:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2027,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "19361:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19363:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19361:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2029,
																	"name": "e",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1999,
																	"src": "19371:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "19373:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "19371:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2031,
																"name": "mLen",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "19381:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2032,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1997,
																"src": "19387:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2033,
																"name": "e",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1999,
																"src": "19390:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															{
																"id": 2034,
																"name": "m",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2001,
																"src": "19393:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2025,
																"name": "abi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967295,
																"src": "19344:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_abi",
																	"typeString": "abi"
																}
															},
															"id": 2026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "19348:12:9",
															"memberName": "encodePacked",
															"nodeType": "MemberAccess",
															"src": "19344:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																"typeString": "function () pure returns (bytes memory)"
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19344:51:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"src": "19335:60:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2037,
												"nodeType": "ExpressionStatement",
												"src": "19335:60:9"
											},
											{
												"AST": {
													"nativeSrc": "19431:496:9",
													"nodeType": "YulBlock",
													"src": "19431:496:9",
													"statements": [
														{
															"nativeSrc": "19445:32:9",
															"nodeType": "YulVariableDeclaration",
															"src": "19445:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19464:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19464:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19472:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19472:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19460:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "19460:3:9"
																},
																"nativeSrc": "19460:17:9",
																"nodeType": "YulFunctionCall",
																"src": "19460:17:9"
															},
															"variables": [
																{
																	"name": "dataPtr",
																	"nativeSrc": "19449:7:9",
																	"nodeType": "YulTypedName",
																	"src": "19449:7:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19567:73:9",
															"nodeType": "YulAssignment",
															"src": "19567:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "19589:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19589:3:9"
																		},
																		"nativeSrc": "19589:5:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19589:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19596:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19596:4:9",
																		"type": "",
																		"value": "0x05"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19602:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "19602:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "result",
																				"nativeSrc": "19617:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "19617:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "19611:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "19611:5:9"
																		},
																		"nativeSrc": "19611:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19611:13:9"
																	},
																	{
																		"name": "dataPtr",
																		"nativeSrc": "19626:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "19626:7:9"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19635:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19635:4:9"
																	}
																],
																"functionName": {
																	"name": "staticcall",
																	"nativeSrc": "19578:10:9",
																	"nodeType": "YulIdentifier",
																	"src": "19578:10:9"
																},
																"nativeSrc": "19578:62:9",
																"nodeType": "YulFunctionCall",
																"src": "19578:62:9"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "19567:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "19567:7:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "result",
																		"nativeSrc": "19796:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "19796:6:9"
																	},
																	{
																		"name": "mLen",
																		"nativeSrc": "19804:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "19804:4:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19789:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19789:6:9"
																},
																"nativeSrc": "19789:20:9",
																"nodeType": "YulFunctionCall",
																"src": "19789:20:9"
															},
															"nativeSrc": "19789:20:9",
															"nodeType": "YulExpressionStatement",
															"src": "19789:20:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19892:4:9",
																		"nodeType": "YulLiteral",
																		"src": "19892:4:9",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "dataPtr",
																				"nativeSrc": "19902:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "19902:7:9"
																			},
																			{
																				"name": "mLen",
																				"nativeSrc": "19911:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "19911:4:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19898:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "19898:3:9"
																		},
																		"nativeSrc": "19898:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "19898:18:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19885:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "19885:6:9"
																},
																"nativeSrc": "19885:32:9",
																"nodeType": "YulFunctionCall",
																"src": "19885:32:9"
															},
															"nativeSrc": "19885:32:9",
															"nodeType": "YulExpressionStatement",
															"src": "19885:32:9"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2020,
														"isOffset": false,
														"isSlot": false,
														"src": "19635:4:9",
														"valueSize": 1
													},
													{
														"declaration": 2020,
														"isOffset": false,
														"isSlot": false,
														"src": "19804:4:9",
														"valueSize": 1
													},
													{
														"declaration": 2020,
														"isOffset": false,
														"isSlot": false,
														"src": "19911:4:9",
														"valueSize": 1
													},
													{
														"declaration": 2006,
														"isOffset": false,
														"isSlot": false,
														"src": "19464:6:9",
														"valueSize": 1
													},
													{
														"declaration": 2006,
														"isOffset": false,
														"isSlot": false,
														"src": "19617:6:9",
														"valueSize": 1
													},
													{
														"declaration": 2006,
														"isOffset": false,
														"isSlot": false,
														"src": "19796:6:9",
														"valueSize": 1
													},
													{
														"declaration": 2004,
														"isOffset": false,
														"isSlot": false,
														"src": "19567:7:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2038,
												"nodeType": "InlineAssembly",
												"src": "19406:521:9"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "18914:88:9",
										"text": " @dev Variant of {tryModExp} that supports inputs of arbitrary length."
									},
									"id": 2040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryModExp",
									"nameLocation": "19016:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "19048:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "19035:14:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19035:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "e",
												"nameLocation": "19072:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "19059:14:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19059:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "m",
												"nameLocation": "19096:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "19083:14:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2000,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19083:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19025:78:9"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "19132:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "19127:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19127:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19154:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "19141:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19141:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19126:35:9"
									},
									"scope": 2748,
									"src": "19007:926:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "20088:176:9",
										"statements": [
											{
												"body": {
													"id": 2068,
													"nodeType": "Block",
													"src": "20145:92:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2059,
																		"name": "byteArray",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2043,
																		"src": "20163:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2061,
																	"indexExpression": {
																		"id": 2060,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2049,
																		"src": "20173:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20163:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20179:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20163:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2067,
															"nodeType": "IfStatement",
															"src": "20159:68:9",
															"trueBody": {
																"id": 2066,
																"nodeType": "Block",
																"src": "20182:45:9",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20207:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2047,
																		"id": 2065,
																		"nodeType": "Return",
																		"src": "20200:12:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2052,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "20118:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2053,
															"name": "byteArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2043,
															"src": "20122:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "20132:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "20122:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20118:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2069,
												"initializationExpression": {
													"assignments": [
														2049
													],
													"declarations": [
														{
															"constant": false,
															"id": 2049,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20111:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2069,
															"src": "20103:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2048,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "20103:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2051,
													"initialValue": {
														"hexValue": "30",
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20115:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20103:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "20140:3:9",
														"subExpression": {
															"id": 2056,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2049,
															"src": "20142:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2058,
													"nodeType": "ExpressionStatement",
													"src": "20140:3:9"
												},
												"nodeType": "ForStatement",
												"src": "20098:139:9"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20253:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2047,
												"id": 2071,
												"nodeType": "Return",
												"src": "20246:11:9"
											}
										]
									},
									"documentation": {
										"id": 2041,
										"nodeType": "StructuredDocumentation",
										"src": "19939:72:9",
										"text": " @dev Returns whether the provided byte array is zero."
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_zeroBytes",
									"nameLocation": "20025:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2043,
												"mutability": "mutable",
												"name": "byteArray",
												"nameLocation": "20049:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "20036:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2042,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20036:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20035:24:9"
									},
									"returnParameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "20082:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20082:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20081:6:9"
									},
									"scope": 2748,
									"src": "20016:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "20624:5124:9",
										"statements": [
											{
												"id": 2290,
												"nodeType": "UncheckedBlock",
												"src": "20634:5108:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2081,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "20728:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31",
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20733:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "20728:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "20724:53:9",
														"trueBody": {
															"id": 2086,
															"nodeType": "Block",
															"src": "20736:41:9",
															"statements": [
																{
																	"expression": {
																		"id": 2084,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "20761:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2080,
																	"id": 2085,
																	"nodeType": "Return",
																	"src": "20754:8:9"
																}
															]
														}
													},
													{
														"assignments": [
															2089
														],
														"declarations": [
															{
																"constant": false,
																"id": 2089,
																"mutability": "mutable",
																"name": "aa",
																"nameLocation": "21712:2:9",
																"nodeType": "VariableDeclaration",
																"scope": 2290,
																"src": "21704:10:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21704:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2091,
														"initialValue": {
															"id": 2090,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "21717:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21704:14:9"
													},
													{
														"assignments": [
															2093
														],
														"declarations": [
															{
																"constant": false,
																"id": 2093,
																"mutability": "mutable",
																"name": "xn",
																"nameLocation": "21740:2:9",
																"nodeType": "VariableDeclaration",
																"scope": 2290,
																"src": "21732:10:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2092,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21732:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2095,
														"initialValue": {
															"hexValue": "31",
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21745:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21732:14:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2096,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "21765:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		},
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2097,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21772:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "313238",
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21777:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21772:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1456"
																		}
																	}
																],
																"id": 2100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21771:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																	"typeString": "int_const 3402...(31 digits omitted)...1456"
																}
															},
															"src": "21765:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2111,
														"nodeType": "IfStatement",
														"src": "21761:92:9",
														"trueBody": {
															"id": 2110,
															"nodeType": "Block",
															"src": "21783:70:9",
															"statements": [
																{
																	"expression": {
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2102,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "21801:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21808:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "21801:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2105,
																	"nodeType": "ExpressionStatement",
																	"src": "21801:10:9"
																},
																{
																	"expression": {
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2106,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "21829:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21836:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21829:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2109,
																	"nodeType": "ExpressionStatement",
																	"src": "21829:9:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "21870:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21877:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21882:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21877:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"id": 2116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21876:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18446744073709551616_by_1",
																	"typeString": "int_const 18446744073709551616"
																}
															},
															"src": "21870:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2127,
														"nodeType": "IfStatement",
														"src": "21866:90:9",
														"trueBody": {
															"id": 2126,
															"nodeType": "Block",
															"src": "21887:69:9",
															"statements": [
																{
																	"expression": {
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2118,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "21905:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21912:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21905:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2121,
																	"nodeType": "ExpressionStatement",
																	"src": "21905:9:9"
																},
																{
																	"expression": {
																		"id": 2124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2122,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "21932:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21939:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21932:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2125,
																	"nodeType": "ExpressionStatement",
																	"src": "21932:9:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2128,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "21973:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		},
																		"id": 2131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21980:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3332",
																			"id": 2130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21985:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21980:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967296_by_1",
																			"typeString": "int_const 4294967296"
																		}
																	}
																],
																"id": 2132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21979:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967296_by_1",
																	"typeString": "int_const 4294967296"
																}
															},
															"src": "21973:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2143,
														"nodeType": "IfStatement",
														"src": "21969:90:9",
														"trueBody": {
															"id": 2142,
															"nodeType": "Block",
															"src": "21990:69:9",
															"statements": [
																{
																	"expression": {
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2134,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "22008:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22015:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "22008:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2137,
																	"nodeType": "ExpressionStatement",
																	"src": "22008:9:9"
																},
																{
																	"expression": {
																		"id": 2140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2138,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "22035:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22042:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22035:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2141,
																	"nodeType": "ExpressionStatement",
																	"src": "22035:9:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2144,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "22076:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22083:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3136",
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22088:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22083:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65536_by_1",
																			"typeString": "int_const 65536"
																		}
																	}
																],
																"id": 2148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22082:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_65536_by_1",
																	"typeString": "int_const 65536"
																}
															},
															"src": "22076:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2159,
														"nodeType": "IfStatement",
														"src": "22072:89:9",
														"trueBody": {
															"id": 2158,
															"nodeType": "Block",
															"src": "22093:68:9",
															"statements": [
																{
																	"expression": {
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2150,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "22111:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2151,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22118:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "22111:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2153,
																	"nodeType": "ExpressionStatement",
																	"src": "22111:9:9"
																},
																{
																	"expression": {
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2154,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "22138:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22145:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22138:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2157,
																	"nodeType": "ExpressionStatement",
																	"src": "22138:8:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2160,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "22178:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"id": 2163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22185:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "38",
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22190:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22185:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		}
																	}
																],
																"id": 2164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22184:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_256_by_1",
																	"typeString": "int_const 256"
																}
															},
															"src": "22178:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2175,
														"nodeType": "IfStatement",
														"src": "22174:87:9",
														"trueBody": {
															"id": 2174,
															"nodeType": "Block",
															"src": "22194:67:9",
															"statements": [
																{
																	"expression": {
																		"id": 2168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2166,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "22212:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22219:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22212:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2169,
																	"nodeType": "ExpressionStatement",
																	"src": "22212:8:9"
																},
																{
																	"expression": {
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2170,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "22238:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22245:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22238:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2173,
																	"nodeType": "ExpressionStatement",
																	"src": "22238:8:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2176,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "22278:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"id": 2179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22285:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "34",
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22290:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22285:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		}
																	}
																],
																"id": 2180,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22284:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_16_by_1",
																	"typeString": "int_const 16"
																}
															},
															"src": "22278:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2191,
														"nodeType": "IfStatement",
														"src": "22274:87:9",
														"trueBody": {
															"id": 2190,
															"nodeType": "Block",
															"src": "22294:67:9",
															"statements": [
																{
																	"expression": {
																		"id": 2184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2182,
																			"name": "aa",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2089,
																			"src": "22312:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22319:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22312:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2185,
																	"nodeType": "ExpressionStatement",
																	"src": "22312:8:9"
																},
																{
																	"expression": {
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2186,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "22338:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22345:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22338:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2189,
																	"nodeType": "ExpressionStatement",
																	"src": "22338:8:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2192,
																"name": "aa",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2089,
																"src": "22378:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		},
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22385:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22390:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22385:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4_by_1",
																			"typeString": "int_const 4"
																		}
																	}
																],
																"id": 2196,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22384:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															},
															"src": "22378:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2203,
														"nodeType": "IfStatement",
														"src": "22374:61:9",
														"trueBody": {
															"id": 2202,
															"nodeType": "Block",
															"src": "22394:41:9",
															"statements": [
																{
																	"expression": {
																		"id": 2200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2198,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "22412:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "<<=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22419:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22412:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2201,
																	"nodeType": "ExpressionStatement",
																	"src": "22412:8:9"
																}
															]
														}
													},
													{
														"expression": {
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2204,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "22855:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "33",
																				"id": 2205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22861:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2206,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "22865:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "22861:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2208,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "22860:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22872:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22860:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22855:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2212,
														"nodeType": "ExpressionStatement",
														"src": "22855:18:9"
													},
													{
														"expression": {
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2213,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "24760:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2214,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "24766:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2215,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "24771:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2216,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "24775:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24771:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24766:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2219,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24765:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24782:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24765:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24760:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2223,
														"nodeType": "ExpressionStatement",
														"src": "24760:23:9"
													},
													{
														"expression": {
															"id": 2233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2224,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "24869:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2225,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "24875:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2226,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "24880:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2227,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "24884:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24880:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24875:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2230,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24874:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24891:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24874:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24869:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2234,
														"nodeType": "ExpressionStatement",
														"src": "24869:23:9"
													},
													{
														"expression": {
															"id": 2244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2235,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "24980:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2236,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "24986:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2237,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "24991:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2238,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "24995:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24991:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "24986:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2241,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "24985:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25002:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "24985:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24980:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2245,
														"nodeType": "ExpressionStatement",
														"src": "24980:23:9"
													},
													{
														"expression": {
															"id": 2255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2246,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "25089:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2247,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "25095:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2250,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2248,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "25100:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2249,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "25104:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25100:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25095:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2252,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25094:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25111:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25094:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25089:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2256,
														"nodeType": "ExpressionStatement",
														"src": "25089:23:9"
													},
													{
														"expression": {
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2257,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "25199:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2258,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "25205:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2261,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2259,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "25210:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2260,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "25214:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25210:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25205:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2263,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25204:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25221:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25204:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25199:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2267,
														"nodeType": "ExpressionStatement",
														"src": "25199:23:9"
													},
													{
														"expression": {
															"id": 2277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2268,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "25309:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2269,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "25315:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2270,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "25320:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2271,
																					"name": "xn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2093,
																					"src": "25324:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "25320:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25315:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2274,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "25314:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25331:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "25314:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25309:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2278,
														"nodeType": "ExpressionStatement",
														"src": "25309:23:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2279,
																"name": "xn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2093,
																"src": "25698:2:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2282,
																			"name": "xn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "25719:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2283,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "25724:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2284,
																				"name": "xn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2093,
																				"src": "25728:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "25724:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "25719:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2280,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "25703:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25712:6:9",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4512,
																	"src": "25703:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25703:28:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25698:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2080,
														"id": 2289,
														"nodeType": "Return",
														"src": "25691:40:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "20270:292:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "20576:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20589:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "20581:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20580:11:9"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "20615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20614:9:9"
									},
									"scope": 2748,
									"src": "20567:5181:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "25921:171:9",
										"statements": [
											{
												"id": 2324,
												"nodeType": "UncheckedBlock",
												"src": "25931:155:9",
												"statements": [
													{
														"assignments": [
															2304
														],
														"declarations": [
															{
																"constant": false,
																"id": 2304,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "25963:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2324,
																"src": "25955:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2303,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25955:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2308,
														"initialValue": {
															"arguments": [
																{
																	"id": 2306,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "25977:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2305,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2292,
																	2326
																],
																"referencedDeclaration": 2292,
																"src": "25972:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25972:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25955:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2309,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2304,
																"src": "26000:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2313,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2298,
																					"src": "26042:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2312,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2747,
																				"src": "26025:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1139_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "26025:26:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2315,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2304,
																					"src": "26055:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2316,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2304,
																					"src": "26064:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26055:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2318,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2295,
																				"src": "26073:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26055:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "26025:49:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2310,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "26009:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26018:6:9",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4512,
																	"src": "26009:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26009:66:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26000:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2302,
														"id": 2323,
														"nodeType": "Return",
														"src": "25993:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "25754:86:9",
										"text": " @dev Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "25854:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25867:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "25859:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25859:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "25879:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "25870:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2296,
														"name": "Rounding",
														"nameLocations": [
															"25870:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "25870:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "25870:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25858:30:9"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "25912:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25912:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25911:9:9"
									},
									"scope": 2748,
									"src": "25845:247:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2416,
										"nodeType": "Block",
										"src": "26281:2334:9",
										"statements": [
											{
												"expression": {
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2334,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "26363:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2337,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2329,
																		"src": "26383:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26387:34:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "26383:38:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2335,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "26367:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26376:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "26367:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26367:55:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26426:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "26367:60:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26363:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2344,
												"nodeType": "ExpressionStatement",
												"src": "26363:64:9"
											},
											{
												"expression": {
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2345,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "26503:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2348,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "26525:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2349,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "26530:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26525:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2351,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26524:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26535:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "26524:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2346,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "26508:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26517:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "26508:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26508:46:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26558:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "26508:51:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26503:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2358,
												"nodeType": "ExpressionStatement",
												"src": "26503:56:9"
											},
											{
												"expression": {
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2359,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "26634:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2362,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "26656:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2363,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "26661:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26656:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2365,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26655:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26666:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "26655:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2360,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "26639:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26648:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "26639:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26639:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26681:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "26639:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26634:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2372,
												"nodeType": "ExpressionStatement",
												"src": "26634:48:9"
											},
											{
												"expression": {
													"id": 2385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2373,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "26757:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2378,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2376,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "26779:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2377,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "26784:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26779:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2379,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26778:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26789:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "26778:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2374,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "26762:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26771:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "26762:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26762:34:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26800:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "26762:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26757:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2386,
												"nodeType": "ExpressionStatement",
												"src": "26757:44:9"
											},
											{
												"expression": {
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2387,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "26874:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2390,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "26896:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2391,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "26901:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "26896:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2393,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "26895:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666",
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26906:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_255_by_1",
																			"typeString": "int_const 255"
																		},
																		"value": "0xff"
																	},
																	"src": "26895:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2388,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "26879:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "26888:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "26879:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26879:32:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "33",
															"id": 2397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26915:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "26879:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26874:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2400,
												"nodeType": "ExpressionStatement",
												"src": "26874:42:9"
											},
											{
												"expression": {
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2401,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2332,
														"src": "26988:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2406,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2404,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2329,
																					"src": "27010:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2405,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2332,
																					"src": "27015:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27010:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2407,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "27009:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866",
																		"id": 2408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27020:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_15_by_1",
																			"typeString": "int_const 15"
																		},
																		"value": "0xf"
																	},
																	"src": "27009:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2402,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "26993:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27002:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "26993:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26993:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "32",
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27028:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "26993:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26988:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "26988:41:9"
											},
											{
												"AST": {
													"nativeSrc": "28490:119:9",
													"nodeType": "YulBlock",
													"src": "28490:119:9",
													"statements": [
														{
															"nativeSrc": "28504:95:9",
															"nodeType": "YulAssignment",
															"src": "28504:95:9",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nativeSrc": "28512:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "28512:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "r",
																						"nativeSrc": "28524:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "28524:1:9"
																					},
																					{
																						"name": "x",
																						"nativeSrc": "28527:1:9",
																						"nodeType": "YulIdentifier",
																						"src": "28527:1:9"
																					}
																				],
																				"functionName": {
																					"name": "shr",
																					"nativeSrc": "28520:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "28520:3:9"
																				},
																				"nativeSrc": "28520:9:9",
																				"nodeType": "YulFunctionCall",
																				"src": "28520:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28531:66:9",
																				"nodeType": "YulLiteral",
																				"src": "28531:66:9",
																				"type": "",
																				"value": "0x0000010102020202030303030303030300000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "byte",
																			"nativeSrc": "28515:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "28515:4:9"
																		},
																		"nativeSrc": "28515:83:9",
																		"nodeType": "YulFunctionCall",
																		"src": "28515:83:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "28509:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "28509:2:9"
																},
																"nativeSrc": "28509:90:9",
																"nodeType": "YulFunctionCall",
																"src": "28509:90:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "28504:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "28504:1:9"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2332,
														"isOffset": false,
														"isSlot": false,
														"src": "28504:1:9",
														"valueSize": 1
													},
													{
														"declaration": 2332,
														"isOffset": false,
														"isSlot": false,
														"src": "28512:1:9",
														"valueSize": 1
													},
													{
														"declaration": 2332,
														"isOffset": false,
														"isSlot": false,
														"src": "28524:1:9",
														"valueSize": 1
													},
													{
														"declaration": 2329,
														"isOffset": false,
														"isSlot": false,
														"src": "28527:1:9",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2415,
												"nodeType": "InlineAssembly",
												"src": "28465:144:9"
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "26098:119:9",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "26231:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "26244:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "26236:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26236:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26235:11:9"
									},
									"returnParameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "26278:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2417,
												"src": "26270:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26270:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26269:11:9"
									},
									"scope": 2748,
									"src": "26222:2393:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2450,
										"nodeType": "Block",
										"src": "28848:175:9",
										"statements": [
											{
												"id": 2449,
												"nodeType": "UncheckedBlock",
												"src": "28858:159:9",
												"statements": [
													{
														"assignments": [
															2429
														],
														"declarations": [
															{
																"constant": false,
																"id": 2429,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "28890:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2449,
																"src": "28882:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "28882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2433,
														"initialValue": {
															"arguments": [
																{
																	"id": 2431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2420,
																	"src": "28904:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2430,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2417,
																	2451
																],
																"referencedDeclaration": 2417,
																"src": "28899:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28899:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "28882:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2434,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "28931:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2438,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2423,
																					"src": "28973:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2437,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2747,
																				"src": "28956:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1139_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "28956:26:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "28986:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 2441,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2429,
																					"src": "28991:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "28986:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2443,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2420,
																				"src": "29000:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "28986:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "28956:49:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2435,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "28940:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28949:6:9",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4512,
																	"src": "28940:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28940:66:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28931:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2427,
														"id": 2448,
														"nodeType": "Return",
														"src": "28924:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2418,
										"nodeType": "StructuredDocumentation",
										"src": "28621:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "28777:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28790:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "28782:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28782:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "28806:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "28797:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2421,
														"name": "Rounding",
														"nameLocations": [
															"28797:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "28797:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "28797:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28781:34:9"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2451,
												"src": "28839:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28839:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28838:9:9"
									},
									"scope": 2748,
									"src": "28768:255:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2579,
										"nodeType": "Block",
										"src": "29216:854:9",
										"statements": [
											{
												"assignments": [
													2460
												],
												"declarations": [
													{
														"constant": false,
														"id": 2460,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "29234:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2579,
														"src": "29226:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2459,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29226:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2462,
												"initialValue": {
													"hexValue": "30",
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "29243:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29226:18:9"
											},
											{
												"id": 2576,
												"nodeType": "UncheckedBlock",
												"src": "29254:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2463,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29282:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29291:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29297:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "29291:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "29282:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2479,
														"nodeType": "IfStatement",
														"src": "29278:103:9",
														"trueBody": {
															"id": 2478,
															"nodeType": "Block",
															"src": "29301:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2468,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "29319:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29328:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29334:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "29328:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "29319:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2473,
																	"nodeType": "ExpressionStatement",
																	"src": "29319:17:9"
																},
																{
																	"expression": {
																		"id": 2476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2474,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "29354:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2475,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29364:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "29354:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2477,
																	"nodeType": "ExpressionStatement",
																	"src": "29354:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2480,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29398:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29407:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29413:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "29407:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "29398:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2496,
														"nodeType": "IfStatement",
														"src": "29394:103:9",
														"trueBody": {
															"id": 2495,
															"nodeType": "Block",
															"src": "29417:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2485,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "29435:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29444:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2487,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29450:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "29444:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "29435:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "29435:17:9"
																},
																{
																	"expression": {
																		"id": 2493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2491,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "29470:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29480:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "29470:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2494,
																	"nodeType": "ExpressionStatement",
																	"src": "29470:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2497,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29514:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29523:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29529:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "29523:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "29514:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2513,
														"nodeType": "IfStatement",
														"src": "29510:103:9",
														"trueBody": {
															"id": 2512,
															"nodeType": "Block",
															"src": "29533:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2506,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "29551:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2503,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29560:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29566:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "29560:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "29551:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2507,
																	"nodeType": "ExpressionStatement",
																	"src": "29551:17:9"
																},
																{
																	"expression": {
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2508,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "29586:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29596:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "29586:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2511,
																	"nodeType": "ExpressionStatement",
																	"src": "29586:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2514,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29630:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29639:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29645:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "29639:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "29630:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2530,
														"nodeType": "IfStatement",
														"src": "29626:100:9",
														"trueBody": {
															"id": 2529,
															"nodeType": "Block",
															"src": "29648:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2519,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "29666:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29675:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2521,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29681:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "29675:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "29666:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2524,
																	"nodeType": "ExpressionStatement",
																	"src": "29666:16:9"
																},
																{
																	"expression": {
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2525,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "29700:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29710:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "29700:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2528,
																	"nodeType": "ExpressionStatement",
																	"src": "29700:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29743:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29752:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29758:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "29752:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "29743:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2547,
														"nodeType": "IfStatement",
														"src": "29739:100:9",
														"trueBody": {
															"id": 2546,
															"nodeType": "Block",
															"src": "29761:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "29779:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29788:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29794:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "29788:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "29779:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2541,
																	"nodeType": "ExpressionStatement",
																	"src": "29779:16:9"
																},
																{
																	"expression": {
																		"id": 2544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2542,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "29813:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29823:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "29813:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2545,
																	"nodeType": "ExpressionStatement",
																	"src": "29813:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2548,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29856:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29865:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29871:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "29865:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "29856:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2564,
														"nodeType": "IfStatement",
														"src": "29852:100:9",
														"trueBody": {
															"id": 2563,
															"nodeType": "Block",
															"src": "29874:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "29892:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2554,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29901:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29907:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "29901:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "29892:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "29892:16:9"
																},
																{
																	"expression": {
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2559,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "29926:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29936:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "29926:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2562,
																	"nodeType": "ExpressionStatement",
																	"src": "29926:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2565,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2454,
																"src": "29969:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29978:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29984:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "29978:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "29969:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2575,
														"nodeType": "IfStatement",
														"src": "29965:66:9",
														"trueBody": {
															"id": 2574,
															"nodeType": "Block",
															"src": "29987:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2460,
																			"src": "30005:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "30015:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "30005:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "30005:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2577,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2460,
													"src": "30057:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2578,
												"nodeType": "Return",
												"src": "30050:13:9"
											}
										]
									},
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "29029:120:9",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "29163:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29177:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "29169:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29169:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29168:15:9"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2580,
												"src": "29207:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29207:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29206:9:9"
									},
									"scope": 2748,
									"src": "29154:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "30305:177:9",
										"statements": [
											{
												"id": 2612,
												"nodeType": "UncheckedBlock",
												"src": "30315:161:9",
												"statements": [
													{
														"assignments": [
															2592
														],
														"declarations": [
															{
																"constant": false,
																"id": 2592,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "30347:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2612,
																"src": "30339:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2591,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30339:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2596,
														"initialValue": {
															"arguments": [
																{
																	"id": 2594,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2583,
																	"src": "30362:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2593,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2580,
																	2614
																],
																"referencedDeclaration": 2580,
																"src": "30356:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30356:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30339:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2597,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2592,
																"src": "30389:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2601,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2586,
																					"src": "30431:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2600,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2747,
																				"src": "30414:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1139_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30414:26:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2603,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30444:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2604,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2592,
																					"src": "30450:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "30444:12:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2606,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2583,
																				"src": "30459:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "30444:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "30414:50:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2598,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "30398:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "30407:6:9",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4512,
																	"src": "30398:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30398:67:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30389:76:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2590,
														"id": 2611,
														"nodeType": "Return",
														"src": "30382:83:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2581,
										"nodeType": "StructuredDocumentation",
										"src": "30076:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "30233:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30247:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "30239:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "30263:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "30254:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2585,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2584,
														"name": "Rounding",
														"nameLocations": [
															"30254:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "30254:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "30254:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:34:9"
									},
									"returnParameters": {
										"id": 2590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "30296:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30296:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30295:9:9"
									},
									"scope": 2748,
									"src": "30224:258:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2690,
										"nodeType": "Block",
										"src": "30800:675:9",
										"statements": [
											{
												"expression": {
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2622,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "30882:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2625,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2617,
																		"src": "30902:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666666666666666666666666666666666666666666666666666",
																		"id": 2626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30906:34:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_340282366920938463463374607431768211455_by_1",
																			"typeString": "int_const 3402...(31 digits omitted)...1455"
																		},
																		"value": "0xffffffffffffffffffffffffffffffff"
																	},
																	"src": "30902:38:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2623,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "30886:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30895:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "30886:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30886:55:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "37",
															"id": 2629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30945:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7_by_1",
																"typeString": "int_const 7"
															},
															"value": "7"
														},
														"src": "30886:60:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30882:64:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2632,
												"nodeType": "ExpressionStatement",
												"src": "30882:64:9"
											},
											{
												"expression": {
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2633,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "31022:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2636,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2617,
																					"src": "31044:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2637,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "31049:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31044:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2639,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31043:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666666666666666666666666666",
																		"id": 2640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31054:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551615_by_1",
																			"typeString": "int_const 18446744073709551615"
																		},
																		"value": "0xffffffffffffffff"
																	},
																	"src": "31043:29:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2634,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "31027:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31036:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "31027:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31027:46:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "36",
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31077:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_6_by_1",
																"typeString": "int_const 6"
															},
															"value": "6"
														},
														"src": "31027:51:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31022:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "31022:56:9"
											},
											{
												"expression": {
													"id": 2659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2647,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "31153:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2650,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2617,
																					"src": "31175:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2651,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "31180:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31175:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2653,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31174:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30786666666666666666",
																		"id": 2654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31185:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4294967295_by_1",
																			"typeString": "int_const 4294967295"
																		},
																		"value": "0xffffffff"
																	},
																	"src": "31174:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2648,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "31158:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31167:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "31158:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31158:38:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "35",
															"id": 2657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31200:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"src": "31158:43:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31153:48:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2660,
												"nodeType": "ExpressionStatement",
												"src": "31153:48:9"
											},
											{
												"expression": {
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2661,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2620,
														"src": "31276:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2666,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2664,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2617,
																					"src": "31298:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"id": 2665,
																					"name": "r",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2620,
																					"src": "31303:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31298:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2667,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "31297:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "307866666666",
																		"id": 2668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31308:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_65535_by_1",
																			"typeString": "int_const 65535"
																		},
																		"value": "0xffff"
																	},
																	"src": "31297:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"expression": {
																	"id": 2662,
																	"name": "SafeCast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4513,
																	"src": "31281:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																		"typeString": "type(library SafeCast)"
																	}
																},
																"id": 2663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "31290:6:9",
																"memberName": "toUint",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4512,
																"src": "31281:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																	"typeString": "function (bool) pure returns (uint256)"
																}
															},
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31281:34:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<<",
														"rightExpression": {
															"hexValue": "34",
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31319:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"src": "31281:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31276:44:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2674,
												"nodeType": "ExpressionStatement",
												"src": "31276:44:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2675,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "31426:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31431:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "31426:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2678,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "31425:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2681,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2617,
																				"src": "31453:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"id": 2682,
																				"name": "r",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2620,
																				"src": "31458:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31453:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2684,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "31452:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30786666",
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31463:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "0xff"
																},
																"src": "31452:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"expression": {
																"id": 2679,
																"name": "SafeCast",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4513,
																"src": "31436:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																	"typeString": "type(library SafeCast)"
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31445:6:9",
															"memberName": "toUint",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4512,
															"src": "31436:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																"typeString": "function (bool) pure returns (uint256)"
															}
														},
														"id": 2687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31436:32:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31425:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2621,
												"id": 2689,
												"nodeType": "Return",
												"src": "31418:50:9"
											}
										]
									},
									"documentation": {
										"id": 2615,
										"nodeType": "StructuredDocumentation",
										"src": "30488:246:9",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "30748:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "30763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "30755:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30755:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30754:11:9"
									},
									"returnParameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "30797:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "30789:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30789:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30788:11:9"
									},
									"scope": 2748,
									"src": "30739:736:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2727,
										"nodeType": "Block",
										"src": "31712:184:9",
										"statements": [
											{
												"id": 2726,
												"nodeType": "UncheckedBlock",
												"src": "31722:168:9",
												"statements": [
													{
														"assignments": [
															2703
														],
														"declarations": [
															{
																"constant": false,
																"id": 2703,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "31754:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2726,
																"src": "31746:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2702,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31746:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2707,
														"initialValue": {
															"arguments": [
																{
																	"id": 2705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2694,
																	"src": "31770:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2704,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2691,
																	2728
																],
																"referencedDeclaration": 2691,
																"src": "31763:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31763:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31746:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2708,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2703,
																"src": "31797:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2712,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2697,
																					"src": "31839:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_enum$_Rounding_$1139",
																						"typeString": "enum Math.Rounding"
																					}
																				],
																				"id": 2711,
																				"name": "unsignedRoundsUp",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2747,
																				"src": "31822:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1139_$returns$_t_bool_$",
																					"typeString": "function (enum Math.Rounding) pure returns (bool)"
																				}
																			},
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "31822:26:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2714,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "31852:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2717,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2715,
																								"name": "result",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2703,
																								"src": "31858:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "<<",
																							"rightExpression": {
																								"hexValue": "33",
																								"id": 2716,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "31868:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_3_by_1",
																									"typeString": "int_const 3"
																								},
																								"value": "3"
																							},
																							"src": "31858:11:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2718,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "31857:13:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "31852:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2720,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2694,
																				"src": "31873:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31852:26:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "31822:56:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"expression": {
																		"id": 2709,
																		"name": "SafeCast",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4513,
																		"src": "31806:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_SafeCast_$4513_$",
																			"typeString": "type(library SafeCast)"
																		}
																	},
																	"id": 2710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31815:6:9",
																	"memberName": "toUint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4512,
																	"src": "31806:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bool_$returns$_t_uint256_$",
																		"typeString": "function (bool) pure returns (uint256)"
																	}
																},
																"id": 2723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31806:73:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31797:82:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2701,
														"id": 2725,
														"nodeType": "Return",
														"src": "31790:89:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2692,
										"nodeType": "StructuredDocumentation",
										"src": "31481:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2728,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "31639:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31654:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "31646:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "31670:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "31661:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2696,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2695,
														"name": "Rounding",
														"nameLocations": [
															"31661:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "31661:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "31661:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31645:34:9"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2728,
												"src": "31703:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31702:9:9"
									},
									"scope": 2748,
									"src": "31630:266:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2746,
										"nodeType": "Block",
										"src": "32094:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2739,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2732,
																	"src": "32117:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1139",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1139",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "32111:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2737,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "32111:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32111:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "32129:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "32111:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32134:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "32111:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2736,
												"id": 2745,
												"nodeType": "Return",
												"src": "32104:31:9"
											}
										]
									},
									"documentation": {
										"id": 2729,
										"nodeType": "StructuredDocumentation",
										"src": "31902:113:9",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "32029:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2732,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "32055:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "32046:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1139",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2730,
														"name": "Rounding",
														"nameLocations": [
															"32046:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1139,
														"src": "32046:8:9"
													},
													"referencedDeclaration": 1139,
													"src": "32046:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1139",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32045:19:9"
									},
									"returnParameters": {
										"id": 2736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2747,
												"src": "32088:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32088:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32087:6:9"
									},
									"scope": 2748,
									"src": "32020:122:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2749,
							"src": "281:31863:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:32042:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							4513
						]
					},
					"id": 4514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2750,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2751,
								"nodeType": "StructuredDocumentation",
								"src": "218:550:10",
								"text": " @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 4513,
							"linearizedBaseContracts": [
								4513
							],
							"name": "SafeCast",
							"nameLocation": "777:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2752,
										"nodeType": "StructuredDocumentation",
										"src": "792:68:10",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2758,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "871:30:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "908:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "902:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2753,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "902:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "922:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2758,
												"src": "914:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:27:10"
									},
									"src": "865:64:10"
								},
								{
									"documentation": {
										"id": 2759,
										"nodeType": "StructuredDocumentation",
										"src": "935:75:10",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2763,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1021:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1056:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2763,
												"src": "1049:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2760,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:14:10"
									},
									"src": "1015:48:10"
								},
								{
									"documentation": {
										"id": 2764,
										"nodeType": "StructuredDocumentation",
										"src": "1069:67:10",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2770,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1147:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2766,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1183:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "1177:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2765,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1177:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1196:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "1189:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2767,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1189:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:26:10"
									},
									"src": "1141:62:10"
								},
								{
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "1209:75:10",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2775,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1295:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1331:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2775,
												"src": "1323:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:15:10"
									},
									"src": "1289:49:10"
								},
								{
									"body": {
										"id": 2802,
										"nodeType": "Block",
										"src": "1695:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2783,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2778,
														"src": "1709:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1722:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2785,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1722:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2784,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1717:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1717:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1731:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1717:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1709:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2796,
												"nodeType": "IfStatement",
												"src": "1705:105:10",
												"trueBody": {
													"id": 2795,
													"nodeType": "Block",
													"src": "1736:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1788:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2792,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2778,
																		"src": "1793:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2790,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "1757:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1757:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2794,
															"nodeType": "RevertStatement",
															"src": "1750:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2799,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2778,
															"src": "1834:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1826:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2797,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1826:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1826:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2782,
												"id": 2801,
												"nodeType": "Return",
												"src": "1819:21:10"
											}
										]
									},
									"documentation": {
										"id": 2776,
										"nodeType": "StructuredDocumentation",
										"src": "1344:280:10",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1638:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1656:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1648:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1648:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:15:10"
									},
									"returnParameters": {
										"id": 2782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2803,
												"src": "1686:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2780,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:9:10"
									},
									"scope": 4513,
									"src": "1629:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2830,
										"nodeType": "Block",
										"src": "2204:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2811,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "2218:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2231:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2813,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2231:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2812,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2226:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2226:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2816,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2240:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2226:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2218:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2824,
												"nodeType": "IfStatement",
												"src": "2214:105:10",
												"trueBody": {
													"id": 2823,
													"nodeType": "Block",
													"src": "2245:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2297:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2820,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2806,
																		"src": "2302:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2818,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "2266:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2266:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2822,
															"nodeType": "RevertStatement",
															"src": "2259:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2827,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2806,
															"src": "2343:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2335:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2825,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2335:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2335:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2810,
												"id": 2829,
												"nodeType": "Return",
												"src": "2328:21:10"
											}
										]
									},
									"documentation": {
										"id": 2804,
										"nodeType": "StructuredDocumentation",
										"src": "1853:280:10",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2147:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2165:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "2157:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2156:15:10"
									},
									"returnParameters": {
										"id": 2810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "2195:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2808,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:9:10"
									},
									"scope": 4513,
									"src": "2138:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2858,
										"nodeType": "Block",
										"src": "2713:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2839,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2834,
														"src": "2727:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2740:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2841,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2740:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2840,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2735:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2735:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2749:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2735:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2727:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2852,
												"nodeType": "IfStatement",
												"src": "2723:105:10",
												"trueBody": {
													"id": 2851,
													"nodeType": "Block",
													"src": "2754:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2848,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2834,
																		"src": "2811:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2846,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "2775:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2775:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2850,
															"nodeType": "RevertStatement",
															"src": "2768:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2834,
															"src": "2852:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2844:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2853,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2844:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2838,
												"id": 2857,
												"nodeType": "Return",
												"src": "2837:21:10"
											}
										]
									},
									"documentation": {
										"id": 2832,
										"nodeType": "StructuredDocumentation",
										"src": "2362:280:10",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2656:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2834,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2674:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "2666:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:15:10"
									},
									"returnParameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "2704:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2836,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2703:9:10"
									},
									"scope": 4513,
									"src": "2647:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2886,
										"nodeType": "Block",
										"src": "3222:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2867,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2862,
														"src": "3236:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2869,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2868,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3244:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3244:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3258:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3244:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3236:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2880,
												"nodeType": "IfStatement",
												"src": "3232:105:10",
												"trueBody": {
													"id": 2879,
													"nodeType": "Block",
													"src": "3263:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3315:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2876,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2862,
																		"src": "3320:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2874,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "3284:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3284:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2878,
															"nodeType": "RevertStatement",
															"src": "3277:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2883,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "3361:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3353:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2881,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3353:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3353:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2866,
												"id": 2885,
												"nodeType": "Return",
												"src": "3346:21:10"
											}
										]
									},
									"documentation": {
										"id": 2860,
										"nodeType": "StructuredDocumentation",
										"src": "2871:280:10",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3165:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2862,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3183:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "3175:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3175:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3174:15:10"
									},
									"returnParameters": {
										"id": 2866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "3213:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2864,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3213:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:9:10"
									},
									"scope": 4513,
									"src": "3156:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2914,
										"nodeType": "Block",
										"src": "3731:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2895,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "3745:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3758:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2897,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3758:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2896,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3753:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3753:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2900,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3767:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3753:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3745:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2908,
												"nodeType": "IfStatement",
												"src": "3741:105:10",
												"trueBody": {
													"id": 2907,
													"nodeType": "Block",
													"src": "3772:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3824:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2904,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2890,
																		"src": "3829:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2902,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "3793:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3793:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2906,
															"nodeType": "RevertStatement",
															"src": "3786:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2911,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "3870:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3862:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2909,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3862:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2894,
												"id": 2913,
												"nodeType": "Return",
												"src": "3855:21:10"
											}
										]
									},
									"documentation": {
										"id": 2888,
										"nodeType": "StructuredDocumentation",
										"src": "3380:280:10",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3674:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3692:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3684:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3683:15:10"
									},
									"returnParameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2915,
												"src": "3722:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2892,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3722:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3721:9:10"
									},
									"scope": 4513,
									"src": "3665:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2942,
										"nodeType": "Block",
										"src": "4240:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2923,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2918,
														"src": "4254:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4267:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2925,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4267:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2924,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4262:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4262:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4276:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4262:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4254:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2936,
												"nodeType": "IfStatement",
												"src": "4250:105:10",
												"trueBody": {
													"id": 2935,
													"nodeType": "Block",
													"src": "4281:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4333:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2932,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2918,
																		"src": "4338:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2930,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "4302:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4302:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2934,
															"nodeType": "RevertStatement",
															"src": "4295:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2939,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2918,
															"src": "4379:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4371:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2937,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4371:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4371:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2922,
												"id": 2941,
												"nodeType": "Return",
												"src": "4364:21:10"
											}
										]
									},
									"documentation": {
										"id": 2916,
										"nodeType": "StructuredDocumentation",
										"src": "3889:280:10",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4183:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2918,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4201:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "4193:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:15:10"
									},
									"returnParameters": {
										"id": 2922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2943,
												"src": "4231:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2920,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4231:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4230:9:10"
									},
									"scope": 4513,
									"src": "4174:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2970,
										"nodeType": "Block",
										"src": "4749:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2951,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2946,
														"src": "4763:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4776:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2953,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4776:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2952,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4771:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4771:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4785:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4771:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4763:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2964,
												"nodeType": "IfStatement",
												"src": "4759:105:10",
												"trueBody": {
													"id": 2963,
													"nodeType": "Block",
													"src": "4790:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4842:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2960,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2946,
																		"src": "4847:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2958,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "4811:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2961,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4811:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2962,
															"nodeType": "RevertStatement",
															"src": "4804:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2967,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2946,
															"src": "4888:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2966,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4880:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2965,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4880:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4880:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2950,
												"id": 2969,
												"nodeType": "Return",
												"src": "4873:21:10"
											}
										]
									},
									"documentation": {
										"id": 2944,
										"nodeType": "StructuredDocumentation",
										"src": "4398:280:10",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4692:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2946,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4710:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "4702:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4702:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4701:15:10"
									},
									"returnParameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2971,
												"src": "4740:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2948,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4740:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4739:9:10"
									},
									"scope": 4513,
									"src": "4683:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2998,
										"nodeType": "Block",
										"src": "5258:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2979,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2974,
														"src": "5272:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5285:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2981,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5285:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2980,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5280:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5280:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5294:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5280:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5272:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2992,
												"nodeType": "IfStatement",
												"src": "5268:105:10",
												"trueBody": {
													"id": 2991,
													"nodeType": "Block",
													"src": "5299:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5351:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2988,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2974,
																		"src": "5356:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2986,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "5320:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5320:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2990,
															"nodeType": "RevertStatement",
															"src": "5313:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2995,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2974,
															"src": "5397:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5389:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2993,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5389:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2978,
												"id": 2997,
												"nodeType": "Return",
												"src": "5382:21:10"
											}
										]
									},
									"documentation": {
										"id": 2972,
										"nodeType": "StructuredDocumentation",
										"src": "4907:280:10",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2999,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5201:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5219:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "5211:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5211:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5210:15:10"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2999,
												"src": "5249:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2976,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5249:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5248:9:10"
									},
									"scope": 4513,
									"src": "5192:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3026,
										"nodeType": "Block",
										"src": "5767:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3007,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "5781:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5794:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 3009,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5794:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 3008,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5789:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5789:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 3012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5803:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5789:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5781:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3020,
												"nodeType": "IfStatement",
												"src": "5777:105:10",
												"trueBody": {
													"id": 3019,
													"nodeType": "Block",
													"src": "5808:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5860:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3016,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3002,
																		"src": "5865:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3014,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "5829:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5829:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3018,
															"nodeType": "RevertStatement",
															"src": "5822:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3023,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3002,
															"src": "5906:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5898:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 3021,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5898:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 3006,
												"id": 3025,
												"nodeType": "Return",
												"src": "5891:21:10"
											}
										]
									},
									"documentation": {
										"id": 3000,
										"nodeType": "StructuredDocumentation",
										"src": "5416:280:10",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5710:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5728:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "5720:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5720:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:15:10"
									},
									"returnParameters": {
										"id": 3006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "5758:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 3004,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5758:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:9:10"
									},
									"scope": 4513,
									"src": "5701:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3054,
										"nodeType": "Block",
										"src": "6276:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3035,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3030,
														"src": "6290:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6303:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 3037,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6303:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 3036,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6298:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 3040,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6312:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6298:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6290:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3048,
												"nodeType": "IfStatement",
												"src": "6286:105:10",
												"trueBody": {
													"id": 3047,
													"nodeType": "Block",
													"src": "6317:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6369:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3044,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3030,
																		"src": "6374:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3042,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "6338:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6338:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3046,
															"nodeType": "RevertStatement",
															"src": "6331:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3051,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3030,
															"src": "6415:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3050,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6407:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 3049,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6407:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6407:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 3034,
												"id": 3053,
												"nodeType": "Return",
												"src": "6400:21:10"
											}
										]
									},
									"documentation": {
										"id": 3028,
										"nodeType": "StructuredDocumentation",
										"src": "5925:280:10",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3055,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6219:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6237:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "6229:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6229:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6228:15:10"
									},
									"returnParameters": {
										"id": 3034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3055,
												"src": "6267:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 3032,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6267:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6266:9:10"
									},
									"scope": 4513,
									"src": "6210:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "6785:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3063,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3058,
														"src": "6799:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6812:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 3065,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6812:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 3064,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6807:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6807:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 3068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6821:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6807:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6799:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3076,
												"nodeType": "IfStatement",
												"src": "6795:105:10",
												"trueBody": {
													"id": 3075,
													"nodeType": "Block",
													"src": "6826:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6878:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3072,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3058,
																		"src": "6883:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3070,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "6847:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6847:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3074,
															"nodeType": "RevertStatement",
															"src": "6840:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3079,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3058,
															"src": "6924:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6916:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 3077,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6916:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6916:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 3062,
												"id": 3081,
												"nodeType": "Return",
												"src": "6909:21:10"
											}
										]
									},
									"documentation": {
										"id": 3056,
										"nodeType": "StructuredDocumentation",
										"src": "6434:280:10",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6728:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "6738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6737:15:10"
									},
									"returnParameters": {
										"id": 3062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "6776:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 3060,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:9:10"
									},
									"scope": 4513,
									"src": "6719:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3110,
										"nodeType": "Block",
										"src": "7294:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3091,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3086,
														"src": "7308:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7321:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 3093,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7321:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 3092,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7316:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7316:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 3096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7330:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7316:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7308:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3104,
												"nodeType": "IfStatement",
												"src": "7304:105:10",
												"trueBody": {
													"id": 3103,
													"nodeType": "Block",
													"src": "7335:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7387:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3100,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3086,
																		"src": "7392:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3098,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "7356:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7356:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3102,
															"nodeType": "RevertStatement",
															"src": "7349:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3107,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3086,
															"src": "7433:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7425:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 3105,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7425:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7425:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 3090,
												"id": 3109,
												"nodeType": "Return",
												"src": "7418:21:10"
											}
										]
									},
									"documentation": {
										"id": 3084,
										"nodeType": "StructuredDocumentation",
										"src": "6943:280:10",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7237:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7255:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "7247:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7247:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7246:15:10"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3111,
												"src": "7285:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 3088,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7284:9:10"
									},
									"scope": 4513,
									"src": "7228:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3138,
										"nodeType": "Block",
										"src": "7803:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3119,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3114,
														"src": "7817:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7830:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 3121,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7830:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 3120,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7825:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7825:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 3124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7839:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7825:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7817:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3132,
												"nodeType": "IfStatement",
												"src": "7813:105:10",
												"trueBody": {
													"id": 3131,
													"nodeType": "Block",
													"src": "7844:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7896:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3128,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3114,
																		"src": "7901:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3126,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "7865:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7865:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3130,
															"nodeType": "RevertStatement",
															"src": "7858:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3135,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3114,
															"src": "7942:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7934:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 3133,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7934:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7934:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 3118,
												"id": 3137,
												"nodeType": "Return",
												"src": "7927:21:10"
											}
										]
									},
									"documentation": {
										"id": 3112,
										"nodeType": "StructuredDocumentation",
										"src": "7452:280:10",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7746:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7764:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "7756:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7756:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:15:10"
									},
									"returnParameters": {
										"id": 3118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3139,
												"src": "7794:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 3116,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7794:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7793:9:10"
									},
									"scope": 4513,
									"src": "7737:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3166,
										"nodeType": "Block",
										"src": "8312:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3147,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "8326:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8339:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 3149,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8339:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 3148,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8334:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3151,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8334:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 3152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8348:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8334:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8326:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3160,
												"nodeType": "IfStatement",
												"src": "8322:105:10",
												"trueBody": {
													"id": 3159,
													"nodeType": "Block",
													"src": "8353:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8405:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3156,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3142,
																		"src": "8410:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3154,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "8374:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8374:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3158,
															"nodeType": "RevertStatement",
															"src": "8367:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3163,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "8451:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8443:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 3161,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8443:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 3146,
												"id": 3165,
												"nodeType": "Return",
												"src": "8436:21:10"
											}
										]
									},
									"documentation": {
										"id": 3140,
										"nodeType": "StructuredDocumentation",
										"src": "7961:280:10",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8255:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3142,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8273:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "8265:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8265:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8264:15:10"
									},
									"returnParameters": {
										"id": 3146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3167,
												"src": "8303:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 3144,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8303:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8302:9:10"
									},
									"scope": 4513,
									"src": "8246:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3194,
										"nodeType": "Block",
										"src": "8821:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3175,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3170,
														"src": "8835:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8848:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 3177,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8848:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 3176,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8843:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8843:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 3180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8857:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8843:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8835:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3188,
												"nodeType": "IfStatement",
												"src": "8831:105:10",
												"trueBody": {
													"id": 3187,
													"nodeType": "Block",
													"src": "8862:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8914:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3184,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3170,
																		"src": "8919:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3182,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "8883:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8883:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3186,
															"nodeType": "RevertStatement",
															"src": "8876:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3191,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3170,
															"src": "8960:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8952:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 3189,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8952:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 3174,
												"id": 3193,
												"nodeType": "Return",
												"src": "8945:21:10"
											}
										]
									},
									"documentation": {
										"id": 3168,
										"nodeType": "StructuredDocumentation",
										"src": "8470:280:10",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8764:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8782:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "8774:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8774:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:15:10"
									},
									"returnParameters": {
										"id": 3174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3195,
												"src": "8812:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 3172,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8812:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8811:9:10"
									},
									"scope": 4513,
									"src": "8755:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3222,
										"nodeType": "Block",
										"src": "9330:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3203,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3198,
														"src": "9344:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9357:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 3205,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9357:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 3204,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9352:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9352:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 3208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9366:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9352:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9344:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3216,
												"nodeType": "IfStatement",
												"src": "9340:105:10",
												"trueBody": {
													"id": 3215,
													"nodeType": "Block",
													"src": "9371:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9423:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3212,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3198,
																		"src": "9428:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3210,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "9392:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9392:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3214,
															"nodeType": "RevertStatement",
															"src": "9385:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3219,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3198,
															"src": "9469:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9461:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 3217,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9461:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 3202,
												"id": 3221,
												"nodeType": "Return",
												"src": "9454:21:10"
											}
										]
									},
									"documentation": {
										"id": 3196,
										"nodeType": "StructuredDocumentation",
										"src": "8979:280:10",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9273:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9291:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3223,
												"src": "9283:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9283:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9282:15:10"
									},
									"returnParameters": {
										"id": 3202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3223,
												"src": "9321:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 3200,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9321:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9320:9:10"
									},
									"scope": 4513,
									"src": "9264:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3250,
										"nodeType": "Block",
										"src": "9839:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3231,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3226,
														"src": "9853:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9866:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 3233,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9866:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 3232,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9861:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 3236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9875:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9861:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9853:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3244,
												"nodeType": "IfStatement",
												"src": "9849:105:10",
												"trueBody": {
													"id": 3243,
													"nodeType": "Block",
													"src": "9880:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9932:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3240,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3226,
																		"src": "9937:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3238,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "9901:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9901:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3242,
															"nodeType": "RevertStatement",
															"src": "9894:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3247,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3226,
															"src": "9978:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9970:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 3245,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9970:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9970:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 3230,
												"id": 3249,
												"nodeType": "Return",
												"src": "9963:21:10"
											}
										]
									},
									"documentation": {
										"id": 3224,
										"nodeType": "StructuredDocumentation",
										"src": "9488:280:10",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9782:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9800:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "9792:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9792:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9791:15:10"
									},
									"returnParameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3251,
												"src": "9830:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 3228,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9830:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9829:9:10"
									},
									"scope": 4513,
									"src": "9773:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3278,
										"nodeType": "Block",
										"src": "10348:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3259,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3254,
														"src": "10362:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10375:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 3261,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10375:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 3260,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10370:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10370:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 3264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10384:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10370:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10362:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3272,
												"nodeType": "IfStatement",
												"src": "10358:105:10",
												"trueBody": {
													"id": 3271,
													"nodeType": "Block",
													"src": "10389:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10441:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3268,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3254,
																		"src": "10446:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3266,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "10410:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10410:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3270,
															"nodeType": "RevertStatement",
															"src": "10403:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3275,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3254,
															"src": "10487:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10479:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 3273,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10479:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10479:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 3258,
												"id": 3277,
												"nodeType": "Return",
												"src": "10472:21:10"
											}
										]
									},
									"documentation": {
										"id": 3252,
										"nodeType": "StructuredDocumentation",
										"src": "9997:280:10",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10291:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3254,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10309:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3279,
												"src": "10301:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10301:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10300:15:10"
									},
									"returnParameters": {
										"id": 3258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3279,
												"src": "10339:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 3256,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:9:10"
									},
									"scope": 4513,
									"src": "10282:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3306,
										"nodeType": "Block",
										"src": "10857:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3287,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3282,
														"src": "10871:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10884:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 3289,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10884:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 3288,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10879:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10879:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 3292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10893:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10879:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10871:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3300,
												"nodeType": "IfStatement",
												"src": "10867:105:10",
												"trueBody": {
													"id": 3299,
													"nodeType": "Block",
													"src": "10898:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10950:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3296,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3282,
																		"src": "10955:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3294,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "10919:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10919:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3298,
															"nodeType": "RevertStatement",
															"src": "10912:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3303,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3282,
															"src": "10996:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10988:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 3301,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10988:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10988:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 3286,
												"id": 3305,
												"nodeType": "Return",
												"src": "10981:21:10"
											}
										]
									},
									"documentation": {
										"id": 3280,
										"nodeType": "StructuredDocumentation",
										"src": "10506:280:10",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10800:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3282,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10818:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "10810:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:15:10"
									},
									"returnParameters": {
										"id": 3286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "10848:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 3284,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10848:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10847:9:10"
									},
									"scope": 4513,
									"src": "10791:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3334,
										"nodeType": "Block",
										"src": "11360:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3315,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "11374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11387:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 3317,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11387:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 3316,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11382:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11382:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 3320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11395:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11382:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11374:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3328,
												"nodeType": "IfStatement",
												"src": "11370:103:10",
												"trueBody": {
													"id": 3327,
													"nodeType": "Block",
													"src": "11400:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11452:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3324,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3310,
																		"src": "11456:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3322,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "11421:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11421:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3326,
															"nodeType": "RevertStatement",
															"src": "11414:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3331,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3310,
															"src": "11496:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 3329,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11489:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11489:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 3314,
												"id": 3333,
												"nodeType": "Return",
												"src": "11482:20:10"
											}
										]
									},
									"documentation": {
										"id": 3308,
										"nodeType": "StructuredDocumentation",
										"src": "11015:276:10",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11305:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "11314:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11313:15:10"
									},
									"returnParameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3335,
												"src": "11352:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3312,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11352:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11351:8:10"
									},
									"scope": 4513,
									"src": "11296:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3362,
										"nodeType": "Block",
										"src": "11860:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3343,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3338,
														"src": "11874:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11887:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 3345,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11887:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 3344,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11882:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11882:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11895:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11882:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11874:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3356,
												"nodeType": "IfStatement",
												"src": "11870:103:10",
												"trueBody": {
													"id": 3355,
													"nodeType": "Block",
													"src": "11900:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3352,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3338,
																		"src": "11956:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3350,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "11921:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3354,
															"nodeType": "RevertStatement",
															"src": "11914:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3359,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3338,
															"src": "11996:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11989:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 3357,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11989:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11989:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 3342,
												"id": 3361,
												"nodeType": "Return",
												"src": "11982:20:10"
											}
										]
									},
									"documentation": {
										"id": 3336,
										"nodeType": "StructuredDocumentation",
										"src": "11515:276:10",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11805:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11822:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "11814:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11814:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11813:15:10"
									},
									"returnParameters": {
										"id": 3342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3363,
												"src": "11852:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 3340,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11852:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11851:8:10"
									},
									"scope": 4513,
									"src": "11796:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3390,
										"nodeType": "Block",
										"src": "12360:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3371,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3366,
														"src": "12374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12387:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 3373,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12387:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 3372,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12382:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12382:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 3376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12395:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12382:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12374:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3384,
												"nodeType": "IfStatement",
												"src": "12370:103:10",
												"trueBody": {
													"id": 3383,
													"nodeType": "Block",
													"src": "12400:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12452:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3380,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3366,
																		"src": "12456:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3378,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "12421:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12421:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3382,
															"nodeType": "RevertStatement",
															"src": "12414:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3366,
															"src": "12496:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 3385,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12489:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12489:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 3370,
												"id": 3389,
												"nodeType": "Return",
												"src": "12482:20:10"
											}
										]
									},
									"documentation": {
										"id": 3364,
										"nodeType": "StructuredDocumentation",
										"src": "12015:276:10",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12305:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3366,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3391,
												"src": "12314:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12313:15:10"
									},
									"returnParameters": {
										"id": 3370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3391,
												"src": "12352:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 3368,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12352:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12351:8:10"
									},
									"scope": 4513,
									"src": "12296:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3418,
										"nodeType": "Block",
										"src": "12860:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3399,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3394,
														"src": "12874:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12887:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 3401,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12887:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 3400,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12882:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12882:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 3404,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12895:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12882:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12874:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3412,
												"nodeType": "IfStatement",
												"src": "12870:103:10",
												"trueBody": {
													"id": 3411,
													"nodeType": "Block",
													"src": "12900:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12952:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3408,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3394,
																		"src": "12956:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3406,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "12921:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12921:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3410,
															"nodeType": "RevertStatement",
															"src": "12914:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3415,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3394,
															"src": "12996:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12989:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 3413,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12989:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12989:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 3398,
												"id": 3417,
												"nodeType": "Return",
												"src": "12982:20:10"
											}
										]
									},
									"documentation": {
										"id": 3392,
										"nodeType": "StructuredDocumentation",
										"src": "12515:276:10",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12805:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3394,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12822:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3419,
												"src": "12814:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12814:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12813:15:10"
									},
									"returnParameters": {
										"id": 3398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3419,
												"src": "12852:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 3396,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12852:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12851:8:10"
									},
									"scope": 4513,
									"src": "12796:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3446,
										"nodeType": "Block",
										"src": "13360:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3427,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3422,
														"src": "13374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13387:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 3429,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13387:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 3428,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13382:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13382:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 3432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13395:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13382:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13374:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3440,
												"nodeType": "IfStatement",
												"src": "13370:103:10",
												"trueBody": {
													"id": 3439,
													"nodeType": "Block",
													"src": "13400:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13452:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3436,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3422,
																		"src": "13456:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3434,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "13421:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13421:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3438,
															"nodeType": "RevertStatement",
															"src": "13414:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3443,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3422,
															"src": "13496:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 3441,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13489:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13489:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 3426,
												"id": 3445,
												"nodeType": "Return",
												"src": "13482:20:10"
											}
										]
									},
									"documentation": {
										"id": 3420,
										"nodeType": "StructuredDocumentation",
										"src": "13015:276:10",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13305:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3422,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "13314:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13313:15:10"
									},
									"returnParameters": {
										"id": 3426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3447,
												"src": "13352:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3424,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13352:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13351:8:10"
									},
									"scope": 4513,
									"src": "13296:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3474,
										"nodeType": "Block",
										"src": "13860:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3455,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3450,
														"src": "13874:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13887:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 3457,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13887:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 3456,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13882:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13882:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 3460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13895:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13882:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13874:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3468,
												"nodeType": "IfStatement",
												"src": "13870:103:10",
												"trueBody": {
													"id": 3467,
													"nodeType": "Block",
													"src": "13900:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13952:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3464,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3450,
																		"src": "13956:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3462,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "13921:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13921:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3466,
															"nodeType": "RevertStatement",
															"src": "13914:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3471,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "13996:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13989:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 3469,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13989:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13989:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 3454,
												"id": 3473,
												"nodeType": "Return",
												"src": "13982:20:10"
											}
										]
									},
									"documentation": {
										"id": 3448,
										"nodeType": "StructuredDocumentation",
										"src": "13515:276:10",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13805:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3450,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13822:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "13814:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13814:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:15:10"
									},
									"returnParameters": {
										"id": 3454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3475,
												"src": "13852:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 3452,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13851:8:10"
									},
									"scope": 4513,
									"src": "13796:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3502,
										"nodeType": "Block",
										"src": "14360:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3483,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3478,
														"src": "14374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14387:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3485,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14387:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 3484,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14382:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14382:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 3488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14395:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14382:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14374:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3496,
												"nodeType": "IfStatement",
												"src": "14370:103:10",
												"trueBody": {
													"id": 3495,
													"nodeType": "Block",
													"src": "14400:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14452:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3492,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3478,
																		"src": "14456:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3490,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "14421:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14421:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3494,
															"nodeType": "RevertStatement",
															"src": "14414:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3499,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3478,
															"src": "14496:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 3497,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14489:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14489:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 3482,
												"id": 3501,
												"nodeType": "Return",
												"src": "14482:20:10"
											}
										]
									},
									"documentation": {
										"id": 3476,
										"nodeType": "StructuredDocumentation",
										"src": "14015:276:10",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14305:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "14314:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14313:15:10"
									},
									"returnParameters": {
										"id": 3482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "14352:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 3480,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14352:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14351:8:10"
									},
									"scope": 4513,
									"src": "14296:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3530,
										"nodeType": "Block",
										"src": "14860:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3511,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3506,
														"src": "14874:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14887:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 3513,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14887:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 3512,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14882:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3515,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14882:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 3516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14895:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14882:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14874:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3524,
												"nodeType": "IfStatement",
												"src": "14870:103:10",
												"trueBody": {
													"id": 3523,
													"nodeType": "Block",
													"src": "14900:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14952:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3520,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3506,
																		"src": "14956:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3518,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "14921:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14921:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3522,
															"nodeType": "RevertStatement",
															"src": "14914:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3527,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3506,
															"src": "14996:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14989:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 3525,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14989:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14989:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 3510,
												"id": 3529,
												"nodeType": "Return",
												"src": "14982:20:10"
											}
										]
									},
									"documentation": {
										"id": 3504,
										"nodeType": "StructuredDocumentation",
										"src": "14515:276:10",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14805:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14822:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3531,
												"src": "14814:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14814:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14813:15:10"
									},
									"returnParameters": {
										"id": 3510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3531,
												"src": "14852:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 3508,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14852:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14851:8:10"
									},
									"scope": 4513,
									"src": "14796:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3558,
										"nodeType": "Block",
										"src": "15360:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3539,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3534,
														"src": "15374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15387:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 3541,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15387:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 3540,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15382:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 3544,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15395:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15382:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15374:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3552,
												"nodeType": "IfStatement",
												"src": "15370:103:10",
												"trueBody": {
													"id": 3551,
													"nodeType": "Block",
													"src": "15400:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15452:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3548,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3534,
																		"src": "15456:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3546,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "15421:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15421:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3550,
															"nodeType": "RevertStatement",
															"src": "15414:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3555,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3534,
															"src": "15496:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 3553,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15489:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15489:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 3538,
												"id": 3557,
												"nodeType": "Return",
												"src": "15482:20:10"
											}
										]
									},
									"documentation": {
										"id": 3532,
										"nodeType": "StructuredDocumentation",
										"src": "15015:276:10",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15305:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "15314:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15313:15:10"
									},
									"returnParameters": {
										"id": 3538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3559,
												"src": "15352:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 3536,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15352:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15351:8:10"
									},
									"scope": 4513,
									"src": "15296:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3586,
										"nodeType": "Block",
										"src": "15860:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3567,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3562,
														"src": "15874:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15887:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 3569,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15887:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 3568,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15882:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15882:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 3572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15895:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15882:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15874:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3580,
												"nodeType": "IfStatement",
												"src": "15870:103:10",
												"trueBody": {
													"id": 3579,
													"nodeType": "Block",
													"src": "15900:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15952:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3576,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3562,
																		"src": "15956:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3574,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "15921:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15921:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3578,
															"nodeType": "RevertStatement",
															"src": "15914:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3583,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3562,
															"src": "15996:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15989:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 3581,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15989:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15989:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 3566,
												"id": 3585,
												"nodeType": "Return",
												"src": "15982:20:10"
											}
										]
									},
									"documentation": {
										"id": 3560,
										"nodeType": "StructuredDocumentation",
										"src": "15515:276:10",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15805:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15822:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "15814:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15814:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15813:15:10"
									},
									"returnParameters": {
										"id": 3566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3587,
												"src": "15852:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 3564,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15852:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15851:8:10"
									},
									"scope": 4513,
									"src": "15796:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3614,
										"nodeType": "Block",
										"src": "16360:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3595,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3590,
														"src": "16374:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16387:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 3597,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16387:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 3596,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16382:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16382:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 3600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16395:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16382:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16374:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3608,
												"nodeType": "IfStatement",
												"src": "16370:103:10",
												"trueBody": {
													"id": 3607,
													"nodeType": "Block",
													"src": "16400:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16452:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3604,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3590,
																		"src": "16456:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3602,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "16421:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16421:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3606,
															"nodeType": "RevertStatement",
															"src": "16414:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3611,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3590,
															"src": "16496:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16489:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 3609,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16489:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16489:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 3594,
												"id": 3613,
												"nodeType": "Return",
												"src": "16482:20:10"
											}
										]
									},
									"documentation": {
										"id": 3588,
										"nodeType": "StructuredDocumentation",
										"src": "16015:276:10",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16305:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3590,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "16314:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16314:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16313:15:10"
									},
									"returnParameters": {
										"id": 3594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3615,
												"src": "16352:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3592,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16352:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16351:8:10"
									},
									"scope": 4513,
									"src": "16296:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3642,
										"nodeType": "Block",
										"src": "16854:146:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3623,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3618,
														"src": "16868:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16881:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 3625,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16881:5:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 3624,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16876:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16876:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 3628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16888:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16876:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16868:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3636,
												"nodeType": "IfStatement",
												"src": "16864:101:10",
												"trueBody": {
													"id": 3635,
													"nodeType": "Block",
													"src": "16893:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16945:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3632,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3618,
																		"src": "16948:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3630,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "16914:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 3633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16914:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3634,
															"nodeType": "RevertStatement",
															"src": "16907:47:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3639,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3618,
															"src": "16987:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16981:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 3637,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16981:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 3640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16981:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 3622,
												"id": 3641,
												"nodeType": "Return",
												"src": "16974:19:10"
											}
										]
									},
									"documentation": {
										"id": 3616,
										"nodeType": "StructuredDocumentation",
										"src": "16515:272:10",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16801:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3643,
												"src": "16809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16808:15:10"
									},
									"returnParameters": {
										"id": 3622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3643,
												"src": "16847:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3620,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16847:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16846:7:10"
									},
									"scope": 4513,
									"src": "16792:208:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3665,
										"nodeType": "Block",
										"src": "17236:128:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3651,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3646,
														"src": "17250:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3652,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17258:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17250:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3659,
												"nodeType": "IfStatement",
												"src": "17246:81:10",
												"trueBody": {
													"id": 3658,
													"nodeType": "Block",
													"src": "17261:66:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3655,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3646,
																		"src": "17310:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3654,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2763,
																	"src": "17282:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17282:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3657,
															"nodeType": "RevertStatement",
															"src": "17275:41:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3662,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3646,
															"src": "17351:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17343:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17343:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17343:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3650,
												"id": 3664,
												"nodeType": "Return",
												"src": "17336:21:10"
											}
										]
									},
									"documentation": {
										"id": 3644,
										"nodeType": "StructuredDocumentation",
										"src": "17006:160:10",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17180:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17197:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "17190:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3645,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17190:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17189:14:10"
									},
									"returnParameters": {
										"id": 3650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3666,
												"src": "17227:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17227:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17226:9:10"
									},
									"scope": 4513,
									"src": "17171:193:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3691,
										"nodeType": "Block",
										"src": "17761:150:10",
										"statements": [
											{
												"expression": {
													"id": 3679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3674,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3672,
														"src": "17771:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3677,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3669,
																"src": "17791:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17784:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3675,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17784:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17784:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17771:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3680,
												"nodeType": "ExpressionStatement",
												"src": "17771:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3681,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3672,
														"src": "17811:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3682,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "17825:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17811:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3690,
												"nodeType": "IfStatement",
												"src": "17807:98:10",
												"trueBody": {
													"id": 3689,
													"nodeType": "Block",
													"src": "17832:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17883:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3669,
																		"src": "17888:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3684,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "17853:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17853:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3688,
															"nodeType": "RevertStatement",
															"src": "17846:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3667,
										"nodeType": "StructuredDocumentation",
										"src": "17370:312:10",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17696:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17712:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3692,
												"src": "17705:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3668,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17705:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17704:14:10"
									},
									"returnParameters": {
										"id": 3673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3672,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17749:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3692,
												"src": "17742:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3671,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17742:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17741:19:10"
									},
									"scope": 4513,
									"src": "17687:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3717,
										"nodeType": "Block",
										"src": "18308:150:10",
										"statements": [
											{
												"expression": {
													"id": 3705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3700,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3698,
														"src": "18318:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3703,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3695,
																"src": "18338:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3702,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18331:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3701,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18331:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18331:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18318:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3706,
												"nodeType": "ExpressionStatement",
												"src": "18318:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3707,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3698,
														"src": "18358:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3708,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "18372:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18358:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3716,
												"nodeType": "IfStatement",
												"src": "18354:98:10",
												"trueBody": {
													"id": 3715,
													"nodeType": "Block",
													"src": "18379:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18430:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3712,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3695,
																		"src": "18435:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3710,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "18400:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18400:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3714,
															"nodeType": "RevertStatement",
															"src": "18393:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3693,
										"nodeType": "StructuredDocumentation",
										"src": "17917:312:10",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18243:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18259:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3718,
												"src": "18252:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3694,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18252:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18251:14:10"
									},
									"returnParameters": {
										"id": 3699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3698,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18296:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3718,
												"src": "18289:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3697,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18289:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18288:19:10"
									},
									"scope": 4513,
									"src": "18234:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3743,
										"nodeType": "Block",
										"src": "18855:150:10",
										"statements": [
											{
												"expression": {
													"id": 3731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3726,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3724,
														"src": "18865:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3729,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3721,
																"src": "18885:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18878:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3727,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18878:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18878:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18865:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3732,
												"nodeType": "ExpressionStatement",
												"src": "18865:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3733,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3724,
														"src": "18905:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3734,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3721,
														"src": "18919:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18905:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3742,
												"nodeType": "IfStatement",
												"src": "18901:98:10",
												"trueBody": {
													"id": 3741,
													"nodeType": "Block",
													"src": "18926:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18977:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3738,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3721,
																		"src": "18982:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3736,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "18947:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18947:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3740,
															"nodeType": "RevertStatement",
															"src": "18940:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3719,
										"nodeType": "StructuredDocumentation",
										"src": "18464:312:10",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18790:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18806:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3744,
												"src": "18799:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3720,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18799:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18798:14:10"
									},
									"returnParameters": {
										"id": 3725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3724,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18843:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3744,
												"src": "18836:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3723,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18836:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18835:19:10"
									},
									"scope": 4513,
									"src": "18781:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3769,
										"nodeType": "Block",
										"src": "19402:150:10",
										"statements": [
											{
												"expression": {
													"id": 3757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3752,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3750,
														"src": "19412:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3747,
																"src": "19432:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19425:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3753,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19425:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19425:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19412:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3758,
												"nodeType": "ExpressionStatement",
												"src": "19412:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3759,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3750,
														"src": "19452:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3760,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3747,
														"src": "19466:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19452:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3768,
												"nodeType": "IfStatement",
												"src": "19448:98:10",
												"trueBody": {
													"id": 3767,
													"nodeType": "Block",
													"src": "19473:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19524:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3764,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3747,
																		"src": "19529:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3762,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "19494:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19494:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3766,
															"nodeType": "RevertStatement",
															"src": "19487:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3745,
										"nodeType": "StructuredDocumentation",
										"src": "19011:312:10",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19337:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19353:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3770,
												"src": "19346:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3746,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19346:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19345:14:10"
									},
									"returnParameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3750,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19390:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3770,
												"src": "19383:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3749,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19383:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19382:19:10"
									},
									"scope": 4513,
									"src": "19328:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3795,
										"nodeType": "Block",
										"src": "19949:150:10",
										"statements": [
											{
												"expression": {
													"id": 3783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3778,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3776,
														"src": "19959:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3781,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3773,
																"src": "19979:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19972:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3779,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19972:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19972:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19959:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3784,
												"nodeType": "ExpressionStatement",
												"src": "19959:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3785,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3776,
														"src": "19999:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3786,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3773,
														"src": "20013:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19999:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3794,
												"nodeType": "IfStatement",
												"src": "19995:98:10",
												"trueBody": {
													"id": 3793,
													"nodeType": "Block",
													"src": "20020:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20071:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3790,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3773,
																		"src": "20076:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3788,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "20041:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20041:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3792,
															"nodeType": "RevertStatement",
															"src": "20034:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3771,
										"nodeType": "StructuredDocumentation",
										"src": "19558:312:10",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19884:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3773,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19900:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "19893:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3772,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19893:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19892:14:10"
									},
									"returnParameters": {
										"id": 3777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3776,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19937:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3796,
												"src": "19930:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3775,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19930:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19929:19:10"
									},
									"scope": 4513,
									"src": "19875:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3821,
										"nodeType": "Block",
										"src": "20496:150:10",
										"statements": [
											{
												"expression": {
													"id": 3809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3804,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3802,
														"src": "20506:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3799,
																"src": "20526:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20519:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3805,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20519:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20519:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20506:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3810,
												"nodeType": "ExpressionStatement",
												"src": "20506:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3811,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3802,
														"src": "20546:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3812,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "20560:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20546:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3820,
												"nodeType": "IfStatement",
												"src": "20542:98:10",
												"trueBody": {
													"id": 3819,
													"nodeType": "Block",
													"src": "20567:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20618:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3816,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3799,
																		"src": "20623:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3814,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "20588:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20588:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3818,
															"nodeType": "RevertStatement",
															"src": "20581:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3797,
										"nodeType": "StructuredDocumentation",
										"src": "20105:312:10",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20431:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3799,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20447:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3822,
												"src": "20440:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3798,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20440:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20439:14:10"
									},
									"returnParameters": {
										"id": 3803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3802,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20484:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3822,
												"src": "20477:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3801,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20477:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20476:19:10"
									},
									"scope": 4513,
									"src": "20422:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3847,
										"nodeType": "Block",
										"src": "21043:150:10",
										"statements": [
											{
												"expression": {
													"id": 3835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3830,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3828,
														"src": "21053:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3833,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3825,
																"src": "21073:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21066:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3831,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21066:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21066:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21053:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3836,
												"nodeType": "ExpressionStatement",
												"src": "21053:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3837,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3828,
														"src": "21093:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3838,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3825,
														"src": "21107:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21093:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3846,
												"nodeType": "IfStatement",
												"src": "21089:98:10",
												"trueBody": {
													"id": 3845,
													"nodeType": "Block",
													"src": "21114:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21165:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3842,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3825,
																		"src": "21170:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3840,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "21135:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21135:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3844,
															"nodeType": "RevertStatement",
															"src": "21128:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3823,
										"nodeType": "StructuredDocumentation",
										"src": "20652:312:10",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20978:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20994:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "20987:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3824,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20987:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20986:14:10"
									},
									"returnParameters": {
										"id": 3829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3828,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21031:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3848,
												"src": "21024:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3827,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21024:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21023:19:10"
									},
									"scope": 4513,
									"src": "20969:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3873,
										"nodeType": "Block",
										"src": "21590:150:10",
										"statements": [
											{
												"expression": {
													"id": 3861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3856,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3854,
														"src": "21600:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3859,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3851,
																"src": "21620:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21613:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3857,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21613:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21613:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21600:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3862,
												"nodeType": "ExpressionStatement",
												"src": "21600:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3863,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3854,
														"src": "21640:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3864,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3851,
														"src": "21654:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21640:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3872,
												"nodeType": "IfStatement",
												"src": "21636:98:10",
												"trueBody": {
													"id": 3871,
													"nodeType": "Block",
													"src": "21661:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21712:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3868,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3851,
																		"src": "21717:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3866,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "21682:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21682:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3870,
															"nodeType": "RevertStatement",
															"src": "21675:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3849,
										"nodeType": "StructuredDocumentation",
										"src": "21199:312:10",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21525:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21541:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3874,
												"src": "21534:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3850,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21534:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21533:14:10"
									},
									"returnParameters": {
										"id": 3855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3854,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21578:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3874,
												"src": "21571:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3853,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21571:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21570:19:10"
									},
									"scope": 4513,
									"src": "21516:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3899,
										"nodeType": "Block",
										"src": "22137:150:10",
										"statements": [
											{
												"expression": {
													"id": 3887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3882,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3880,
														"src": "22147:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3885,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3877,
																"src": "22167:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22160:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3883,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22160:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22160:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22147:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3888,
												"nodeType": "ExpressionStatement",
												"src": "22147:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3889,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3880,
														"src": "22187:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3890,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3877,
														"src": "22201:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22187:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3898,
												"nodeType": "IfStatement",
												"src": "22183:98:10",
												"trueBody": {
													"id": 3897,
													"nodeType": "Block",
													"src": "22208:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22259:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3894,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3877,
																		"src": "22264:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3892,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "22229:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22229:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3896,
															"nodeType": "RevertStatement",
															"src": "22222:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3875,
										"nodeType": "StructuredDocumentation",
										"src": "21746:312:10",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22072:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3877,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22088:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "22081:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3876,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22081:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22080:14:10"
									},
									"returnParameters": {
										"id": 3881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3880,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22125:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3900,
												"src": "22118:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3879,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22118:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22117:19:10"
									},
									"scope": 4513,
									"src": "22063:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3925,
										"nodeType": "Block",
										"src": "22684:150:10",
										"statements": [
											{
												"expression": {
													"id": 3913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3908,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "22694:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3911,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3903,
																"src": "22714:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22707:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3909,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22707:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22707:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22694:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3914,
												"nodeType": "ExpressionStatement",
												"src": "22694:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3915,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3906,
														"src": "22734:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3916,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3903,
														"src": "22748:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22734:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3924,
												"nodeType": "IfStatement",
												"src": "22730:98:10",
												"trueBody": {
													"id": 3923,
													"nodeType": "Block",
													"src": "22755:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22806:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3920,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3903,
																		"src": "22811:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3918,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "22776:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22776:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3922,
															"nodeType": "RevertStatement",
															"src": "22769:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3901,
										"nodeType": "StructuredDocumentation",
										"src": "22293:312:10",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22619:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3903,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22635:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3926,
												"src": "22628:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3902,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22628:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22627:14:10"
									},
									"returnParameters": {
										"id": 3907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3906,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22672:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3926,
												"src": "22665:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3905,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22665:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22664:19:10"
									},
									"scope": 4513,
									"src": "22610:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3951,
										"nodeType": "Block",
										"src": "23231:150:10",
										"statements": [
											{
												"expression": {
													"id": 3939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3934,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "23241:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3937,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3929,
																"src": "23261:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23254:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3935,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23254:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23254:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23241:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3940,
												"nodeType": "ExpressionStatement",
												"src": "23241:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3941,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "23281:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3942,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3929,
														"src": "23295:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23281:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3950,
												"nodeType": "IfStatement",
												"src": "23277:98:10",
												"trueBody": {
													"id": 3949,
													"nodeType": "Block",
													"src": "23302:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23353:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3946,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3929,
																		"src": "23358:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3944,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "23323:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23323:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3948,
															"nodeType": "RevertStatement",
															"src": "23316:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3927,
										"nodeType": "StructuredDocumentation",
										"src": "22840:312:10",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3952,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23166:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23182:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3952,
												"src": "23175:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3928,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23175:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23174:14:10"
									},
									"returnParameters": {
										"id": 3933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3932,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23219:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3952,
												"src": "23212:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3931,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23212:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23211:19:10"
									},
									"scope": 4513,
									"src": "23157:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3977,
										"nodeType": "Block",
										"src": "23778:150:10",
										"statements": [
											{
												"expression": {
													"id": 3965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3960,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3958,
														"src": "23788:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3963,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3955,
																"src": "23808:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23801:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3961,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23801:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3964,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23801:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23788:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3966,
												"nodeType": "ExpressionStatement",
												"src": "23788:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3967,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3958,
														"src": "23828:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "23842:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23828:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3976,
												"nodeType": "IfStatement",
												"src": "23824:98:10",
												"trueBody": {
													"id": 3975,
													"nodeType": "Block",
													"src": "23849:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23900:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3972,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3955,
																		"src": "23905:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3970,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "23870:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23870:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3974,
															"nodeType": "RevertStatement",
															"src": "23863:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3953,
										"nodeType": "StructuredDocumentation",
										"src": "23387:312:10",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23713:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23729:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3978,
												"src": "23722:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3954,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23722:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23721:14:10"
									},
									"returnParameters": {
										"id": 3959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3958,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23766:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3978,
												"src": "23759:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3957,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23759:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23758:19:10"
									},
									"scope": 4513,
									"src": "23704:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4003,
										"nodeType": "Block",
										"src": "24325:150:10",
										"statements": [
											{
												"expression": {
													"id": 3991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3986,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3984,
														"src": "24335:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3989,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3981,
																"src": "24355:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24348:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3987,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24348:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24348:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24335:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3992,
												"nodeType": "ExpressionStatement",
												"src": "24335:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3993,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3984,
														"src": "24375:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3994,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3981,
														"src": "24389:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24375:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4002,
												"nodeType": "IfStatement",
												"src": "24371:98:10",
												"trueBody": {
													"id": 4001,
													"nodeType": "Block",
													"src": "24396:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24447:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3998,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3981,
																		"src": "24452:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3996,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "24417:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24417:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4000,
															"nodeType": "RevertStatement",
															"src": "24410:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3979,
										"nodeType": "StructuredDocumentation",
										"src": "23934:312:10",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 4004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24260:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3981,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24276:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4004,
												"src": "24269:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3980,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24269:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24268:14:10"
									},
									"returnParameters": {
										"id": 3985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3984,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24313:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4004,
												"src": "24306:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3983,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24306:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:19:10"
									},
									"scope": 4513,
									"src": "24251:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4029,
										"nodeType": "Block",
										"src": "24872:150:10",
										"statements": [
											{
												"expression": {
													"id": 4017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4012,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4010,
														"src": "24882:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4015,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4007,
																"src": "24902:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24895:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 4013,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24895:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 4016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24895:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24882:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 4018,
												"nodeType": "ExpressionStatement",
												"src": "24882:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4019,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4010,
														"src": "24922:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4020,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4007,
														"src": "24936:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24922:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4028,
												"nodeType": "IfStatement",
												"src": "24918:98:10",
												"trueBody": {
													"id": 4027,
													"nodeType": "Block",
													"src": "24943:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 4023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24994:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 4024,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4007,
																		"src": "24999:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4022,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "24964:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24964:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4026,
															"nodeType": "RevertStatement",
															"src": "24957:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4005,
										"nodeType": "StructuredDocumentation",
										"src": "24481:312:10",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 4030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24807:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4007,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24823:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4030,
												"src": "24816:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4006,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24816:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24815:14:10"
									},
									"returnParameters": {
										"id": 4011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4010,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24860:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4030,
												"src": "24853:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 4009,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24853:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24852:19:10"
									},
									"scope": 4513,
									"src": "24798:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4055,
										"nodeType": "Block",
										"src": "25419:150:10",
										"statements": [
											{
												"expression": {
													"id": 4043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4038,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4036,
														"src": "25429:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4041,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4033,
																"src": "25449:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25442:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 4039,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25442:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 4042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25442:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25429:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 4044,
												"nodeType": "ExpressionStatement",
												"src": "25429:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4045,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4036,
														"src": "25469:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4046,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4033,
														"src": "25483:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25469:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4054,
												"nodeType": "IfStatement",
												"src": "25465:98:10",
												"trueBody": {
													"id": 4053,
													"nodeType": "Block",
													"src": "25490:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 4049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25541:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 4050,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4033,
																		"src": "25546:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4048,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "25511:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25511:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4052,
															"nodeType": "RevertStatement",
															"src": "25504:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4031,
										"nodeType": "StructuredDocumentation",
										"src": "25028:312:10",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 4056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25354:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4033,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25370:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "25363:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4032,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25363:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:14:10"
									},
									"returnParameters": {
										"id": 4037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4036,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25407:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4056,
												"src": "25400:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 4035,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25400:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:19:10"
									},
									"scope": 4513,
									"src": "25345:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4081,
										"nodeType": "Block",
										"src": "25966:150:10",
										"statements": [
											{
												"expression": {
													"id": 4069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4064,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4062,
														"src": "25976:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4067,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4059,
																"src": "25996:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25989:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 4065,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25989:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 4068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25989:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25976:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 4070,
												"nodeType": "ExpressionStatement",
												"src": "25976:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4071,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4062,
														"src": "26016:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4072,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "26030:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26016:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4080,
												"nodeType": "IfStatement",
												"src": "26012:98:10",
												"trueBody": {
													"id": 4079,
													"nodeType": "Block",
													"src": "26037:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 4075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26088:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 4076,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4059,
																		"src": "26093:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4074,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "26058:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26058:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4078,
															"nodeType": "RevertStatement",
															"src": "26051:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4057,
										"nodeType": "StructuredDocumentation",
										"src": "25575:312:10",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 4082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25901:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25917:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4082,
												"src": "25910:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4058,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25910:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25909:14:10"
									},
									"returnParameters": {
										"id": 4063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4062,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25954:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4082,
												"src": "25947:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 4061,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25947:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25946:19:10"
									},
									"scope": 4513,
									"src": "25892:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4107,
										"nodeType": "Block",
										"src": "26513:150:10",
										"statements": [
											{
												"expression": {
													"id": 4095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4090,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4088,
														"src": "26523:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4093,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4085,
																"src": "26543:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26536:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 4091,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26536:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 4094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26536:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26523:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 4096,
												"nodeType": "ExpressionStatement",
												"src": "26523:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4097,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4088,
														"src": "26563:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4098,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4085,
														"src": "26577:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26563:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4106,
												"nodeType": "IfStatement",
												"src": "26559:98:10",
												"trueBody": {
													"id": 4105,
													"nodeType": "Block",
													"src": "26584:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 4101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26635:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 4102,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4085,
																		"src": "26640:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4100,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "26605:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26605:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4104,
															"nodeType": "RevertStatement",
															"src": "26598:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4083,
										"nodeType": "StructuredDocumentation",
										"src": "26122:312:10",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 4108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26448:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4085,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26464:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4108,
												"src": "26457:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4084,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26457:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26456:14:10"
									},
									"returnParameters": {
										"id": 4089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4088,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26501:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4108,
												"src": "26494:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 4087,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26494:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26493:19:10"
									},
									"scope": 4513,
									"src": "26439:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4133,
										"nodeType": "Block",
										"src": "27060:150:10",
										"statements": [
											{
												"expression": {
													"id": 4121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4116,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4114,
														"src": "27070:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4119,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4111,
																"src": "27090:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27083:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 4117,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27083:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 4120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27083:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27070:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 4122,
												"nodeType": "ExpressionStatement",
												"src": "27070:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4123,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4114,
														"src": "27110:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4124,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4111,
														"src": "27124:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27110:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4132,
												"nodeType": "IfStatement",
												"src": "27106:98:10",
												"trueBody": {
													"id": 4131,
													"nodeType": "Block",
													"src": "27131:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 4127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27182:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 4128,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4111,
																		"src": "27187:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4126,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "27152:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27152:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4130,
															"nodeType": "RevertStatement",
															"src": "27145:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4109,
										"nodeType": "StructuredDocumentation",
										"src": "26669:312:10",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 4134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26995:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4111,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27011:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4134,
												"src": "27004:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4110,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27004:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27003:14:10"
									},
									"returnParameters": {
										"id": 4115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4114,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27048:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4134,
												"src": "27041:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 4113,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27041:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27040:19:10"
									},
									"scope": 4513,
									"src": "26986:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4159,
										"nodeType": "Block",
										"src": "27607:150:10",
										"statements": [
											{
												"expression": {
													"id": 4147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4142,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4140,
														"src": "27617:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4145,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4137,
																"src": "27637:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27630:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 4143,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27630:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 4146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27630:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27617:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 4148,
												"nodeType": "ExpressionStatement",
												"src": "27617:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4149,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4140,
														"src": "27657:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4150,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4137,
														"src": "27671:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27657:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4158,
												"nodeType": "IfStatement",
												"src": "27653:98:10",
												"trueBody": {
													"id": 4157,
													"nodeType": "Block",
													"src": "27678:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 4153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27729:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 4154,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4137,
																		"src": "27734:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4152,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "27699:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27699:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4156,
															"nodeType": "RevertStatement",
															"src": "27692:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4135,
										"nodeType": "StructuredDocumentation",
										"src": "27216:312:10",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 4160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27542:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27558:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4160,
												"src": "27551:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4136,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27551:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27550:14:10"
									},
									"returnParameters": {
										"id": 4141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4140,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27595:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4160,
												"src": "27588:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 4139,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27588:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27587:19:10"
									},
									"scope": 4513,
									"src": "27533:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4185,
										"nodeType": "Block",
										"src": "28147:148:10",
										"statements": [
											{
												"expression": {
													"id": 4173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4168,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4166,
														"src": "28157:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4171,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4163,
																"src": "28176:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28170:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 4169,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28170:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28170:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28157:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 4174,
												"nodeType": "ExpressionStatement",
												"src": "28157:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4175,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4166,
														"src": "28196:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4176,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4163,
														"src": "28210:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28196:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4184,
												"nodeType": "IfStatement",
												"src": "28192:97:10",
												"trueBody": {
													"id": 4183,
													"nodeType": "Block",
													"src": "28217:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 4179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28268:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 4180,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4163,
																		"src": "28272:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4178,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "28238:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28238:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4182,
															"nodeType": "RevertStatement",
															"src": "28231:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4161,
										"nodeType": "StructuredDocumentation",
										"src": "27763:307:10",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 4186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28084:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28099:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4186,
												"src": "28092:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4162,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28092:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28091:14:10"
									},
									"returnParameters": {
										"id": 4167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4166,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28135:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4186,
												"src": "28129:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 4165,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28129:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28128:18:10"
									},
									"scope": 4513,
									"src": "28075:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4211,
										"nodeType": "Block",
										"src": "28685:148:10",
										"statements": [
											{
												"expression": {
													"id": 4199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4194,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4192,
														"src": "28695:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4197,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4189,
																"src": "28714:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28708:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 4195,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28708:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28708:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28695:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 4200,
												"nodeType": "ExpressionStatement",
												"src": "28695:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4201,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4192,
														"src": "28734:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4189,
														"src": "28748:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28734:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4210,
												"nodeType": "IfStatement",
												"src": "28730:97:10",
												"trueBody": {
													"id": 4209,
													"nodeType": "Block",
													"src": "28755:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 4205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28806:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 4206,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4189,
																		"src": "28810:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4204,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "28776:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28776:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4208,
															"nodeType": "RevertStatement",
															"src": "28769:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4187,
										"nodeType": "StructuredDocumentation",
										"src": "28301:307:10",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 4212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28622:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28637:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4212,
												"src": "28630:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4188,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28630:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28629:14:10"
									},
									"returnParameters": {
										"id": 4193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4192,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28673:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4212,
												"src": "28667:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 4191,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28667:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28666:18:10"
									},
									"scope": 4513,
									"src": "28613:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4237,
										"nodeType": "Block",
										"src": "29223:148:10",
										"statements": [
											{
												"expression": {
													"id": 4225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4220,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4218,
														"src": "29233:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4223,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4215,
																"src": "29252:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29246:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 4221,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29246:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29246:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29233:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 4226,
												"nodeType": "ExpressionStatement",
												"src": "29233:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4227,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4218,
														"src": "29272:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4228,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4215,
														"src": "29286:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29272:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4236,
												"nodeType": "IfStatement",
												"src": "29268:97:10",
												"trueBody": {
													"id": 4235,
													"nodeType": "Block",
													"src": "29293:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 4231,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29344:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 4232,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4215,
																		"src": "29348:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4230,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "29314:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29314:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4234,
															"nodeType": "RevertStatement",
															"src": "29307:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4213,
										"nodeType": "StructuredDocumentation",
										"src": "28839:307:10",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 4238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29160:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29175:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4238,
												"src": "29168:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4214,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29168:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29167:14:10"
									},
									"returnParameters": {
										"id": 4219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4218,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29211:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4238,
												"src": "29205:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 4217,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29205:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29204:18:10"
									},
									"scope": 4513,
									"src": "29151:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4263,
										"nodeType": "Block",
										"src": "29761:148:10",
										"statements": [
											{
												"expression": {
													"id": 4251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4246,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4244,
														"src": "29771:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4249,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4241,
																"src": "29790:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29784:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 4247,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29784:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29784:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29771:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 4252,
												"nodeType": "ExpressionStatement",
												"src": "29771:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4253,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4244,
														"src": "29810:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4254,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4241,
														"src": "29824:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29810:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4262,
												"nodeType": "IfStatement",
												"src": "29806:97:10",
												"trueBody": {
													"id": 4261,
													"nodeType": "Block",
													"src": "29831:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 4257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29882:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 4258,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4241,
																		"src": "29886:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4256,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "29852:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29852:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4260,
															"nodeType": "RevertStatement",
															"src": "29845:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4239,
										"nodeType": "StructuredDocumentation",
										"src": "29377:307:10",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 4264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29698:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4241,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29713:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4264,
												"src": "29706:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4240,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29706:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29705:14:10"
									},
									"returnParameters": {
										"id": 4245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4244,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29749:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4264,
												"src": "29743:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 4243,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29743:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29742:18:10"
									},
									"scope": 4513,
									"src": "29689:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4289,
										"nodeType": "Block",
										"src": "30299:148:10",
										"statements": [
											{
												"expression": {
													"id": 4277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4272,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4270,
														"src": "30309:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4275,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4267,
																"src": "30328:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30322:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 4273,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30322:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30322:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30309:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 4278,
												"nodeType": "ExpressionStatement",
												"src": "30309:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4279,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4270,
														"src": "30348:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4280,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4267,
														"src": "30362:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30348:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4288,
												"nodeType": "IfStatement",
												"src": "30344:97:10",
												"trueBody": {
													"id": 4287,
													"nodeType": "Block",
													"src": "30369:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 4283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30420:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 4284,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4267,
																		"src": "30424:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4282,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "30390:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30390:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4286,
															"nodeType": "RevertStatement",
															"src": "30383:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4265,
										"nodeType": "StructuredDocumentation",
										"src": "29915:307:10",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 4290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30236:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30251:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4290,
												"src": "30244:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4266,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30244:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30243:14:10"
									},
									"returnParameters": {
										"id": 4271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4270,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30287:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4290,
												"src": "30281:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 4269,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30280:18:10"
									},
									"scope": 4513,
									"src": "30227:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4315,
										"nodeType": "Block",
										"src": "30837:148:10",
										"statements": [
											{
												"expression": {
													"id": 4303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4298,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4296,
														"src": "30847:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4301,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4293,
																"src": "30866:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30860:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 4299,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30860:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30860:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30847:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 4304,
												"nodeType": "ExpressionStatement",
												"src": "30847:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4305,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4296,
														"src": "30886:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4306,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4293,
														"src": "30900:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30886:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4314,
												"nodeType": "IfStatement",
												"src": "30882:97:10",
												"trueBody": {
													"id": 4313,
													"nodeType": "Block",
													"src": "30907:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 4309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30958:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 4310,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4293,
																		"src": "30962:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4308,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "30928:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30928:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4312,
															"nodeType": "RevertStatement",
															"src": "30921:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4291,
										"nodeType": "StructuredDocumentation",
										"src": "30453:307:10",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 4316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30774:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4293,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30789:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4316,
												"src": "30782:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4292,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30782:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30781:14:10"
									},
									"returnParameters": {
										"id": 4297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4296,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30825:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4316,
												"src": "30819:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 4295,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30819:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30818:18:10"
									},
									"scope": 4513,
									"src": "30765:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4341,
										"nodeType": "Block",
										"src": "31375:148:10",
										"statements": [
											{
												"expression": {
													"id": 4329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4324,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4322,
														"src": "31385:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4319,
																"src": "31404:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31398:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 4325,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31398:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31398:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31385:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 4330,
												"nodeType": "ExpressionStatement",
												"src": "31385:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4331,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4322,
														"src": "31424:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4332,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4319,
														"src": "31438:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31424:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4340,
												"nodeType": "IfStatement",
												"src": "31420:97:10",
												"trueBody": {
													"id": 4339,
													"nodeType": "Block",
													"src": "31445:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 4335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31496:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 4336,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4319,
																		"src": "31500:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4334,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "31466:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31466:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4338,
															"nodeType": "RevertStatement",
															"src": "31459:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4317,
										"nodeType": "StructuredDocumentation",
										"src": "30991:307:10",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 4342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31312:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4319,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31327:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4342,
												"src": "31320:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4318,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31320:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31319:14:10"
									},
									"returnParameters": {
										"id": 4323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4322,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31363:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4342,
												"src": "31357:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 4321,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31357:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31356:18:10"
									},
									"scope": 4513,
									"src": "31303:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4367,
										"nodeType": "Block",
										"src": "31913:148:10",
										"statements": [
											{
												"expression": {
													"id": 4355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4350,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4348,
														"src": "31923:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4353,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4345,
																"src": "31942:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31936:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 4351,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31936:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31936:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31923:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 4356,
												"nodeType": "ExpressionStatement",
												"src": "31923:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4357,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4348,
														"src": "31962:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4358,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4345,
														"src": "31976:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31962:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4366,
												"nodeType": "IfStatement",
												"src": "31958:97:10",
												"trueBody": {
													"id": 4365,
													"nodeType": "Block",
													"src": "31983:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 4361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32034:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 4362,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4345,
																		"src": "32038:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4360,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "32004:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32004:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4364,
															"nodeType": "RevertStatement",
															"src": "31997:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4343,
										"nodeType": "StructuredDocumentation",
										"src": "31529:307:10",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 4368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31850:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4345,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31865:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4368,
												"src": "31858:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4344,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31858:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31857:14:10"
									},
									"returnParameters": {
										"id": 4349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4348,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31901:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4368,
												"src": "31895:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 4347,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31895:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31894:18:10"
									},
									"scope": 4513,
									"src": "31841:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4393,
										"nodeType": "Block",
										"src": "32451:148:10",
										"statements": [
											{
												"expression": {
													"id": 4381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4376,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4374,
														"src": "32461:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4379,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4371,
																"src": "32480:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32474:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 4377,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32474:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32474:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32461:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 4382,
												"nodeType": "ExpressionStatement",
												"src": "32461:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4383,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4374,
														"src": "32500:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4384,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4371,
														"src": "32514:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32500:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4392,
												"nodeType": "IfStatement",
												"src": "32496:97:10",
												"trueBody": {
													"id": 4391,
													"nodeType": "Block",
													"src": "32521:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 4387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32572:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 4388,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4371,
																		"src": "32576:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4386,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "32542:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32542:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4390,
															"nodeType": "RevertStatement",
															"src": "32535:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4369,
										"nodeType": "StructuredDocumentation",
										"src": "32067:307:10",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 4394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32388:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32403:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4394,
												"src": "32396:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4370,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32396:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32395:14:10"
									},
									"returnParameters": {
										"id": 4375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4374,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32439:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4394,
												"src": "32433:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 4373,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32433:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32432:18:10"
									},
									"scope": 4513,
									"src": "32379:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4419,
										"nodeType": "Block",
										"src": "32989:148:10",
										"statements": [
											{
												"expression": {
													"id": 4407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4402,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4400,
														"src": "32999:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4405,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4397,
																"src": "33018:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33012:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 4403,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33012:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33012:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32999:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 4408,
												"nodeType": "ExpressionStatement",
												"src": "32999:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4409,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4400,
														"src": "33038:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4410,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4397,
														"src": "33052:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33038:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4418,
												"nodeType": "IfStatement",
												"src": "33034:97:10",
												"trueBody": {
													"id": 4417,
													"nodeType": "Block",
													"src": "33059:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 4413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33110:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 4414,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4397,
																		"src": "33114:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4412,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "33080:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33080:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4416,
															"nodeType": "RevertStatement",
															"src": "33073:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4395,
										"nodeType": "StructuredDocumentation",
										"src": "32605:307:10",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 4420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32926:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32941:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4420,
												"src": "32934:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32934:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32933:14:10"
									},
									"returnParameters": {
										"id": 4401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4400,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32977:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4420,
												"src": "32971:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 4399,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32971:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32970:18:10"
									},
									"scope": 4513,
									"src": "32917:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4445,
										"nodeType": "Block",
										"src": "33527:148:10",
										"statements": [
											{
												"expression": {
													"id": 4433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4428,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4426,
														"src": "33537:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4431,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4423,
																"src": "33556:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33550:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 4429,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33550:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 4432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33550:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33537:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 4434,
												"nodeType": "ExpressionStatement",
												"src": "33537:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4435,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4426,
														"src": "33576:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4436,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4423,
														"src": "33590:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33576:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4444,
												"nodeType": "IfStatement",
												"src": "33572:97:10",
												"trueBody": {
													"id": 4443,
													"nodeType": "Block",
													"src": "33597:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 4439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33648:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 4440,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4423,
																		"src": "33652:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4438,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "33618:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33618:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4442,
															"nodeType": "RevertStatement",
															"src": "33611:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4421,
										"nodeType": "StructuredDocumentation",
										"src": "33143:307:10",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 4446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33464:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33479:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4446,
												"src": "33472:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4422,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33472:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33471:14:10"
									},
									"returnParameters": {
										"id": 4427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4426,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33515:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4446,
												"src": "33509:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 4425,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33509:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33508:18:10"
									},
									"scope": 4513,
									"src": "33455:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4471,
										"nodeType": "Block",
										"src": "34058:146:10",
										"statements": [
											{
												"expression": {
													"id": 4459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4454,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4452,
														"src": "34068:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4457,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4449,
																"src": "34086:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34081:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 4455,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34081:4:10",
																"typeDescriptions": {}
															}
														},
														"id": 4458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34081:11:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34068:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 4460,
												"nodeType": "ExpressionStatement",
												"src": "34068:24:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 4463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4461,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4452,
														"src": "34106:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 4462,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4449,
														"src": "34120:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34106:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4470,
												"nodeType": "IfStatement",
												"src": "34102:96:10",
												"trueBody": {
													"id": 4469,
													"nodeType": "Block",
													"src": "34127:71:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 4465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34178:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 4466,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4449,
																		"src": "34181:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 4464,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "34148:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 4467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34148:39:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4468,
															"nodeType": "RevertStatement",
															"src": "34141:46:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4447,
										"nodeType": "StructuredDocumentation",
										"src": "33681:302:10",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 4472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33997:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34011:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4472,
												"src": "34004:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4448,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34004:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34003:14:10"
									},
									"returnParameters": {
										"id": 4453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4452,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34046:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 4472,
												"src": "34041:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 4451,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34041:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34040:17:10"
									},
									"scope": 4513,
									"src": "33988:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4501,
										"nodeType": "Block",
										"src": "34444:250:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4480,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4475,
														"src": "34557:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 4485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34578:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 4484,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34578:6:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 4483,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34573:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 4486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34573:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 4487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34586:3:10",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34573:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 4482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34565:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34565:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 4488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34565:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34557:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4495,
												"nodeType": "IfStatement",
												"src": "34553:105:10",
												"trueBody": {
													"id": 4494,
													"nodeType": "Block",
													"src": "34592:66:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 4491,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4475,
																		"src": "34641:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 4490,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2775,
																	"src": "34613:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 4492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34613:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 4493,
															"nodeType": "RevertStatement",
															"src": "34606:41:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 4498,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4475,
															"src": "34681:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34674:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 4496,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34674:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 4499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34674:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 4479,
												"id": 4500,
												"nodeType": "Return",
												"src": "34667:20:10"
											}
										]
									},
									"documentation": {
										"id": 4473,
										"nodeType": "StructuredDocumentation",
										"src": "34210:165:10",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 4502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34389:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4475,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34406:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "34398:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34398:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34397:15:10"
									},
									"returnParameters": {
										"id": 4479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4502,
												"src": "34436:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 4477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34436:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34435:8:10"
									},
									"scope": 4513,
									"src": "34380:314:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4511,
										"nodeType": "Block",
										"src": "34853:87:10",
										"statements": [
											{
												"AST": {
													"nativeSrc": "34888:46:10",
													"nodeType": "YulBlock",
													"src": "34888:46:10",
													"statements": [
														{
															"nativeSrc": "34902:22:10",
															"nodeType": "YulAssignment",
															"src": "34902:22:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "b",
																				"nativeSrc": "34921:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "34921:1:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "34914:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "34914:6:10"
																		},
																		"nativeSrc": "34914:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "34914:9:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "34907:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "34907:6:10"
																},
																"nativeSrc": "34907:17:10",
																"nodeType": "YulFunctionCall",
																"src": "34907:17:10"
															},
															"variableNames": [
																{
																	"name": "u",
																	"nativeSrc": "34902:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "34902:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4505,
														"isOffset": false,
														"isSlot": false,
														"src": "34921:1:10",
														"valueSize": 1
													},
													{
														"declaration": 4508,
														"isOffset": false,
														"isSlot": false,
														"src": "34902:1:10",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 4510,
												"nodeType": "InlineAssembly",
												"src": "34863:71:10"
											}
										]
									},
									"documentation": {
										"id": 4503,
										"nodeType": "StructuredDocumentation",
										"src": "34700:90:10",
										"text": " @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."
									},
									"id": 4512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint",
									"nameLocation": "34804:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4505,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "34816:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4512,
												"src": "34811:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34811:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34810:8:10"
									},
									"returnParameters": {
										"id": 4509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4508,
												"mutability": "mutable",
												"name": "u",
												"nameLocation": "34850:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 4512,
												"src": "34842:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34842:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34841:11:10"
									},
									"scope": 4513,
									"src": "34795:145:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4514,
							"src": "769:34173:10",
							"usedErrors": [
								2758,
								2763,
								2770,
								2775
							],
							"usedEvents": []
						}
					],
					"src": "192:34751:10"
				},
				"id": 10
			},
			"contracts/tp3/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "contracts/tp3/SimpleSwap.sol",
					"exportedSymbols": {
						"ERC20": [
							799
						],
						"ERC20Pausable": [
							911
						],
						"Math": [
							2748
						],
						"Ownable": [
							147
						],
						"Panic": [
							1019
						],
						"SafeCast": [
							4513
						],
						"SimpleSwap": [
							4881
						]
					},
					"id": 4882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".27"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 4517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4882,
							"sourceUnit": 800,
							"src": "107:68:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4516,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 799,
										"src": "115:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
							"id": 4519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4882,
							"sourceUnit": 912,
							"src": "176:95:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4518,
										"name": "ERC20Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 911,
										"src": "184:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 4521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4882,
							"sourceUnit": 148,
							"src": "272:67:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4520,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "280:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "@openzeppelin/contracts/utils/math/Math.sol",
							"id": 4522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4882,
							"sourceUnit": 2749,
							"src": "340:53:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4523,
										"name": "ERC20",
										"nameLocations": [
											"419:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "419:5:11"
									},
									"id": 4524,
									"nodeType": "InheritanceSpecifier",
									"src": "419:5:11"
								},
								{
									"baseName": {
										"id": 4525,
										"name": "ERC20Pausable",
										"nameLocations": [
											"426:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 911,
										"src": "426:13:11"
									},
									"id": 4526,
									"nodeType": "InheritanceSpecifier",
									"src": "426:13:11"
								},
								{
									"baseName": {
										"id": 4527,
										"name": "Ownable",
										"nameLocations": [
											"441:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "441:7:11"
									},
									"id": 4528,
									"nodeType": "InheritanceSpecifier",
									"src": "441:7:11"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4881,
							"linearizedBaseContracts": [
								4881,
								147,
								911,
								1127,
								799,
								189,
								937,
								877,
								967
							],
							"name": "SimpleSwap",
							"nameLocation": "405:10:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4540,
										"nodeType": "Block",
										"src": "562:2:11",
										"statements": []
									},
									"id": 4541,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4c6971756964697479546f6b656e",
													"id": 4533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "503:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f933ee01de6197dfc99790e2b9ce0d1788640453258363f5ca7cb7fe5c652ca8",
														"typeString": "literal_string \"LiquidityToken\""
													},
													"value": "LiquidityToken"
												},
												{
													"hexValue": "4c544b",
													"id": 4534,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "521:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa266adb4956757eace80b2ec08ea4e7ab7a570ff7835dc956aed1349099c065",
														"typeString": "literal_string \"LTK\""
													},
													"value": "LTK"
												}
											],
											"id": 4535,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4532,
												"name": "ERC20",
												"nameLocations": [
													"497:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "497:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "497:30:11"
										},
										{
											"arguments": [
												{
													"id": 4537,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4530,
													"src": "544:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4538,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4536,
												"name": "Ownable",
												"nameLocations": [
													"536:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "536:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "536:21:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4530,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "475:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 4541,
												"src": "467:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "467:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "466:22:11"
									},
									"returnParameters": {
										"id": 4539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "562:0:11"
									},
									"scope": 4881,
									"src": "455:109:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 4543,
									"mutability": "mutable",
									"name": "reserveA",
									"nameLocation": "586:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 4881,
									"src": "570:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4542,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "570:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 4545,
									"mutability": "mutable",
									"name": "reserveB",
									"nameLocation": "616:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 4881,
									"src": "600:24:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4544,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "600:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 4553,
										"nodeType": "Block",
										"src": "665:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4550,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "675:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4552,
												"nodeType": "ExpressionStatement",
												"src": "675:8:11"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 4554,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4547,
												"name": "onlyOwner",
												"nameLocations": [
													"655:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "655:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "655:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "640:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "645:2:11"
									},
									"returnParameters": {
										"id": 4549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:11"
									},
									"scope": 4881,
									"src": "631:59:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4562,
										"nodeType": "Block",
										"src": "732:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4559,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "742:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "742:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4561,
												"nodeType": "ExpressionStatement",
												"src": "742:10:11"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 4563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4556,
												"name": "onlyOwner",
												"nameLocations": [
													"722:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "722:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "722:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "705:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:2:11"
									},
									"returnParameters": {
										"id": 4558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "732:0:11"
									},
									"scope": 4881,
									"src": "696:63:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										606,
										910
									],
									"body": {
										"id": 4583,
										"nodeType": "Block",
										"src": "951:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4578,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4565,
															"src": "975:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4579,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4567,
															"src": "981:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4580,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4569,
															"src": "985:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4575,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "961:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_SimpleSwap_$4881_$",
																"typeString": "type(contract super SimpleSwap)"
															}
														},
														"id": 4577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "967:7:11",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 910,
														"src": "961:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 4581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "961:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4582,
												"nodeType": "ExpressionStatement",
												"src": "961:30:11"
											}
										]
									},
									"id": 4584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "842:7:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 4573,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 4571,
												"name": "ERC20",
												"nameLocations": [
													"925:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "925:5:11"
											},
											{
												"id": 4572,
												"name": "ERC20Pausable",
												"nameLocations": [
													"932:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 911,
												"src": "932:13:11"
											}
										],
										"src": "916:30:11"
									},
									"parameters": {
										"id": 4570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "858:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "850:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "872:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "864:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "884:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4584,
												"src": "876:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:41:11"
									},
									"returnParameters": {
										"id": 4574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "951:0:11"
									},
									"scope": 4881,
									"src": "833:165:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4607,
										"nodeType": "Block",
										"src": "1227:69:11",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4596,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4587,
																			"src": "1246:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4597,
																			"name": "reserveB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4591,
																			"src": "1256:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1246:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4599,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1245:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4600,
																			"name": "reserveA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4589,
																			"src": "1269:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 4601,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4587,
																			"src": "1280:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1269:18:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4603,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1268:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1245:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 4605,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1244:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4595,
												"id": 4606,
												"nodeType": "Return",
												"src": "1237:52:11"
											}
										]
									},
									"documentation": {
										"id": 4585,
										"nodeType": "StructuredDocumentation",
										"src": "1004:123:11",
										"text": "  Given some asset amount and reserves, returns an amount of the other asset representing equivalent value."
									},
									"id": 4608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "1141:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4587,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1152:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4608,
												"src": "1147:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4586,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1147:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4589,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "1166:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4608,
												"src": "1161:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4588,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1161:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4591,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "1181:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4608,
												"src": "1176:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4590,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1176:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1146:44:11"
									},
									"returnParameters": {
										"id": 4595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4594,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1219:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4608,
												"src": "1214:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:14:11"
									},
									"scope": 4881,
									"src": "1132:164:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4780,
										"nodeType": "Block",
										"src": "1539:1156:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 4646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 4639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4634,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4610,
																	"src": "1593:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 4637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1611:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 4636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1603:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4635,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1603:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1603:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1593:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 4645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4640,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4612,
																	"src": "1617:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 4643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1635:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 4642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1627:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 4641,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1627:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1627:10:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1617:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1593:44:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373657321",
															"id": 4647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1639:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2",
																"typeString": "literal_string \"Invalid token addresses!\""
															},
															"value": "Invalid token addresses!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c40d43efb51932dacc421adc3ebe802ba4c587d40b7bf352344d3a9da269ae2",
																"typeString": "literal_string \"Invalid token addresses!\""
															}
														],
														"id": 4633,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1585:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1585:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4649,
												"nodeType": "ExpressionStatement",
												"src": "1585:81:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4651,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4622,
																"src": "1684:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1698:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1690:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1690:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 4655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1690:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1684:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697069656e742061646472657373",
															"id": 4657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															},
															"value": "Invalid recipient address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
																"typeString": "literal_string \"Invalid recipient address\""
															}
														],
														"id": 4650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1676:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:54:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4659,
												"nodeType": "ExpressionStatement",
												"src": "1676:54:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 4667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4661,
																			"name": "amountADesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4614,
																			"src": "1749:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 4662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1767:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1749:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4664,
																			"name": "amountBDesired",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4616,
																			"src": "1772:14:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 4665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1790:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1772:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1749:42:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4668,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1748:44:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420706172616d657465727321",
															"id": 4669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1793:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0",
																"typeString": "literal_string \"Invalid input parameters!\""
															},
															"value": "Invalid input parameters!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a99472d817aa31c3098e3584d2fc89a352ad23d205db53b7ca634c5aace4add0",
																"typeString": "literal_string \"Invalid input parameters!\""
															}
														],
														"id": 4660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1740:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1740:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4671,
												"nodeType": "ExpressionStatement",
												"src": "1740:81:11"
											},
											{
												"expression": {
													"id": 4679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 4672,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4627,
																"src": "1834:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4673,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4629,
																"src": "1843:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4674,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "1833:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4676,
																"name": "amountADesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4614,
																"src": "1880:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4677,
																"name": "amountBDesired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4616,
																"src": "1896:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4675,
															"name": "calculateLiquidityAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4838,
															"src": "1854:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256,uint256) view returns (uint256,uint256)"
															}
														},
														"id": 4678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1854:57:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256)"
														}
													},
													"src": "1833:78:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4680,
												"nodeType": "ExpressionStatement",
												"src": "1833:78:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4682,
																		"name": "amountA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4627,
																		"src": "1930:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 4683,
																		"name": "amountAMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4618,
																		"src": "1940:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1930:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4685,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1929:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e4121",
															"id": 4686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1952:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b",
																"typeString": "literal_string \"Not meet the minimum for TokenA!\""
															},
															"value": "Not meet the minimum for TokenA!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5d544d9598c374ab12c5b47e51903fd3766ece920bbb5f73a4f88ef1e045f6b",
																"typeString": "literal_string \"Not meet the minimum for TokenA!\""
															}
														],
														"id": 4681,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1921:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1921:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4688,
												"nodeType": "ExpressionStatement",
												"src": "1921:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 4692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 4690,
																		"name": "amountB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4629,
																		"src": "2006:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 4691,
																		"name": "amountBMin",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4620,
																		"src": "2016:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2006:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 4693,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2005:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206d65657420746865206d696e696d756d20666f7220546f6b656e4221",
															"id": 4694,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2028:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e",
																"typeString": "literal_string \"Not meet the minimum for TokenB!\""
															},
															"value": "Not meet the minimum for TokenB!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41bc4e7c2f89f925d39cc30ea597c67e11114de8d10245ee4b79f18f5b14332e",
																"typeString": "literal_string \"Not meet the minimum for TokenB!\""
															}
														],
														"id": 4689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1997:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1997:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4696,
												"nodeType": "ExpressionStatement",
												"src": "1997:66:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 4702,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2153:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 4703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2157:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2153:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 4699,
																				"name": "tokenA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4610,
																				"src": "2135:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 4698,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "2129:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 4700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2129:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 4701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2143:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "2129:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 4704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2129:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4705,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4627,
																"src": "2168:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2129:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f6b656e412066756e647321",
															"id": 4707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789",
																"typeString": "literal_string \"Insufficient TokenA funds!\""
															},
															"value": "Insufficient TokenA funds!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a6c75e5414525604f26f311def3a936d03df89b9cb5de26cf597b6b6de5c789",
																"typeString": "literal_string \"Insufficient TokenA funds!\""
															}
														],
														"id": 4697,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:85:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4709,
												"nodeType": "ExpressionStatement",
												"src": "2121:85:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 4715,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2248:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 4716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2252:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2248:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 4712,
																				"name": "tokenB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4612,
																				"src": "2230:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 4711,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 799,
																			"src": "2224:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 4713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2224:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$799",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 4714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2238:9:11",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "2224:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 4717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2224:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 4718,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4629,
																"src": "2263:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2224:46:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420546f6b656e422066756e647321",
															"id": 4720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2272:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e",
																"typeString": "literal_string \"Insufficient TokenB funds!\""
															},
															"value": "Insufficient TokenB funds!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f12227fd3bd8ce7696e7dc09ef9e7ca0c25439ffa5f0b041fd37b14aa69417e",
																"typeString": "literal_string \"Insufficient TokenB funds!\""
															}
														],
														"id": 4710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2216:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2216:85:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4722,
												"nodeType": "ExpressionStatement",
												"src": "2216:85:11"
											},
											{
												"expression": {
													"id": 4725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4723,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4543,
														"src": "2320:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4724,
														"name": "amountA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4627,
														"src": "2332:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2320:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4726,
												"nodeType": "ExpressionStatement",
												"src": "2320:19:11"
											},
											{
												"expression": {
													"id": 4729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4727,
														"name": "reserveB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4545,
														"src": "2349:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 4728,
														"name": "amountB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4629,
														"src": "2361:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2349:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4730,
												"nodeType": "ExpressionStatement",
												"src": "2349:19:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4735,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2406:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2410:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2406:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4739,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2426:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 4738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2418:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4737,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2418:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2418:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4741,
															"name": "amountA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4627,
															"src": "2433:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4732,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4610,
																	"src": "2385:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4731,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "2379:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 4733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2379:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 4734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2393:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2379:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 4742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4743,
												"nodeType": "ExpressionStatement",
												"src": "2379:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4748,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2478:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2482:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2478:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4752,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2498:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 4751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2490:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2490:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2490:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4754,
															"name": "amountB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4629,
															"src": "2505:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 4745,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4612,
																	"src": "2457:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4744,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "2451:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$799_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 4746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2451:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$799",
																"typeString": "contract ERC20"
															}
														},
														"id": 4747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2465:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "2451:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 4755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2451:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4756,
												"nodeType": "ExpressionStatement",
												"src": "2451:62:11"
											},
											{
												"expression": {
													"id": 4762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4757,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4631,
														"src": "2524:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4759,
																"name": "amountA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4627,
																"src": "2560:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 4760,
																"name": "amountB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4629,
																"src": "2569:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 4758,
															"name": "calculateLiquidityToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4880,
															"src": "2536:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256) view returns (uint256)"
															}
														},
														"id": 4761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2536:41:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2524:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 4763,
												"nodeType": "ExpressionStatement",
												"src": "2524:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4767,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2601:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2605:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2601:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4769,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4631,
															"src": "2613:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4764,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "2587:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																"typeString": "contract SimpleSwap"
															}
														},
														"id": 4766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2592:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2587:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 4770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2587:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4771,
												"nodeType": "ExpressionStatement",
												"src": "2587:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 4776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4773,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4624,
																"src": "2640:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 4774,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2651:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 4775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2657:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2651:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2640:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "446561646c696e65207265616368656421",
															"id": 4777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0",
																"typeString": "literal_string \"Deadline reached!\""
															},
															"value": "Deadline reached!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f698e7b173ebe222f1aeb2fa0967d6932fbc5e0a40e63b8dd3d57d039d5684c0",
																"typeString": "literal_string \"Deadline reached!\""
															}
														],
														"id": 4772,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2632:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2632:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4779,
												"nodeType": "ExpressionStatement",
												"src": "2632:56:11"
											}
										]
									},
									"functionSelector": "e8e33700",
									"id": 4781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1312:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4610,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1333:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1325:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1325:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4612,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1349:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1341:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4614,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "1362:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1357:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4613,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4616,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "1383:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1378:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4615,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1378:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4618,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1413:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1408:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4617,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1408:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4620,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1430:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1425:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4619,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4622,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1450:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1442:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1442:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4624,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1459:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1454:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4623,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1454:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:144:11"
									},
									"returnParameters": {
										"id": 4632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4627,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1496:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4629,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1510:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4631,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1529:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 4781,
												"src": "1524:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1524:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:44:11"
									},
									"scope": 4881,
									"src": "1303:1392:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4837,
										"nodeType": "Block",
										"src": "2837:441:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4792,
															"name": "reserveA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4543,
															"src": "2851:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 4793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2863:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2851:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 4797,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4795,
															"name": "reserveB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4545,
															"src": "2868:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 4796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2880:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2868:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2851:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4804,
												"nodeType": "IfStatement",
												"src": "2847:100:11",
												"trueBody": {
													"id": 4803,
													"nodeType": "Block",
													"src": "2883:64:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 4799,
																		"name": "amountADesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4783,
																		"src": "2905:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4800,
																		"name": "amountBDesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4785,
																		"src": "2921:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4801,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2904:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4791,
															"id": 4802,
															"nodeType": "Return",
															"src": "2897:39:11"
														}
													]
												}
											},
											{
												"assignments": [
													4806
												],
												"declarations": [
													{
														"constant": false,
														"id": 4806,
														"mutability": "mutable",
														"name": "amountBOptimal",
														"nameLocation": "2961:14:11",
														"nodeType": "VariableDeclaration",
														"scope": 4837,
														"src": "2956:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4805,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2956:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4813,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 4807,
																	"name": "amountADesired",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4783,
																	"src": "2979:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 4808,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4545,
																	"src": "2996:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2979:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 4810,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2978:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 4811,
														"name": "reserveA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4543,
														"src": "3008:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2978:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2956:60:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4814,
														"name": "amountBOptimal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4806,
														"src": "3030:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 4815,
														"name": "amountBDesired",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4785,
														"src": "3048:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3030:32:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4835,
													"nodeType": "Block",
													"src": "3134:138:11",
													"statements": [
														{
															"assignments": [
																4823
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 4823,
																	"mutability": "mutable",
																	"name": "amountAOptimal",
																	"nameLocation": "3153:14:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 4835,
																	"src": "3148:19:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 4822,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3148:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 4830,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 4829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 4826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 4824,
																				"name": "amountBDesired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4785,
																				"src": "3171:14:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 4825,
																				"name": "reserveA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4543,
																				"src": "3188:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3171:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 4827,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3170:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 4828,
																	"name": "reserveB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4545,
																	"src": "3200:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3170:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3148:60:11"
														},
														{
															"expression": {
																"components": [
																	{
																		"id": 4831,
																		"name": "amountAOptimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4823,
																		"src": "3230:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4832,
																		"name": "amountBDesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4785,
																		"src": "3246:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4833,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3229:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4791,
															"id": 4834,
															"nodeType": "Return",
															"src": "3222:39:11"
														}
													]
												},
												"id": 4836,
												"nodeType": "IfStatement",
												"src": "3026:246:11",
												"trueBody": {
													"id": 4821,
													"nodeType": "Block",
													"src": "3064:64:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"id": 4817,
																		"name": "amountADesired",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4783,
																		"src": "3086:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 4818,
																		"name": "amountBOptimal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4806,
																		"src": "3102:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4819,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3085:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint256)"
																}
															},
															"functionReturnParameters": 4791,
															"id": 4820,
															"nodeType": "Return",
															"src": "3078:39:11"
														}
													]
												}
											}
										]
									},
									"id": 4838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateLiquidityAmounts",
									"nameLocation": "2710:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4783,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "2741:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 4838,
												"src": "2736:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4782,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2736:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4785,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "2762:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 4838,
												"src": "2757:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4784,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2735:42:11"
									},
									"returnParameters": {
										"id": 4791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4788,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2814:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4838,
												"src": "2809:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4787,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2809:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4790,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "2828:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4838,
												"src": "2823:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4789,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2823:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2808:28:11"
									},
									"scope": 4881,
									"src": "2701:577:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4879,
										"nodeType": "Block",
										"src": "3382:217:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4847,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "3396:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																	"typeString": "contract SimpleSwap"
																}
															},
															"id": 4848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3401:11:11",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 372,
															"src": "3396:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 4849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3396:18:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3418:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3396:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4877,
													"nodeType": "Block",
													"src": "3486:107:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 4864,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 4862,
																								"name": "amountA",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4840,
																								"src": "3518:7:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 4863,
																								"name": "reserveA",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4543,
																								"src": "3528:8:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3518:18:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 4865,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3517:20:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 4868,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 4866,
																								"name": "amountB",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4842,
																								"src": "3540:7:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"id": 4867,
																								"name": "reserveB",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4545,
																								"src": "3550:8:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3540:18:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 4869,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "3539:20:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 4860,
																					"name": "Math",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2748,
																					"src": "3508:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_Math_$2748_$",
																						"typeString": "type(library Math)"
																					}
																				},
																				"id": 4861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3513:3:11",
																				"memberName": "min",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1454,
																				"src": "3508:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 4870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3508:52:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 4871,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3563:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_SimpleSwap_$4881",
																						"typeString": "contract SimpleSwap"
																					}
																				},
																				"id": 4872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3568:11:11",
																				"memberName": "totalSupply",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 372,
																				"src": "3563:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																					"typeString": "function () view external returns (uint256)"
																				}
																			},
																			"id": 4873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3563:18:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3508:73:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 4875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3507:75:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 4846,
															"id": 4876,
															"nodeType": "Return",
															"src": "3500:82:11"
														}
													]
												},
												"id": 4878,
												"nodeType": "IfStatement",
												"src": "3393:200:11",
												"trueBody": {
													"id": 4859,
													"nodeType": "Block",
													"src": "3420:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 4856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 4854,
																			"name": "amountA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4840,
																			"src": "3452:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 4855,
																			"name": "amountB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4842,
																			"src": "3462:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3452:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 4852,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2748,
																		"src": "3442:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2748_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 4853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3447:4:11",
																	"memberName": "sqrt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2292,
																	"src": "3442:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 4857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3442:28:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 4846,
															"id": 4858,
															"nodeType": "Return",
															"src": "3435:35:11"
														}
													]
												}
											}
										]
									},
									"id": 4880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateLiquidityToken",
									"nameLocation": "3293:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4840,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3325:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4880,
												"src": "3317:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4842,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3342:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4880,
												"src": "3334:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3334:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3316:34:11"
									},
									"returnParameters": {
										"id": 4846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4880,
												"src": "3374:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:9:11"
									},
									"scope": 4881,
									"src": "3284:315:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4882,
							"src": "396:3205:11",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188,
								1041,
								1044
							],
							"usedEvents": [
								24,
								811,
								820,
								1033,
								1038
							]
						}
					],
					"src": "81:3521:11"
				},
				"id": 11
			}
		}
	}
}